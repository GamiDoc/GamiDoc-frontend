{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _length = _interopRequireDefault(require(\"../attributedString/length\"));\n\nvar _slice = _interopRequireDefault(require(\"../attributedString/slice\"));\n/**\n * Breaks attributed string into paragraphs\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {Object}  attributed string\n * @return {Array} attributed string array\n */\n\n\nvar splitParagraphs = function splitParagraphs() {\n  return function (attributedString) {\n    var res = [];\n    var start = 0;\n    var breakPoint = attributedString.string.indexOf('\\n') + 1;\n\n    while (breakPoint > 0) {\n      res.push((0, _slice.default)(start, breakPoint, attributedString));\n      start = breakPoint;\n      breakPoint = attributedString.string.indexOf('\\n', breakPoint) + 1;\n    }\n\n    if (start === 0) {\n      res.push(attributedString);\n    } else if (start < attributedString.string.length) {\n      res.push((0, _slice.default)(start, (0, _length.default)(attributedString), attributedString));\n    }\n\n    return res;\n  };\n};\n\nvar _default = splitParagraphs;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","exports","__esModule","_length","_slice","splitParagraphs","attributedString","res","start","breakPoint","string","indexOf","push","length","_default"],"sources":["/home/carlobottaro/Documents/UniversitÃ /gamification/node_modules/@react-pdf/textkit/lib/layout/splitParagraphs.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _length = _interopRequireDefault(require(\"../attributedString/length\"));\n\nvar _slice = _interopRequireDefault(require(\"../attributedString/slice\"));\n\n/**\n * Breaks attributed string into paragraphs\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {Object}  attributed string\n * @return {Array} attributed string array\n */\nvar splitParagraphs = function splitParagraphs() {\n  return function (attributedString) {\n    var res = [];\n    var start = 0;\n    var breakPoint = attributedString.string.indexOf('\\n') + 1;\n\n    while (breakPoint > 0) {\n      res.push((0, _slice.default)(start, breakPoint, attributedString));\n      start = breakPoint;\n      breakPoint = attributedString.string.indexOf('\\n', breakPoint) + 1;\n    }\n\n    if (start === 0) {\n      res.push(attributedString);\n    } else if (start < attributedString.string.length) {\n      res.push((0, _slice.default)(start, (0, _length.default)(attributedString), attributedString));\n    }\n\n    return res;\n  };\n};\n\nvar _default = splitParagraphs;\nexports.default = _default;"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAAP,CAAwDC,OAArF;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACD,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIG,OAAO,GAAGL,sBAAsB,CAACC,OAAO,CAAC,4BAAD,CAAR,CAApC;;AAEA,IAAIK,MAAM,GAAGN,sBAAsB,CAACC,OAAO,CAAC,2BAAD,CAAR,CAAnC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIM,eAAe,GAAG,SAASA,eAAT,GAA2B;EAC/C,OAAO,UAAUC,gBAAV,EAA4B;IACjC,IAAIC,GAAG,GAAG,EAAV;IACA,IAAIC,KAAK,GAAG,CAAZ;IACA,IAAIC,UAAU,GAAGH,gBAAgB,CAACI,MAAjB,CAAwBC,OAAxB,CAAgC,IAAhC,IAAwC,CAAzD;;IAEA,OAAOF,UAAU,GAAG,CAApB,EAAuB;MACrBF,GAAG,CAACK,IAAJ,CAAS,CAAC,GAAGR,MAAM,CAACJ,OAAX,EAAoBQ,KAApB,EAA2BC,UAA3B,EAAuCH,gBAAvC,CAAT;MACAE,KAAK,GAAGC,UAAR;MACAA,UAAU,GAAGH,gBAAgB,CAACI,MAAjB,CAAwBC,OAAxB,CAAgC,IAAhC,EAAsCF,UAAtC,IAAoD,CAAjE;IACD;;IAED,IAAID,KAAK,KAAK,CAAd,EAAiB;MACfD,GAAG,CAACK,IAAJ,CAASN,gBAAT;IACD,CAFD,MAEO,IAAIE,KAAK,GAAGF,gBAAgB,CAACI,MAAjB,CAAwBG,MAApC,EAA4C;MACjDN,GAAG,CAACK,IAAJ,CAAS,CAAC,GAAGR,MAAM,CAACJ,OAAX,EAAoBQ,KAApB,EAA2B,CAAC,GAAGL,OAAO,CAACH,OAAZ,EAAqBM,gBAArB,CAA3B,EAAmEA,gBAAnE,CAAT;IACD;;IAED,OAAOC,GAAP;EACD,CAlBD;AAmBD,CApBD;;AAsBA,IAAIO,QAAQ,GAAGT,eAAf;AACAJ,OAAO,CAACD,OAAR,GAAkBc,QAAlB"},"metadata":{},"sourceType":"script"}