{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar _layout = _interopRequireDefault(require(\"@react-pdf/textkit/lib/layout\"));\n\nvar _linebreaker = _interopRequireDefault(require(\"@react-pdf/textkit/lib/engines/linebreaker\"));\n\nvar _attributedString = _interopRequireDefault(require(\"@react-pdf/textkit/lib/attributedString\"));\n\nvar _justification = _interopRequireDefault(require(\"@react-pdf/textkit/lib/engines/justification\"));\n\nvar _scriptItemizer = _interopRequireDefault(require(\"@react-pdf/textkit/lib/engines/scriptItemizer\"));\n\nvar _wordHyphenation = _interopRequireDefault(require(\"@react-pdf/textkit/lib/engines/wordHyphenation\"));\n\nvar _textDecoration = _interopRequireDefault(require(\"@react-pdf/textkit/lib/engines/textDecoration\"));\n\nvar _transformText = _interopRequireDefault(require(\"../text/transformText\"));\n\nvar _fontSubstitution = _interopRequireDefault(require(\"../text/fontSubstitution\"));\n\nvar isTextInstance = R.propEq('type', P.TextInstance);\nvar engines = {\n  linebreaker: _linebreaker.default,\n  justification: _justification.default,\n  scriptItemizer: _scriptItemizer.default,\n  wordHyphenation: _wordHyphenation.default,\n  fontSubstitution: _fontSubstitution.default,\n  textDecoration: _textDecoration.default\n};\nvar engine = (0, _layout.default)(engines);\n\nvar getFragments = function getFragments(fontStore, instance) {\n  if (!instance) return [{\n    string: ''\n  }];\n  var fragments = [];\n  var _instance$props = instance.props,\n      _instance$props$fill = _instance$props.fill,\n      fill = _instance$props$fill === void 0 ? 'black' : _instance$props$fill,\n      _instance$props$fontF = _instance$props.fontFamily,\n      fontFamily = _instance$props$fontF === void 0 ? 'Helvetica' : _instance$props$fontF,\n      fontWeight = _instance$props.fontWeight,\n      fontStyle = _instance$props.fontStyle,\n      _instance$props$fontS = _instance$props.fontSize,\n      fontSize = _instance$props$fontS === void 0 ? 18 : _instance$props$fontS,\n      textDecoration = _instance$props.textDecoration,\n      textDecorationColor = _instance$props.textDecorationColor,\n      textDecorationStyle = _instance$props.textDecorationStyle,\n      textTransform = _instance$props.textTransform,\n      opacity = _instance$props.opacity;\n  var obj = fontStore ? fontStore.getFont({\n    fontFamily: fontFamily,\n    fontWeight: fontWeight,\n    fontStyle: fontStyle\n  }) : null;\n  var font = obj ? obj.data : fontFamily;\n  var attributes = {\n    font: font,\n    opacity: opacity,\n    fontSize: fontSize,\n    color: fill,\n    underlineStyle: textDecorationStyle,\n    underline: textDecoration === 'underline' || textDecoration === 'underline line-through' || textDecoration === 'line-through underline',\n    underlineColor: textDecorationColor || fill,\n    strike: textDecoration === 'line-through' || textDecoration === 'underline line-through' || textDecoration === 'line-through underline',\n    strikeStyle: textDecorationStyle,\n    strikeColor: textDecorationColor || fill\n  };\n\n  for (var i = 0; i < instance.children.length; i += 1) {\n    var child = instance.children[i];\n\n    if (isTextInstance(child)) {\n      fragments.push({\n        string: (0, _transformText.default)(child.value, textTransform),\n        attributes: attributes\n      });\n    } else if (child) {\n      fragments.push.apply(fragments, getFragments(child));\n    }\n  }\n\n  return fragments;\n};\n\nvar getAttributedString = function getAttributedString(fontStore, instance) {\n  return _attributedString.default.fromFragments(getFragments(fontStore, instance));\n};\n\nvar AlmostInfinity = 999999999999;\nvar shrinkWhitespaceFactor = {\n  before: -0.5,\n  after: -0.5\n};\n\nvar layoutTspan = function layoutTspan(fontStore) {\n  return function (node) {\n    var attributedString = getAttributedString(fontStore, node);\n    var x = R.pathOr(0, ['props', 'x'], node);\n    var y = R.pathOr(0, ['props', 'y'], node);\n    var container = {\n      x: x,\n      y: y,\n      width: AlmostInfinity,\n      height: AlmostInfinity\n    };\n    var hyphenationCallback = node.props.hyphenationCallback || (fontStore === null || fontStore === void 0 ? void 0 : fontStore.getHyphenationCallback()) || null;\n    var layoutOptions = {\n      hyphenationCallback: hyphenationCallback,\n      shrinkWhitespaceFactor: shrinkWhitespaceFactor\n    };\n    var lines = R.compose(R.reduce(R.concat, []), engine)(attributedString, container, layoutOptions);\n    return R.assoc('lines', lines, node);\n  };\n};\n\nvar layoutText = function layoutText(fontStore, node) {\n  return R.evolve({\n    children: R.map(layoutTspan(fontStore))\n  })(node);\n};\n\nvar _default = R.curryN(2, layoutText);\n\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","P","_layout","_linebreaker","_attributedString","_justification","_scriptItemizer","_wordHyphenation","_textDecoration","_transformText","_fontSubstitution","isTextInstance","propEq","TextInstance","engines","linebreaker","justification","scriptItemizer","wordHyphenation","fontSubstitution","textDecoration","engine","getFragments","fontStore","instance","string","fragments","_instance$props","props","_instance$props$fill","fill","_instance$props$fontF","fontFamily","fontWeight","fontStyle","_instance$props$fontS","fontSize","textDecorationColor","textDecorationStyle","textTransform","opacity","obj","getFont","font","data","attributes","color","underlineStyle","underline","underlineColor","strike","strikeStyle","strikeColor","i","children","length","child","push","value","apply","getAttributedString","fromFragments","AlmostInfinity","shrinkWhitespaceFactor","before","after","layoutTspan","node","attributedString","x","pathOr","y","container","width","height","hyphenationCallback","getHyphenationCallback","layoutOptions","lines","compose","reduce","concat","assoc","layoutText","evolve","map","_default","curryN"],"sources":["/home/carlobottaro/Documents/UniversitÃ /gamification/node_modules/@react-pdf/layout/lib/svg/layoutText.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar _layout = _interopRequireDefault(require(\"@react-pdf/textkit/lib/layout\"));\n\nvar _linebreaker = _interopRequireDefault(require(\"@react-pdf/textkit/lib/engines/linebreaker\"));\n\nvar _attributedString = _interopRequireDefault(require(\"@react-pdf/textkit/lib/attributedString\"));\n\nvar _justification = _interopRequireDefault(require(\"@react-pdf/textkit/lib/engines/justification\"));\n\nvar _scriptItemizer = _interopRequireDefault(require(\"@react-pdf/textkit/lib/engines/scriptItemizer\"));\n\nvar _wordHyphenation = _interopRequireDefault(require(\"@react-pdf/textkit/lib/engines/wordHyphenation\"));\n\nvar _textDecoration = _interopRequireDefault(require(\"@react-pdf/textkit/lib/engines/textDecoration\"));\n\nvar _transformText = _interopRequireDefault(require(\"../text/transformText\"));\n\nvar _fontSubstitution = _interopRequireDefault(require(\"../text/fontSubstitution\"));\n\nvar isTextInstance = R.propEq('type', P.TextInstance);\nvar engines = {\n  linebreaker: _linebreaker.default,\n  justification: _justification.default,\n  scriptItemizer: _scriptItemizer.default,\n  wordHyphenation: _wordHyphenation.default,\n  fontSubstitution: _fontSubstitution.default,\n  textDecoration: _textDecoration.default\n};\nvar engine = (0, _layout.default)(engines);\n\nvar getFragments = function getFragments(fontStore, instance) {\n  if (!instance) return [{\n    string: ''\n  }];\n  var fragments = [];\n  var _instance$props = instance.props,\n      _instance$props$fill = _instance$props.fill,\n      fill = _instance$props$fill === void 0 ? 'black' : _instance$props$fill,\n      _instance$props$fontF = _instance$props.fontFamily,\n      fontFamily = _instance$props$fontF === void 0 ? 'Helvetica' : _instance$props$fontF,\n      fontWeight = _instance$props.fontWeight,\n      fontStyle = _instance$props.fontStyle,\n      _instance$props$fontS = _instance$props.fontSize,\n      fontSize = _instance$props$fontS === void 0 ? 18 : _instance$props$fontS,\n      textDecoration = _instance$props.textDecoration,\n      textDecorationColor = _instance$props.textDecorationColor,\n      textDecorationStyle = _instance$props.textDecorationStyle,\n      textTransform = _instance$props.textTransform,\n      opacity = _instance$props.opacity;\n  var obj = fontStore ? fontStore.getFont({\n    fontFamily: fontFamily,\n    fontWeight: fontWeight,\n    fontStyle: fontStyle\n  }) : null;\n  var font = obj ? obj.data : fontFamily;\n  var attributes = {\n    font: font,\n    opacity: opacity,\n    fontSize: fontSize,\n    color: fill,\n    underlineStyle: textDecorationStyle,\n    underline: textDecoration === 'underline' || textDecoration === 'underline line-through' || textDecoration === 'line-through underline',\n    underlineColor: textDecorationColor || fill,\n    strike: textDecoration === 'line-through' || textDecoration === 'underline line-through' || textDecoration === 'line-through underline',\n    strikeStyle: textDecorationStyle,\n    strikeColor: textDecorationColor || fill\n  };\n\n  for (var i = 0; i < instance.children.length; i += 1) {\n    var child = instance.children[i];\n\n    if (isTextInstance(child)) {\n      fragments.push({\n        string: (0, _transformText.default)(child.value, textTransform),\n        attributes: attributes\n      });\n    } else if (child) {\n      fragments.push.apply(fragments, getFragments(child));\n    }\n  }\n\n  return fragments;\n};\n\nvar getAttributedString = function getAttributedString(fontStore, instance) {\n  return _attributedString.default.fromFragments(getFragments(fontStore, instance));\n};\n\nvar AlmostInfinity = 999999999999;\nvar shrinkWhitespaceFactor = {\n  before: -0.5,\n  after: -0.5\n};\n\nvar layoutTspan = function layoutTspan(fontStore) {\n  return function (node) {\n    var attributedString = getAttributedString(fontStore, node);\n    var x = R.pathOr(0, ['props', 'x'], node);\n    var y = R.pathOr(0, ['props', 'y'], node);\n    var container = {\n      x: x,\n      y: y,\n      width: AlmostInfinity,\n      height: AlmostInfinity\n    };\n    var hyphenationCallback = node.props.hyphenationCallback || (fontStore === null || fontStore === void 0 ? void 0 : fontStore.getHyphenationCallback()) || null;\n    var layoutOptions = {\n      hyphenationCallback: hyphenationCallback,\n      shrinkWhitespaceFactor: shrinkWhitespaceFactor\n    };\n    var lines = R.compose(R.reduce(R.concat, []), engine)(attributedString, container, layoutOptions);\n    return R.assoc('lines', lines, node);\n  };\n};\n\nvar layoutText = function layoutText(fontStore, node) {\n  return R.evolve({\n    children: R.map(layoutTspan(fontStore))\n  })(node);\n};\n\nvar _default = R.curryN(2, layoutText);\n\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}