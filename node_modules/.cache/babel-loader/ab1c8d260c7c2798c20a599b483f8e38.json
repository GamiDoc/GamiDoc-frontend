{"ast":null,"code":"import _curry2 from './internal/_curry2.js';\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\n\nvar zip = /*#__PURE__*/_curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n\n  return rv;\n});\n\nexport default zip;","map":{"version":3,"names":["_curry2","zip","a","b","rv","idx","len","Math","min","length"],"sources":["/home/carlobottaro/Documents/UniversitÃ /gamification/node_modules/ramda/es/zip.js"],"sourcesContent":["import _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\nvar zip = /*#__PURE__*/_curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n  return rv;\n});\nexport default zip;"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,GAAG,GAAG,aAAaD,OAAO,CAAC,SAASC,GAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmB;EAChD,IAAIC,EAAE,GAAG,EAAT;EACA,IAAIC,GAAG,GAAG,CAAV;EACA,IAAIC,GAAG,GAAGC,IAAI,CAACC,GAAL,CAASN,CAAC,CAACO,MAAX,EAAmBN,CAAC,CAACM,MAArB,CAAV;;EACA,OAAOJ,GAAG,GAAGC,GAAb,EAAkB;IAChBF,EAAE,CAACC,GAAD,CAAF,GAAU,CAACH,CAAC,CAACG,GAAD,CAAF,EAASF,CAAC,CAACE,GAAD,CAAV,CAAV;IACAA,GAAG,IAAI,CAAP;EACD;;EACD,OAAOD,EAAP;AACD,CAT6B,CAA9B;;AAUA,eAAeH,GAAf"},"metadata":{},"sourceType":"module"}