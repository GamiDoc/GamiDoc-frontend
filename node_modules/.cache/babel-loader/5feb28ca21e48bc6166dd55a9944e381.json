{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n/**\n * Create attributed string from text fragments\n *\n * @param  {Array}  fragments\n * @return {Object} attributed string\n */\n\n\nvar fromFragments = function fromFragments(fragments) {\n  var offset = 0;\n  var getRuns = R.map(function (fragment) {\n    var run = {\n      start: offset,\n      end: offset + fragment.string.length,\n      attributes: fragment.attributes || {}\n    };\n    offset += fragment.string.length;\n    return run;\n  });\n  return R.applySpec({\n    runs: getRuns,\n    string: R.o(R.join(''), R.pluck('string'))\n  })(fragments);\n};\n\nvar _default = fromFragments;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireWildcard","require","default","exports","__esModule","R","fromFragments","fragments","offset","getRuns","map","fragment","run","start","end","string","length","attributes","applySpec","runs","o","join","pluck","_default"],"sources":["/home/carlobottaro/Documents/Universit√†/gamification/node_modules/@react-pdf/textkit/lib/attributedString/fromFragments.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\n/**\n * Create attributed string from text fragments\n *\n * @param  {Array}  fragments\n * @return {Object} attributed string\n */\nvar fromFragments = function fromFragments(fragments) {\n  var offset = 0;\n  var getRuns = R.map(function (fragment) {\n    var run = {\n      start: offset,\n      end: offset + fragment.string.length,\n      attributes: fragment.attributes || {}\n    };\n    offset += fragment.string.length;\n    return run;\n  });\n  return R.applySpec({\n    runs: getRuns,\n    string: R.o(R.join(''), R.pluck('string'))\n  })(fragments);\n};\n\nvar _default = fromFragments;\nexports.default = _default;"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAAP,CAAyDC,OAAvF;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACD,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIG,CAAC,GAAGL,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIK,aAAa,GAAG,SAASA,aAAT,CAAuBC,SAAvB,EAAkC;EACpD,IAAIC,MAAM,GAAG,CAAb;EACA,IAAIC,OAAO,GAAGJ,CAAC,CAACK,GAAF,CAAM,UAAUC,QAAV,EAAoB;IACtC,IAAIC,GAAG,GAAG;MACRC,KAAK,EAAEL,MADC;MAERM,GAAG,EAAEN,MAAM,GAAGG,QAAQ,CAACI,MAAT,CAAgBC,MAFtB;MAGRC,UAAU,EAAEN,QAAQ,CAACM,UAAT,IAAuB;IAH3B,CAAV;IAKAT,MAAM,IAAIG,QAAQ,CAACI,MAAT,CAAgBC,MAA1B;IACA,OAAOJ,GAAP;EACD,CARa,CAAd;EASA,OAAOP,CAAC,CAACa,SAAF,CAAY;IACjBC,IAAI,EAAEV,OADW;IAEjBM,MAAM,EAAEV,CAAC,CAACe,CAAF,CAAIf,CAAC,CAACgB,IAAF,CAAO,EAAP,CAAJ,EAAgBhB,CAAC,CAACiB,KAAF,CAAQ,QAAR,CAAhB;EAFS,CAAZ,EAGJf,SAHI,CAAP;AAID,CAfD;;AAiBA,IAAIgB,QAAQ,GAAGjB,aAAf;AACAH,OAAO,CAACD,OAAR,GAAkBqB,QAAlB"},"metadata":{},"sourceType":"script"}