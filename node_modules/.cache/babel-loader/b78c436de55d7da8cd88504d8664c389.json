{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _filter = _interopRequireDefault(require(\"../run/filter\"));\n\nvar _advanceWidthBetween = _interopRequireDefault(require(\"../run/advanceWidthBetween\"));\n/**\n * Advance width between start and end\n * Does not consider ligature splitting for the moment.\n * Check performance impact on supporting this\n *\n * @param  {number}  start offset\n * @param  {number}  end offset\n * @param  {Object}  attributedString\n * @return {number} advance width\n */\n\n\nvar advanceWidthBetween = function advanceWidthBetween(start, end, string) {\n  return R.compose(R.sum, R.map((0, _advanceWidthBetween.default)(start, end)), (0, _filter.default)(start, end), R.propOr([], 'runs'))(string);\n};\n\nvar _default = R.curryN(3, advanceWidthBetween);\n\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","_filter","_advanceWidthBetween","advanceWidthBetween","start","end","string","compose","sum","map","propOr","_default","curryN"],"sources":["/home/carlobottaro/Documents/Universit√†/gamification/node_modules/@react-pdf/textkit/lib/attributedString/advanceWidthBetween.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _filter = _interopRequireDefault(require(\"../run/filter\"));\n\nvar _advanceWidthBetween = _interopRequireDefault(require(\"../run/advanceWidthBetween\"));\n\n/**\n * Advance width between start and end\n * Does not consider ligature splitting for the moment.\n * Check performance impact on supporting this\n *\n * @param  {number}  start offset\n * @param  {number}  end offset\n * @param  {Object}  attributedString\n * @return {number} advance width\n */\nvar advanceWidthBetween = function advanceWidthBetween(start, end, string) {\n  return R.compose(R.sum, R.map((0, _advanceWidthBetween.default)(start, end)), (0, _filter.default)(start, end), R.propOr([], 'runs'))(string);\n};\n\nvar _default = R.curryN(3, advanceWidthBetween);\n\nexports.default = _default;"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAAP,CAAwDC,OAArF;;AAEA,IAAIC,uBAAuB,GAAGF,OAAO,CAAC,+CAAD,CAAP,CAAyDC,OAAvF;;AAEAE,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACF,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAII,CAAC,GAAGH,uBAAuB,CAACF,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIM,OAAO,GAAGP,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAApC;;AAEA,IAAIO,oBAAoB,GAAGR,sBAAsB,CAACC,OAAO,CAAC,4BAAD,CAAR,CAAjD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIQ,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,KAA7B,EAAoCC,GAApC,EAAyCC,MAAzC,EAAiD;EACzE,OAAON,CAAC,CAACO,OAAF,CAAUP,CAAC,CAACQ,GAAZ,EAAiBR,CAAC,CAACS,GAAF,CAAM,CAAC,GAAGP,oBAAoB,CAACN,OAAzB,EAAkCQ,KAAlC,EAAyCC,GAAzC,CAAN,CAAjB,EAAuE,CAAC,GAAGJ,OAAO,CAACL,OAAZ,EAAqBQ,KAArB,EAA4BC,GAA5B,CAAvE,EAAyGL,CAAC,CAACU,MAAF,CAAS,EAAT,EAAa,MAAb,CAAzG,EAA+HJ,MAA/H,CAAP;AACD,CAFD;;AAIA,IAAIK,QAAQ,GAAGX,CAAC,CAACY,MAAF,CAAS,CAAT,EAAYT,mBAAZ,CAAf;;AAEAL,OAAO,CAACF,OAAR,GAAkBe,QAAlB"},"metadata":{},"sourceType":"script"}