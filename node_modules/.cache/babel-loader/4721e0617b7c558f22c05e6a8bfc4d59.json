{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n/**\n * Deep clone run\n *\n * @param  {Object}  run\n * @return {Object} cloned run\n */\n\n\nvar copy = R.evolve({\n  glyphs: R.map(R.identity),\n  positions: R.clone,\n  glyphIndices: R.clone,\n  attributes: R.evolve({\n    font: R.identity\n  })\n});\nvar _default = copy;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireWildcard","require","default","exports","__esModule","R","copy","evolve","glyphs","map","identity","positions","clone","glyphIndices","attributes","font","_default"],"sources":["/home/carlobottaro/Documents/Universit√†/gamification/node_modules/@react-pdf/textkit/lib/run/copy.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\n/**\n * Deep clone run\n *\n * @param  {Object}  run\n * @return {Object} cloned run\n */\nvar copy = R.evolve({\n  glyphs: R.map(R.identity),\n  positions: R.clone,\n  glyphIndices: R.clone,\n  attributes: R.evolve({\n    font: R.identity\n  })\n});\nvar _default = copy;\nexports.default = _default;"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAAP,CAAyDC,OAAvF;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACD,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIG,CAAC,GAAGL,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIK,IAAI,GAAGD,CAAC,CAACE,MAAF,CAAS;EAClBC,MAAM,EAAEH,CAAC,CAACI,GAAF,CAAMJ,CAAC,CAACK,QAAR,CADU;EAElBC,SAAS,EAAEN,CAAC,CAACO,KAFK;EAGlBC,YAAY,EAAER,CAAC,CAACO,KAHE;EAIlBE,UAAU,EAAET,CAAC,CAACE,MAAF,CAAS;IACnBQ,IAAI,EAAEV,CAAC,CAACK;EADW,CAAT;AAJM,CAAT,CAAX;AAQA,IAAIM,QAAQ,GAAGV,IAAf;AACAH,OAAO,CAACD,OAAR,GAAkBc,QAAlB"},"metadata":{},"sourceType":"script"}