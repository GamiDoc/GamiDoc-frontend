{"ast":null,"code":"/** Text hyphenation in Javascript.\n *  Copyright (C) 2021 Yevhen Tiurin (yevhentiurin@gmail.com)\n *  https://github.com/ytiurin/hyphen\n *\n *  Released under the ISC license\n *  https://github.com/ytiurin/hyphen/blob/master/LICENSE\n */\n(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.createHyphenator = factory();\n  }\n})(this, function () {\n  var SETTING_DEFAULT_ASYNC = false,\n      SETTING_DEFAULT_DEBUG = false,\n      SETTING_DEFAULT_HTML = false,\n      SETTING_DEFAULT_HYPH_CHAR = \"\\u00AD\",\n      SETTING_DEFAULT_MIN_WORD_LENGTH = 5,\n      SETTING_NAME_ASYNC = \"async\",\n      SETTING_NAME_DEBUG = \"debug\",\n      SETTING_NAME_HTML = \"html\",\n      SETTING_NAME_HYPH_CHAR = \"hyphenChar\",\n      SETTING_NAME_MIN_WORD_LENGTH = \"minWordLength\";\n\n  var _global = typeof global === \"object\" ? global : typeof window === \"object\" ? window : typeof this === \"object\" ? this : {};\n\n  function cloneObj(source) {\n    var target = {};\n\n    for (var key in source) {\n      target[key] = source[key];\n    }\n\n    return target;\n  }\n\n  function keyOrDefault(object, key, defaultValue) {\n    if (key in object) {\n      return object[key];\n    }\n\n    return defaultValue;\n  }\n\n  function exceptionsFromDefinition(patternsDefinition, hyphenChar) {\n    return patternsDefinition.exceptions.reduce(function (exceptions, exception) {\n      exceptions[exception.replace(/\\-/g, \"\")] = exception.replace(/\\-/g, hyphenChar);\n      return exceptions;\n    }, {});\n  }\n\n  function createHyphenator(patternsDefinition, options) {\n    options = options || {};\n    var //\n    asyncMode = keyOrDefault(options, SETTING_NAME_ASYNC, SETTING_DEFAULT_ASYNC),\n        caches = {},\n        debug = keyOrDefault(options, SETTING_NAME_DEBUG, SETTING_DEFAULT_DEBUG),\n        exceptions = {},\n        hyphenChar = keyOrDefault(options, SETTING_NAME_HYPH_CHAR, SETTING_DEFAULT_HYPH_CHAR),\n        patterns = patternsDefinition.patterns.map(preprocessPattern),\n        minWordLength = keyOrDefault(options, SETTING_NAME_MIN_WORD_LENGTH, SETTING_DEFAULT_MIN_WORD_LENGTH) >> 0,\n        skipHTML = keyOrDefault(options, SETTING_NAME_HTML, SETTING_DEFAULT_HTML); // Prepare cache\n\n    var cacheKey = hyphenChar + minWordLength;\n    exceptions[cacheKey] = exceptionsFromDefinition(patternsDefinition, hyphenChar);\n    caches[cacheKey] = cloneObj(exceptions[cacheKey]);\n\n    if (asyncMode && !(\"Promise\" in _global)) {\n      throw new Error(\"Failed to create hyphenator: Could not find global Promise object, needed for hyphenator to work in async mode\");\n    }\n\n    return function (text, options) {\n      options = options || {};\n      var localDebug = keyOrDefault(options, SETTING_NAME_DEBUG, debug),\n          localHyphenChar = keyOrDefault(options, SETTING_NAME_HYPH_CHAR, hyphenChar),\n          localMinWordLength = keyOrDefault(options, SETTING_NAME_MIN_WORD_LENGTH, minWordLength) >> 0,\n          cacheKey = localHyphenChar + localMinWordLength;\n\n      if (!exceptions[cacheKey]) {\n        exceptions[cacheKey] = exceptionsFromDefinition(patternsDefinition, localHyphenChar);\n      }\n\n      if (!caches[cacheKey]) {\n        caches[cacheKey] = cloneObj(exceptions[cacheKey]);\n      }\n\n      return start(text, patterns, caches[cacheKey], localDebug, localHyphenChar, skipHTML, localMinWordLength, asyncMode);\n    };\n  }\n\n  function createTextChunkReader(text, hyphenChar, skipHTML, minWordLength) {\n    function readNextTextChunk() {\n      var nextTextChunk = \"\";\n      shouldHyphenate = void 0;\n\n      chunkReader: while (nextCharIndex <= text.length) {\n        var //\n        nextChar = text.charAt(nextCharIndex++),\n            charIsLetter = !!nextChar && !/\\s|[\\!-\\@\\[-\\`\\{-\\~\\u2013-\\u203C]/.test(nextChar),\n            charIsAngleOpen = nextChar === \"<\",\n            charIsAngleClose = nextChar === \">\",\n            charIsHyphen = nextChar === hyphenChar;\n\n        do {\n          if (state === STATE_READ_TAG) {\n            if (charIsAngleClose) {\n              state = STATE_RETURN_UNTOUCHED;\n            }\n\n            break;\n          }\n\n          if (charIsHyphen) {\n            shouldHyphenate = SHOULD_SKIP;\n            state = STATE_READ_WORD;\n            break;\n          }\n\n          if (charIsLetter) {\n            state = STATE_READ_WORD;\n            break;\n          }\n\n          if (state === STATE_READ_WORD) {\n            state = STATE_RETURN_WORD;\n            shouldHyphenate = shouldHyphenate || nextTextChunk.length >= minWordLength && SHOULD_HYPHENATE;\n            break;\n          }\n\n          shouldHyphenate = SHOULD_SKIP;\n          state = STATE_RETURN_UNTOUCHED;\n        } while (0);\n\n        if (charIsAngleOpen && state !== STATE_RETURN_WORD && skipHTML && !isSpacelike(text.charAt(nextCharIndex))) {\n          shouldHyphenate = SHOULD_SKIP;\n          state = STATE_READ_TAG;\n        }\n\n        switch (state) {\n          case STATE_READ_TAG:\n            nextTextChunk += nextChar;\n            break;\n\n          case STATE_READ_WORD:\n            nextTextChunk += nextChar;\n            break;\n\n          case STATE_RETURN_UNTOUCHED:\n            nextTextChunk += nextChar;\n            break chunkReader;\n\n          case STATE_RETURN_WORD:\n            nextCharIndex--;\n            break chunkReader;\n        }\n      }\n\n      return nextTextChunk || void 0;\n    }\n\n    function shouldNextHyphenate() {\n      return shouldHyphenate === SHOULD_HYPHENATE;\n    }\n\n    var isSpacelike = RegExp.prototype.test.bind(/\\s/);\n    var //\n    nextCharIndex = 0,\n        SHOULD_HYPHENATE = 1,\n        SHOULD_SKIP = 2,\n        shouldHyphenate,\n        STATE_READ_TAG = 1,\n        STATE_READ_WORD = 2,\n        STATE_RETURN_UNTOUCHED = 3,\n        STATE_RETURN_WORD = 4,\n        state;\n    return [readNextTextChunk, shouldNextHyphenate];\n  }\n\n  function hyphenateWord(text, patterns, debug, hyphenChar) {\n    var //\n    levels = new Array(text.length + 1),\n        loweredText = text.toLocaleLowerCase(),\n        p = [],\n        patternData,\n        patternIndex = 0;\n\n    for (var i = levels.length; i--;) levels[i] = 0;\n\n    while (patternData = patterns[patternIndex++]) {\n      var //\n      fromChar = 0,\n          endPattern = false;\n\n      while (!endPattern) {\n        var //\n        patternEntityIndex = loweredText.indexOf(patternData.text, fromChar),\n            patternFits = patternEntityIndex > -1 && (patternData.stickToLeft ? patternEntityIndex === 0 : true) && (patternData.stickToRight ? patternEntityIndex + patternData.text.length === text.length : true);\n\n        if (patternFits) {\n          p.push(patternData.pattern + \">\" + patternData.levels.join(\"\"));\n\n          for (var i = 0; i < patternData.levels.length; i++) levels[patternEntityIndex + i] = Math.max(patternData.levels[i], levels[patternEntityIndex + i]);\n        }\n\n        if (patternEntityIndex > -1 && patternData.text.length > 0) {\n          fromChar = patternEntityIndex + patternData.text.length + 1;\n        } else {\n          endPattern = true;\n        }\n      }\n    }\n\n    levels[0] = levels[1] = levels[levels.length - 1] = levels[levels.length - 2] = 0;\n    var //\n    hyphenatedText = \"\",\n        leveledText = \"\",\n        debugHyphenatedText = \"\";\n\n    for (var i = 0; i < levels.length; i++) {\n      hyphenatedText += (levels[i] % 2 === 1 ? hyphenChar : \"\") + text.charAt(i);\n      debugHyphenatedText += (levels[i] % 2 === 1 ? \"-\" : \"\") + text.charAt(i);\n      leveledText += (levels[i] > 0 ? levels[i] : \"\") + text.charAt(i);\n    }\n\n    if (debug) console.log.apply(console, [text, \"->\"].concat(p).concat([\"->\"]).concat(levels).concat([\"->\", leveledText]).concat([\"->\", debugHyphenatedText]));\n    return hyphenatedText;\n  }\n\n  function preprocessPattern(pattern) {\n    var //\n    patternCharIndex = 0,\n        patternChar,\n        patternData = {\n      pattern: pattern,\n      text: \"\",\n      levels: [],\n      stickToLeft: 0,\n      stickToRight: 0\n    },\n        states = {\n      alphabet: 1,\n      level: 2,\n      stickToLeft: 3,\n      stickToRight: 4\n    };\n\n    while (patternChar = pattern.charAt(patternCharIndex++)) {\n      var //\n      charIsDot = patternChar === \".\",\n          charIsNumber = !charIsDot && /\\d/.test(patternChar),\n          state = charIsDot ? patternCharIndex - 1 === 0 ? states.stickToLeft : states.stickToRight : charIsNumber ? states.level : states.alphabet;\n\n      switch (state) {\n        case states.alphabet:\n          !prevCharIsNumber && patternData.levels.push(0);\n          patternData.text += patternChar;\n          break;\n\n        case states.level:\n          patternData.levels.push(parseInt(patternChar));\n          break;\n\n        case states.stickToLeft:\n          patternData.stickToLeft = true;\n          break;\n\n        case states.stickToRight:\n          patternData.stickToRight = true;\n          break;\n      }\n\n      var prevCharIsNumber = charIsNumber;\n    }\n\n    return patternData;\n  }\n\n  function start(text, patterns, cache, debug, hyphenChar, skipHTML, minWordLength, isAsync) {\n    function done() {\n      allTime = new Date() - allTime;\n      resolveNewText(newText);\n\n      if (debug) {\n        console.log(\"----------------\\nHyphenation stats: \" + processedN + \" text chunks processed, \" + hyphenatedN + \" words hyphenated\");\n        console.log(\"Work time: \" + workTime / 1000);\n        console.log(\"Wait time: \" + (allTime - workTime) / 1000);\n        console.log(\"All time: \" + allTime / 1000);\n      }\n    }\n\n    var //\n    cacheKey,\n        newText = \"\",\n        textChunk,\n        reader = createTextChunkReader(text, hyphenChar, skipHTML, minWordLength),\n        readNextTextChunk = reader[0],\n        shouldNextHyphenate = reader[1],\n        processedN = 0,\n        hyphenatedN = 0;\n    var //\n    allTime = new Date(),\n        workTime = 0;\n\n    var resolveNewText = function () {};\n\n    function nextTick() {\n      var loopStart = new Date();\n\n      while ((!isAsync || new Date() - loopStart < 10) && (textChunk = readNextTextChunk())) {\n        cacheKey = textChunk.length ? \"$\" + textChunk : \"\";\n\n        if (shouldNextHyphenate()) {\n          if (cache[cacheKey] === undefined) {\n            cache[cacheKey] = hyphenateWord(textChunk, patterns, debug, hyphenChar);\n          }\n\n          if (textChunk !== cache[cacheKey]) {\n            hyphenatedN++;\n          }\n\n          textChunk = cache[cacheKey];\n        }\n\n        newText += textChunk;\n        processedN++;\n      }\n\n      workTime += new Date() - loopStart;\n\n      if (!textChunk) {\n        done();\n      } else {\n        setTimeout(nextTick);\n      }\n    }\n\n    if (isAsync) {\n      setTimeout(nextTick);\n      return new Promise(function (resolve) {\n        resolveNewText = resolve;\n      });\n    } else {\n      nextTick();\n      return newText;\n    }\n  }\n\n  return createHyphenator;\n});","map":{"version":3,"names":["root","factory","define","amd","module","exports","createHyphenator","SETTING_DEFAULT_ASYNC","SETTING_DEFAULT_DEBUG","SETTING_DEFAULT_HTML","SETTING_DEFAULT_HYPH_CHAR","SETTING_DEFAULT_MIN_WORD_LENGTH","SETTING_NAME_ASYNC","SETTING_NAME_DEBUG","SETTING_NAME_HTML","SETTING_NAME_HYPH_CHAR","SETTING_NAME_MIN_WORD_LENGTH","_global","global","window","cloneObj","source","target","key","keyOrDefault","object","defaultValue","exceptionsFromDefinition","patternsDefinition","hyphenChar","exceptions","reduce","exception","replace","options","asyncMode","caches","debug","patterns","map","preprocessPattern","minWordLength","skipHTML","cacheKey","Error","text","localDebug","localHyphenChar","localMinWordLength","start","createTextChunkReader","readNextTextChunk","nextTextChunk","shouldHyphenate","chunkReader","nextCharIndex","length","nextChar","charAt","charIsLetter","test","charIsAngleOpen","charIsAngleClose","charIsHyphen","state","STATE_READ_TAG","STATE_RETURN_UNTOUCHED","SHOULD_SKIP","STATE_READ_WORD","STATE_RETURN_WORD","SHOULD_HYPHENATE","isSpacelike","shouldNextHyphenate","RegExp","prototype","bind","hyphenateWord","levels","Array","loweredText","toLocaleLowerCase","p","patternData","patternIndex","i","fromChar","endPattern","patternEntityIndex","indexOf","patternFits","stickToLeft","stickToRight","push","pattern","join","Math","max","hyphenatedText","leveledText","debugHyphenatedText","console","log","apply","concat","patternCharIndex","patternChar","states","alphabet","level","charIsDot","charIsNumber","prevCharIsNumber","parseInt","cache","isAsync","done","allTime","Date","resolveNewText","newText","processedN","hyphenatedN","workTime","textChunk","reader","nextTick","loopStart","undefined","setTimeout","Promise","resolve"],"sources":["/home/carlobottaro/Documents/Università/gamification/node_modules/hyphen/hyphen.js"],"sourcesContent":["/** Text hyphenation in Javascript.\n *  Copyright (C) 2021 Yevhen Tiurin (yevhentiurin@gmail.com)\n *  https://github.com/ytiurin/hyphen\n *\n *  Released under the ISC license\n *  https://github.com/ytiurin/hyphen/blob/master/LICENSE\n */\n(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.createHyphenator = factory();\n  }\n})(this, function () {\n  var SETTING_DEFAULT_ASYNC = false,\n    SETTING_DEFAULT_DEBUG = false,\n    SETTING_DEFAULT_HTML = false,\n    SETTING_DEFAULT_HYPH_CHAR = \"\\u00AD\",\n    SETTING_DEFAULT_MIN_WORD_LENGTH = 5,\n    SETTING_NAME_ASYNC = \"async\",\n    SETTING_NAME_DEBUG = \"debug\",\n    SETTING_NAME_HTML = \"html\",\n    SETTING_NAME_HYPH_CHAR = \"hyphenChar\",\n    SETTING_NAME_MIN_WORD_LENGTH = \"minWordLength\";\n\n  var _global =\n    typeof global === \"object\"\n      ? global\n      : typeof window === \"object\"\n      ? window\n      : typeof this === \"object\"\n      ? this\n      : {};\n\n  function cloneObj(source) {\n    var target = {};\n    for (var key in source) {\n      target[key] = source[key];\n    }\n    return target;\n  }\n\n  function keyOrDefault(object, key, defaultValue) {\n    if (key in object) {\n      return object[key];\n    }\n    return defaultValue;\n  }\n\n  function exceptionsFromDefinition(patternsDefinition, hyphenChar) {\n    return patternsDefinition.exceptions.reduce(function (\n      exceptions,\n      exception\n    ) {\n      exceptions[exception.replace(/\\-/g, \"\")] = exception.replace(\n        /\\-/g,\n        hyphenChar\n      );\n      return exceptions;\n    },\n    {});\n  }\n\n  function createHyphenator(patternsDefinition, options) {\n    options = options || {};\n    var //\n      asyncMode = keyOrDefault(\n        options,\n        SETTING_NAME_ASYNC,\n        SETTING_DEFAULT_ASYNC\n      ),\n      caches = {},\n      debug = keyOrDefault(options, SETTING_NAME_DEBUG, SETTING_DEFAULT_DEBUG),\n      exceptions = {},\n      hyphenChar = keyOrDefault(\n        options,\n        SETTING_NAME_HYPH_CHAR,\n        SETTING_DEFAULT_HYPH_CHAR\n      ),\n      patterns = patternsDefinition.patterns.map(preprocessPattern),\n      minWordLength =\n        keyOrDefault(\n          options,\n          SETTING_NAME_MIN_WORD_LENGTH,\n          SETTING_DEFAULT_MIN_WORD_LENGTH\n        ) >> 0,\n      skipHTML = keyOrDefault(options, SETTING_NAME_HTML, SETTING_DEFAULT_HTML);\n\n    // Prepare cache\n    var cacheKey = hyphenChar + minWordLength;\n    exceptions[cacheKey] = exceptionsFromDefinition(\n      patternsDefinition,\n      hyphenChar\n    );\n    caches[cacheKey] = cloneObj(exceptions[cacheKey]);\n\n    if (asyncMode && !(\"Promise\" in _global)) {\n      throw new Error(\n        \"Failed to create hyphenator: Could not find global Promise object, needed for hyphenator to work in async mode\"\n      );\n    }\n\n    return function (text, options) {\n      options = options || {};\n\n      var localDebug = keyOrDefault(options, SETTING_NAME_DEBUG, debug),\n        localHyphenChar = keyOrDefault(\n          options,\n          SETTING_NAME_HYPH_CHAR,\n          hyphenChar\n        ),\n        localMinWordLength =\n          keyOrDefault(options, SETTING_NAME_MIN_WORD_LENGTH, minWordLength) >>\n          0,\n        cacheKey = localHyphenChar + localMinWordLength;\n\n      if (!exceptions[cacheKey]) {\n        exceptions[cacheKey] = exceptionsFromDefinition(\n          patternsDefinition,\n          localHyphenChar\n        );\n      }\n\n      if (!caches[cacheKey]) {\n        caches[cacheKey] = cloneObj(exceptions[cacheKey]);\n      }\n\n      return start(\n        text,\n        patterns,\n        caches[cacheKey],\n        localDebug,\n        localHyphenChar,\n        skipHTML,\n        localMinWordLength,\n        asyncMode\n      );\n    };\n  }\n  function createTextChunkReader(text, hyphenChar, skipHTML, minWordLength) {\n    function readNextTextChunk() {\n      var nextTextChunk = \"\";\n\n      shouldHyphenate = void 0;\n\n      chunkReader: while (nextCharIndex <= text.length) {\n        var //\n          nextChar = text.charAt(nextCharIndex++),\n          charIsLetter =\n            !!nextChar && !/\\s|[\\!-\\@\\[-\\`\\{-\\~\\u2013-\\u203C]/.test(nextChar),\n          charIsAngleOpen = nextChar === \"<\",\n          charIsAngleClose = nextChar === \">\",\n          charIsHyphen = nextChar === hyphenChar;\n\n        do {\n          if (state === STATE_READ_TAG) {\n            if (charIsAngleClose) {\n              state = STATE_RETURN_UNTOUCHED;\n            }\n            break;\n          }\n\n          if (charIsHyphen) {\n            shouldHyphenate = SHOULD_SKIP;\n            state = STATE_READ_WORD;\n            break;\n          }\n\n          if (charIsLetter) {\n            state = STATE_READ_WORD;\n            break;\n          }\n\n          if (state === STATE_READ_WORD) {\n            state = STATE_RETURN_WORD;\n            shouldHyphenate =\n              shouldHyphenate ||\n              (nextTextChunk.length >= minWordLength && SHOULD_HYPHENATE);\n            break;\n          }\n\n          shouldHyphenate = SHOULD_SKIP;\n          state = STATE_RETURN_UNTOUCHED;\n        } while (0);\n\n        if (\n          charIsAngleOpen &&\n          state !== STATE_RETURN_WORD &&\n          skipHTML &&\n          !isSpacelike(text.charAt(nextCharIndex))\n        ) {\n          shouldHyphenate = SHOULD_SKIP;\n          state = STATE_READ_TAG;\n        }\n\n        switch (state) {\n          case STATE_READ_TAG:\n            nextTextChunk += nextChar;\n            break;\n\n          case STATE_READ_WORD:\n            nextTextChunk += nextChar;\n            break;\n\n          case STATE_RETURN_UNTOUCHED:\n            nextTextChunk += nextChar;\n            break chunkReader;\n\n          case STATE_RETURN_WORD:\n            nextCharIndex--;\n            break chunkReader;\n        }\n      }\n      return nextTextChunk || void 0;\n    }\n\n    function shouldNextHyphenate() {\n      return shouldHyphenate === SHOULD_HYPHENATE;\n    }\n\n    var isSpacelike = RegExp.prototype.test.bind(/\\s/);\n\n    var //\n      nextCharIndex = 0,\n      SHOULD_HYPHENATE = 1,\n      SHOULD_SKIP = 2,\n      shouldHyphenate,\n      STATE_READ_TAG = 1,\n      STATE_READ_WORD = 2,\n      STATE_RETURN_UNTOUCHED = 3,\n      STATE_RETURN_WORD = 4,\n      state;\n\n    return [readNextTextChunk, shouldNextHyphenate];\n  }\n  function hyphenateWord(text, patterns, debug, hyphenChar) {\n    var //\n      levels = new Array(text.length + 1),\n      loweredText = text.toLocaleLowerCase(),\n      p = [],\n      patternData,\n      patternIndex = 0;\n\n    for (var i = levels.length; i--; ) levels[i] = 0;\n\n    while ((patternData = patterns[patternIndex++])) {\n      var //\n        fromChar = 0,\n        endPattern = false;\n      while (!endPattern) {\n        var //\n          patternEntityIndex = loweredText.indexOf(patternData.text, fromChar),\n          patternFits =\n            patternEntityIndex > -1 &&\n            (patternData.stickToLeft ? patternEntityIndex === 0 : true) &&\n            (patternData.stickToRight\n              ? patternEntityIndex + patternData.text.length === text.length\n              : true);\n\n        if (patternFits) {\n          p.push(patternData.pattern + \">\" + patternData.levels.join(\"\"));\n\n          for (var i = 0; i < patternData.levels.length; i++)\n            levels[patternEntityIndex + i] = Math.max(\n              patternData.levels[i],\n              levels[patternEntityIndex + i]\n            );\n        }\n        if (patternEntityIndex > -1 && patternData.text.length > 0) {\n          fromChar = patternEntityIndex + patternData.text.length + 1;\n        } else {\n          endPattern = true;\n        }\n      }\n    }\n\n    levels[0] = levels[1] = levels[levels.length - 1] = levels[\n      levels.length - 2\n    ] = 0;\n\n    var //\n      hyphenatedText = \"\",\n      leveledText = \"\",\n      debugHyphenatedText = \"\";\n\n    for (var i = 0; i < levels.length; i++) {\n      hyphenatedText +=\n        (levels[i] % 2 === 1 ? hyphenChar : \"\") + text.charAt(i);\n      debugHyphenatedText += (levels[i] % 2 === 1 ? \"-\" : \"\") + text.charAt(i);\n      leveledText += (levels[i] > 0 ? levels[i] : \"\") + text.charAt(i);\n    }\n\n    if (debug)\n      console.log.apply(\n        console,\n        [text, \"->\"]\n          .concat(p)\n          .concat([\"->\"])\n          .concat(levels)\n          .concat([\"->\", leveledText])\n          .concat([\"->\", debugHyphenatedText])\n      );\n\n    return hyphenatedText;\n  }\n  function preprocessPattern(pattern) {\n    var //\n      patternCharIndex = 0,\n      patternChar,\n      patternData = {\n        pattern: pattern,\n        text: \"\",\n        levels: [],\n        stickToLeft: 0,\n        stickToRight: 0\n      },\n      states = { alphabet: 1, level: 2, stickToLeft: 3, stickToRight: 4 };\n\n    while ((patternChar = pattern.charAt(patternCharIndex++))) {\n      var //\n        charIsDot = patternChar === \".\",\n        charIsNumber = !charIsDot && /\\d/.test(patternChar),\n        state = charIsDot\n          ? patternCharIndex - 1 === 0\n            ? states.stickToLeft\n            : states.stickToRight\n          : charIsNumber\n          ? states.level\n          : states.alphabet;\n\n      switch (state) {\n        case states.alphabet:\n          !prevCharIsNumber && patternData.levels.push(0);\n          patternData.text += patternChar;\n          break;\n\n        case states.level:\n          patternData.levels.push(parseInt(patternChar));\n          break;\n\n        case states.stickToLeft:\n          patternData.stickToLeft = true;\n          break;\n\n        case states.stickToRight:\n          patternData.stickToRight = true;\n          break;\n      }\n\n      var prevCharIsNumber = charIsNumber;\n    }\n\n    return patternData;\n  }\n  function start(\n    text,\n    patterns,\n    cache,\n    debug,\n    hyphenChar,\n    skipHTML,\n    minWordLength,\n    isAsync\n  ) {\n    function done() {\n      allTime = new Date() - allTime;\n      resolveNewText(newText);\n\n      if (debug) {\n        console.log(\n          \"----------------\\nHyphenation stats: \" +\n            processedN +\n            \" text chunks processed, \" +\n            hyphenatedN +\n            \" words hyphenated\"\n        );\n        console.log(\"Work time: \" + workTime / 1000);\n        console.log(\"Wait time: \" + (allTime - workTime) / 1000);\n        console.log(\"All time: \" + allTime / 1000);\n      }\n    }\n\n    var //\n      cacheKey,\n      newText = \"\",\n      textChunk,\n      reader = createTextChunkReader(text, hyphenChar, skipHTML, minWordLength),\n      readNextTextChunk = reader[0],\n      shouldNextHyphenate = reader[1],\n      processedN = 0,\n      hyphenatedN = 0;\n\n    var //\n      allTime = new Date(),\n      workTime = 0;\n\n    var resolveNewText = function () {};\n\n    function nextTick() {\n      var loopStart = new Date();\n\n      while (\n        (!isAsync || new Date() - loopStart < 10) &&\n        (textChunk = readNextTextChunk())\n      ) {\n        cacheKey = textChunk.length ? \"$\" + textChunk : \"\";\n\n        if (shouldNextHyphenate()) {\n          if (cache[cacheKey] === undefined) {\n            cache[cacheKey] = hyphenateWord(\n              textChunk,\n              patterns,\n              debug,\n              hyphenChar\n            );\n          }\n\n          if (textChunk !== cache[cacheKey]) {\n            hyphenatedN++;\n          }\n\n          textChunk = cache[cacheKey];\n        }\n\n        newText += textChunk;\n        processedN++;\n      }\n\n      workTime += new Date() - loopStart;\n\n      if (!textChunk) {\n        done();\n      } else {\n        setTimeout(nextTick);\n      }\n    }\n\n    if (isAsync) {\n      setTimeout(nextTick);\n      return new Promise(function (resolve) {\n        resolveNewText = resolve;\n      });\n    } else {\n      nextTick();\n      return newText;\n    }\n  }\n\n  return createHyphenator;\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}