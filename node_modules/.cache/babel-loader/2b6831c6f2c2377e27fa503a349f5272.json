{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar BORDER_SHORTHAND_REGEX = /(-?\\d+(\\.\\d+)?(px|in|mm|cm|pt|vw|vh|px)?)\\s(\\S+)\\s(.+)/;\nvar matchBorderShorthand = R.match(BORDER_SHORTHAND_REGEX);\n\nvar expandBorders = function expandBorders(key, value) {\n  var match = matchBorderShorthand(\"\" + value);\n\n  if (match) {\n    var color = match[5] || value;\n    var style = match[4] || value;\n    var width = match[1] || value;\n\n    if (key.match(/(Top|Right|Bottom|Left)$/)) {\n      var _ref;\n\n      return _ref = {}, _ref[key + \"Color\"] = color, _ref[key + \"Style\"] = style, _ref[key + \"Width\"] = width, _ref;\n    }\n\n    if (key.match(/Color$/)) {\n      return {\n        borderTopColor: color,\n        borderRightColor: color,\n        borderBottomColor: color,\n        borderLeftColor: color\n      };\n    }\n\n    if (key.match(/Style$/)) {\n      return {\n        borderTopStyle: style,\n        borderRightStyle: style,\n        borderBottomStyle: style,\n        borderLeftStyle: style\n      };\n    }\n\n    if (key.match(/Width$/)) {\n      return {\n        borderTopWidth: width,\n        borderRightWidth: width,\n        borderBottomWidth: width,\n        borderLeftWidth: width\n      };\n    }\n\n    if (key.match(/Radius$/)) {\n      return {\n        borderTopLeftRadius: value,\n        borderTopRightRadius: value,\n        borderBottomRightRadius: value,\n        borderBottomLeftRadius: value\n      };\n    }\n\n    return {\n      borderTopColor: color,\n      borderTopStyle: style,\n      borderTopWidth: width,\n      borderRightColor: color,\n      borderRightStyle: style,\n      borderRightWidth: width,\n      borderBottomColor: color,\n      borderBottomStyle: style,\n      borderBottomWidth: width,\n      borderLeftColor: color,\n      borderLeftStyle: style,\n      borderLeftWidth: width\n    };\n  }\n\n  return value;\n};\n\nvar _default = expandBorders;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireWildcard","require","default","exports","__esModule","R","BORDER_SHORTHAND_REGEX","matchBorderShorthand","match","expandBorders","key","value","color","style","width","_ref","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","_default"],"sources":["/home/carlobottaro/Documents/Universit√†/gamification/node_modules/@react-pdf/stylesheet/lib/expand/borders.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar BORDER_SHORTHAND_REGEX = /(-?\\d+(\\.\\d+)?(px|in|mm|cm|pt|vw|vh|px)?)\\s(\\S+)\\s(.+)/;\nvar matchBorderShorthand = R.match(BORDER_SHORTHAND_REGEX);\n\nvar expandBorders = function expandBorders(key, value) {\n  var match = matchBorderShorthand(\"\" + value);\n\n  if (match) {\n    var color = match[5] || value;\n    var style = match[4] || value;\n    var width = match[1] || value;\n\n    if (key.match(/(Top|Right|Bottom|Left)$/)) {\n      var _ref;\n\n      return _ref = {}, _ref[key + \"Color\"] = color, _ref[key + \"Style\"] = style, _ref[key + \"Width\"] = width, _ref;\n    }\n\n    if (key.match(/Color$/)) {\n      return {\n        borderTopColor: color,\n        borderRightColor: color,\n        borderBottomColor: color,\n        borderLeftColor: color\n      };\n    }\n\n    if (key.match(/Style$/)) {\n      return {\n        borderTopStyle: style,\n        borderRightStyle: style,\n        borderBottomStyle: style,\n        borderLeftStyle: style\n      };\n    }\n\n    if (key.match(/Width$/)) {\n      return {\n        borderTopWidth: width,\n        borderRightWidth: width,\n        borderBottomWidth: width,\n        borderLeftWidth: width\n      };\n    }\n\n    if (key.match(/Radius$/)) {\n      return {\n        borderTopLeftRadius: value,\n        borderTopRightRadius: value,\n        borderBottomRightRadius: value,\n        borderBottomLeftRadius: value\n      };\n    }\n\n    return {\n      borderTopColor: color,\n      borderTopStyle: style,\n      borderTopWidth: width,\n      borderRightColor: color,\n      borderRightStyle: style,\n      borderRightWidth: width,\n      borderBottomColor: color,\n      borderBottomStyle: style,\n      borderBottomWidth: width,\n      borderLeftColor: color,\n      borderLeftStyle: style,\n      borderLeftWidth: width\n    };\n  }\n\n  return value;\n};\n\nvar _default = expandBorders;\nexports.default = _default;"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAAP,CAAyDC,OAAvF;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACD,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIG,CAAC,GAAGL,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIK,sBAAsB,GAAG,wDAA7B;AACA,IAAIC,oBAAoB,GAAGF,CAAC,CAACG,KAAF,CAAQF,sBAAR,CAA3B;;AAEA,IAAIG,aAAa,GAAG,SAASA,aAAT,CAAuBC,GAAvB,EAA4BC,KAA5B,EAAmC;EACrD,IAAIH,KAAK,GAAGD,oBAAoB,CAAC,KAAKI,KAAN,CAAhC;;EAEA,IAAIH,KAAJ,EAAW;IACT,IAAII,KAAK,GAAGJ,KAAK,CAAC,CAAD,CAAL,IAAYG,KAAxB;IACA,IAAIE,KAAK,GAAGL,KAAK,CAAC,CAAD,CAAL,IAAYG,KAAxB;IACA,IAAIG,KAAK,GAAGN,KAAK,CAAC,CAAD,CAAL,IAAYG,KAAxB;;IAEA,IAAID,GAAG,CAACF,KAAJ,CAAU,0BAAV,CAAJ,EAA2C;MACzC,IAAIO,IAAJ;;MAEA,OAAOA,IAAI,GAAG,EAAP,EAAWA,IAAI,CAACL,GAAG,GAAG,OAAP,CAAJ,GAAsBE,KAAjC,EAAwCG,IAAI,CAACL,GAAG,GAAG,OAAP,CAAJ,GAAsBG,KAA9D,EAAqEE,IAAI,CAACL,GAAG,GAAG,OAAP,CAAJ,GAAsBI,KAA3F,EAAkGC,IAAzG;IACD;;IAED,IAAIL,GAAG,CAACF,KAAJ,CAAU,QAAV,CAAJ,EAAyB;MACvB,OAAO;QACLQ,cAAc,EAAEJ,KADX;QAELK,gBAAgB,EAAEL,KAFb;QAGLM,iBAAiB,EAAEN,KAHd;QAILO,eAAe,EAAEP;MAJZ,CAAP;IAMD;;IAED,IAAIF,GAAG,CAACF,KAAJ,CAAU,QAAV,CAAJ,EAAyB;MACvB,OAAO;QACLY,cAAc,EAAEP,KADX;QAELQ,gBAAgB,EAAER,KAFb;QAGLS,iBAAiB,EAAET,KAHd;QAILU,eAAe,EAAEV;MAJZ,CAAP;IAMD;;IAED,IAAIH,GAAG,CAACF,KAAJ,CAAU,QAAV,CAAJ,EAAyB;MACvB,OAAO;QACLgB,cAAc,EAAEV,KADX;QAELW,gBAAgB,EAAEX,KAFb;QAGLY,iBAAiB,EAAEZ,KAHd;QAILa,eAAe,EAAEb;MAJZ,CAAP;IAMD;;IAED,IAAIJ,GAAG,CAACF,KAAJ,CAAU,SAAV,CAAJ,EAA0B;MACxB,OAAO;QACLoB,mBAAmB,EAAEjB,KADhB;QAELkB,oBAAoB,EAAElB,KAFjB;QAGLmB,uBAAuB,EAAEnB,KAHpB;QAILoB,sBAAsB,EAAEpB;MAJnB,CAAP;IAMD;;IAED,OAAO;MACLK,cAAc,EAAEJ,KADX;MAELQ,cAAc,EAAEP,KAFX;MAGLW,cAAc,EAAEV,KAHX;MAILG,gBAAgB,EAAEL,KAJb;MAKLS,gBAAgB,EAAER,KALb;MAMLY,gBAAgB,EAAEX,KANb;MAOLI,iBAAiB,EAAEN,KAPd;MAQLU,iBAAiB,EAAET,KARd;MASLa,iBAAiB,EAAEZ,KATd;MAULK,eAAe,EAAEP,KAVZ;MAWLW,eAAe,EAAEV,KAXZ;MAYLc,eAAe,EAAEb;IAZZ,CAAP;EAcD;;EAED,OAAOH,KAAP;AACD,CAnED;;AAqEA,IAAIqB,QAAQ,GAAGvB,aAAf;AACAN,OAAO,CAACD,OAAR,GAAkB8B,QAAlB"},"metadata":{},"sourceType":"script"}