{"ast":null,"code":"import equals from '../equals.js';\nexport default function _indexOf(list, a, idx) {\n  var inf, item; // Array.prototype.indexOf doesn't exist below IE9\n\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } // non-zero numbers can utilise Set\n\n\n        return list.indexOf(a, idx);\n      // all these types can utilise Set\n\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n\n    }\n  } // anything else not covered above, defer to R.equals\n\n\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}","map":{"version":3,"names":["equals","_indexOf","list","a","idx","inf","item","indexOf","length"],"sources":["/home/carlobottaro/Documents/UniversitÃ /gamification/node_modules/ramda/es/internal/_indexOf.js"],"sourcesContent":["import equals from '../equals.js';\n\nexport default function _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,cAAnB;AAEA,eAAe,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,CAAxB,EAA2BC,GAA3B,EAAgC;EAC7C,IAAIC,GAAJ,EAASC,IAAT,CAD6C,CAE7C;;EACA,IAAI,OAAOJ,IAAI,CAACK,OAAZ,KAAwB,UAA5B,EAAwC;IACtC,QAAQ,OAAOJ,CAAf;MACE,KAAK,QAAL;QACE,IAAIA,CAAC,KAAK,CAAV,EAAa;UACX;UACAE,GAAG,GAAG,IAAIF,CAAV;;UACA,OAAOC,GAAG,GAAGF,IAAI,CAACM,MAAlB,EAA0B;YACxBF,IAAI,GAAGJ,IAAI,CAACE,GAAD,CAAX;;YACA,IAAIE,IAAI,KAAK,CAAT,IAAc,IAAIA,IAAJ,KAAaD,GAA/B,EAAoC;cAClC,OAAOD,GAAP;YACD;;YACDA,GAAG,IAAI,CAAP;UACD;;UACD,OAAO,CAAC,CAAR;QACD,CAXD,MAWO,IAAID,CAAC,KAAKA,CAAV,EAAa;UAClB;UACA,OAAOC,GAAG,GAAGF,IAAI,CAACM,MAAlB,EAA0B;YACxBF,IAAI,GAAGJ,IAAI,CAACE,GAAD,CAAX;;YACA,IAAI,OAAOE,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,KAAKA,IAAzC,EAA+C;cAC7C,OAAOF,GAAP;YACD;;YACDA,GAAG,IAAI,CAAP;UACD;;UACD,OAAO,CAAC,CAAR;QACD,CAtBH,CAuBE;;;QACA,OAAOF,IAAI,CAACK,OAAL,CAAaJ,CAAb,EAAgBC,GAAhB,CAAP;MAEF;;MACA,KAAK,QAAL;MACA,KAAK,SAAL;MACA,KAAK,UAAL;MACA,KAAK,WAAL;QACE,OAAOF,IAAI,CAACK,OAAL,CAAaJ,CAAb,EAAgBC,GAAhB,CAAP;;MAEF,KAAK,QAAL;QACE,IAAID,CAAC,KAAK,IAAV,EAAgB;UACd;UACA,OAAOD,IAAI,CAACK,OAAL,CAAaJ,CAAb,EAAgBC,GAAhB,CAAP;QACD;;IAtCL;EAwCD,CA5C4C,CA6C7C;;;EACA,OAAOA,GAAG,GAAGF,IAAI,CAACM,MAAlB,EAA0B;IACxB,IAAIR,MAAM,CAACE,IAAI,CAACE,GAAD,CAAL,EAAYD,CAAZ,CAAV,EAA0B;MACxB,OAAOC,GAAP;IACD;;IACDA,GAAG,IAAI,CAAP;EACD;;EACD,OAAO,CAAC,CAAR;AACD"},"metadata":{},"sourceType":"module"}