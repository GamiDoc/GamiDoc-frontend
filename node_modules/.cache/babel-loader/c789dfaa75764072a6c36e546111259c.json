{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n/**\n * Returns new array starting with zero, and keeping same relation between consecutive values\n *\n * @param  {Array[number]}  list\n * @return {boolean} normalized array\n */\n\n\nvar normalize = function normalize(array) {\n  return R.map(R.subtract(R.__, R.head(array)))(array);\n};\n\nvar _default = normalize;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireWildcard","require","default","exports","__esModule","R","normalize","array","map","subtract","__","head","_default"],"sources":["/home/carlobottaro/Documents/Universit√†/gamification/node_modules/@react-pdf/textkit/lib/indices/normalize.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\n/**\n * Returns new array starting with zero, and keeping same relation between consecutive values\n *\n * @param  {Array[number]}  list\n * @return {boolean} normalized array\n */\nvar normalize = function normalize(array) {\n  return R.map(R.subtract(R.__, R.head(array)))(array);\n};\n\nvar _default = normalize;\nexports.default = _default;"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAAP,CAAyDC,OAAvF;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACD,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIG,CAAC,GAAGL,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIK,SAAS,GAAG,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;EACxC,OAAOF,CAAC,CAACG,GAAF,CAAMH,CAAC,CAACI,QAAF,CAAWJ,CAAC,CAACK,EAAb,EAAiBL,CAAC,CAACM,IAAF,CAAOJ,KAAP,CAAjB,CAAN,EAAuCA,KAAvC,CAAP;AACD,CAFD;;AAIA,IAAIK,QAAQ,GAAGN,SAAf;AACAH,OAAO,CAACD,OAAR,GAAkBU,QAAlB"},"metadata":{},"sourceType":"script"}