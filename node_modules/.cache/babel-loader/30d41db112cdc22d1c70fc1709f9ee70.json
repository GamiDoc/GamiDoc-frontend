{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.resolvePageDimensions = exports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _yoga = _interopRequireDefault(require(\"@react-pdf/yoga\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar _getMargin = _interopRequireDefault(require(\"../node/getMargin\"));\n\nvar _getPadding = _interopRequireDefault(require(\"../node/getPadding\"));\n\nvar _getPosition = _interopRequireDefault(require(\"../node/getPosition\"));\n\nvar _getDimension = _interopRequireDefault(require(\"../node/getDimension\"));\n\nvar _getBorderWidth = _interopRequireDefault(require(\"../node/getBorderWidth\"));\n\nvar _setDisplay = _interopRequireDefault(require(\"../node/setDisplay\"));\n\nvar _setOverflow = _interopRequireDefault(require(\"../node/setOverflow\"));\n\nvar _setFlexWrap = _interopRequireDefault(require(\"../node/setFlexWrap\"));\n\nvar _setFlexGrow = _interopRequireDefault(require(\"../node/setFlexGrow\"));\n\nvar _setFlexBasis = _interopRequireDefault(require(\"../node/setFlexBasis\"));\n\nvar _setAlignSelf = _interopRequireDefault(require(\"../node/setAlignSelf\"));\n\nvar _setAlignItems = _interopRequireDefault(require(\"../node/setAlignItems\"));\n\nvar _setFlexShrink = _interopRequireDefault(require(\"../node/setFlexShrink\"));\n\nvar _setAspectRatio = _interopRequireDefault(require(\"../node/setAspectRatio\"));\n\nvar _setAlignContent = _interopRequireDefault(require(\"../node/setAlignContent\"));\n\nvar _setPositionType = _interopRequireDefault(require(\"../node/setPositionType\"));\n\nvar _setFlexDirection = _interopRequireDefault(require(\"../node/setFlexDirection\"));\n\nvar _setJustifyContent = _interopRequireDefault(require(\"../node/setJustifyContent\"));\n\nvar _setMargin = require(\"../node/setMargin\");\n\nvar _setPadding = require(\"../node/setPadding\");\n\nvar _setBorderWidth = require(\"../node/setBorderWidth\");\n\nvar _setPosition = require(\"../node/setPosition\");\n\nvar _setDimension = require(\"../node/setDimension\");\n\nvar _measureSvg = _interopRequireDefault(require(\"../svg/measureSvg\"));\n\nvar _measureText = _interopRequireDefault(require(\"../text/measureText\"));\n\nvar _measureImage = _interopRequireDefault(require(\"../image/measureImage\"));\n\nvar _measureCanvas = _interopRequireDefault(require(\"../canvas/measureCanvas\"));\n\nvar YOGA_NODE = '_yogaNode';\n\nvar YOGA_CONFIG = _yoga.default.Config.create();\n\nYOGA_CONFIG.setPointScaleFactor(0);\nvar isType = R.propEq('type');\nvar isSvg = isType(P.Svg);\nvar isText = isType(P.Text);\nvar isNote = isType(P.Note);\nvar isPage = isType(P.Page);\nvar isImage = isType(P.Image);\nvar isCanvas = isType(P.Canvas);\nvar isTextInstance = isType(P.TextInstance);\n\nvar setNodeHeight = function setNodeHeight(node) {\n  var value = isPage(node) ? node.box.height : node.style.height;\n  return (0, _setDimension.setHeight)(value);\n};\n/**\n * Set styles valeus into yoga node before layout calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */\n\n\nvar setYogaValues = R.tap(function (node) {\n  R.compose(setNodeHeight(node), (0, _setDimension.setWidth)(node.style.width), (0, _setDimension.setMinWidth)(node.style.minWidth), (0, _setDimension.setMaxWidth)(node.style.maxWidth), (0, _setDimension.setMinHeight)(node.style.minHeight), (0, _setDimension.setMaxHeight)(node.style.maxHeight), (0, _setMargin.setMarginTop)(node.style.marginTop), (0, _setMargin.setMarginRight)(node.style.marginRight), (0, _setMargin.setMarginBottom)(node.style.marginBottom), (0, _setMargin.setMarginLeft)(node.style.marginLeft), (0, _setPadding.setPaddingTop)(node.style.paddingTop), (0, _setPadding.setPaddingRight)(node.style.paddingRight), (0, _setPadding.setPaddingBottom)(node.style.paddingBottom), (0, _setPadding.setPaddingLeft)(node.style.paddingLeft), (0, _setPositionType.default)(node.style.position), (0, _setPosition.setPositionTop)(node.style.top), (0, _setPosition.setPositionRight)(node.style.right), (0, _setPosition.setPositionBottom)(node.style.bottom), (0, _setPosition.setPositionLeft)(node.style.left), (0, _setBorderWidth.setBorderTop)(node.style.borderTopWidth), (0, _setBorderWidth.setBorderRight)(node.style.borderRightWidth), (0, _setBorderWidth.setBorderBottom)(node.style.borderBottomWidth), (0, _setBorderWidth.setBorderLeft)(node.style.borderLeftWidth), (0, _setDisplay.default)(node.style.display), (0, _setFlexDirection.default)(node.style.flexDirection), (0, _setAlignSelf.default)(node.style.alignSelf), (0, _setAlignContent.default)(node.style.alignContent), (0, _setAlignItems.default)(node.style.alignItems), (0, _setJustifyContent.default)(node.style.justifyContent), (0, _setFlexWrap.default)(node.style.flexWrap), (0, _setOverflow.default)(node.style.overflow), (0, _setAspectRatio.default)(node.style.aspectRatio), (0, _setFlexBasis.default)(node.style.flexBasis), (0, _setFlexGrow.default)(node.style.flexGrow), (0, _setFlexShrink.default)(node.style.flexShrink))(node);\n});\n/**\n * Inserts child into parent' yoga node\n *\n * @param {Object} parent\n * @param {Object} node\n * @param {Object} node\n */\n\nvar insertYogaNodes = function insertYogaNodes(parent) {\n  return R.tap(function (child) {\n    return parent.insertChild(child[YOGA_NODE], parent.getChildCount());\n  });\n};\n\nvar setMeasureFunc = function setMeasureFunc(page, fontStore) {\n  return function (node) {\n    var yogaNode = node[YOGA_NODE];\n\n    if (isText(node)) {\n      yogaNode.setMeasureFunc((0, _measureText.default)(page, node, fontStore));\n    }\n\n    if (isImage(node)) {\n      yogaNode.setMeasureFunc((0, _measureImage.default)(page, node));\n    }\n\n    if (isCanvas(node)) {\n      yogaNode.setMeasureFunc((0, _measureCanvas.default)(page, node));\n    }\n\n    if (isSvg(node)) {\n      yogaNode.setMeasureFunc((0, _measureSvg.default)(page, node));\n    }\n\n    return node;\n  };\n};\n\nvar isNotText = R.complement(isText);\nvar isNotNote = R.complement(isNote);\nvar isNotSvg = R.complement(isSvg);\nvar isNotTextInstance = R.complement(isTextInstance);\nvar isLayoutElement = R.allPass([isNotText, isNotNote, isNotSvg]);\n/**\n * Creates and add yoga node to document tree\n * Handles measure function for text and image nodes\n *\n * @param {Object} node\n * @returns {Object} node with appended yoga node\n */\n\nvar createYogaNodes = function createYogaNodes(page, fontStore) {\n  return function (node) {\n    var yogaNode = _yoga.default.Node.createWithConfig(YOGA_CONFIG);\n\n    return R.compose(setMeasureFunc(page, fontStore), R.when(isLayoutElement, R.evolve({\n      children: R.map(R.compose(insertYogaNodes(yogaNode), createYogaNodes(page, fontStore)))\n    })), setYogaValues, R.assoc(YOGA_NODE, yogaNode))(node);\n  };\n};\n/**\n * Performs yoga calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */\n\n\nvar calculateLayout = function calculateLayout(page) {\n  page[YOGA_NODE].calculateLayout();\n  return page;\n};\n/**\n * Saves Yoga layout result into 'box' attribute of node\n *\n * @param {Object} node\n * @returns {Object} node with box data\n */\n\n\nvar persistDimensions = function persistDimensions(node) {\n  return R.evolve({\n    children: R.map(R.when(isNotTextInstance, persistDimensions)),\n    box: R.always(R.mergeAll([(0, _getPadding.default)(node), (0, _getMargin.default)(node), (0, _getBorderWidth.default)(node), (0, _getPosition.default)(node), (0, _getDimension.default)(node)]))\n  })(node);\n};\n/**\n * Removes yoga node from document tree\n *\n * @param {Object} node\n * @returns {Object} node without yoga node\n */\n\n\nvar destroyYogaNodes = function destroyYogaNodes(node) {\n  return R.compose(R.dissoc(YOGA_NODE), R.evolve({\n    children: R.map(destroyYogaNodes)\n  }))(node);\n};\n/**\n * Free yoga node from document tree\n *\n * @param {Object} node\n * @returns {Object} node without yoga node\n */\n\n\nvar freeYogaNodes = function freeYogaNodes(node) {\n  if (node[YOGA_NODE]) node[YOGA_NODE].freeRecursive();\n  return node;\n};\n/**\n * Calculates page object layout using Yoga.\n * Takes node values from 'box' and 'style' attributes, and persist them back into 'box'\n * Destroy yoga values at the end.\n *\n * @param {Object} page object\n * @returns {Object} page object with correct 'box' layout attributes\n */\n\n\nvar resolvePageDimensions = function resolvePageDimensions(page, fontStore) {\n  return R.ifElse(R.isNil, R.always(null), R.compose(destroyYogaNodes, freeYogaNodes, persistDimensions, calculateLayout, createYogaNodes(page, fontStore)))(page);\n};\n/**\n * Calculates root object layout using Yoga.\n *\n * @param {Object} root object\n * @returns {Object} root object with correct 'box' layout attributes\n */\n\n\nexports.resolvePageDimensions = resolvePageDimensions;\n\nvar resolveDimensions = function resolveDimensions(node, fontStore) {\n  var mapChild = function mapChild(child) {\n    return resolvePageDimensions(child, fontStore);\n  };\n\n  return R.evolve({\n    children: R.map(mapChild)\n  })(node);\n};\n\nvar _default = resolveDimensions;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","resolvePageDimensions","R","_yoga","P","_getMargin","_getPadding","_getPosition","_getDimension","_getBorderWidth","_setDisplay","_setOverflow","_setFlexWrap","_setFlexGrow","_setFlexBasis","_setAlignSelf","_setAlignItems","_setFlexShrink","_setAspectRatio","_setAlignContent","_setPositionType","_setFlexDirection","_setJustifyContent","_setMargin","_setPadding","_setBorderWidth","_setPosition","_setDimension","_measureSvg","_measureText","_measureImage","_measureCanvas","YOGA_NODE","YOGA_CONFIG","Config","create","setPointScaleFactor","isType","propEq","isSvg","Svg","isText","Text","isNote","Note","isPage","Page","isImage","Image","isCanvas","Canvas","isTextInstance","TextInstance","setNodeHeight","node","value","box","height","style","setHeight","setYogaValues","tap","compose","setWidth","width","setMinWidth","minWidth","setMaxWidth","maxWidth","setMinHeight","minHeight","setMaxHeight","maxHeight","setMarginTop","marginTop","setMarginRight","marginRight","setMarginBottom","marginBottom","setMarginLeft","marginLeft","setPaddingTop","paddingTop","setPaddingRight","paddingRight","setPaddingBottom","paddingBottom","setPaddingLeft","paddingLeft","position","setPositionTop","top","setPositionRight","right","setPositionBottom","bottom","setPositionLeft","left","setBorderTop","borderTopWidth","setBorderRight","borderRightWidth","setBorderBottom","borderBottomWidth","setBorderLeft","borderLeftWidth","display","flexDirection","alignSelf","alignContent","alignItems","justifyContent","flexWrap","overflow","aspectRatio","flexBasis","flexGrow","flexShrink","insertYogaNodes","parent","child","insertChild","getChildCount","setMeasureFunc","page","fontStore","yogaNode","isNotText","complement","isNotNote","isNotSvg","isNotTextInstance","isLayoutElement","allPass","createYogaNodes","Node","createWithConfig","when","evolve","children","map","assoc","calculateLayout","persistDimensions","always","mergeAll","destroyYogaNodes","dissoc","freeYogaNodes","freeRecursive","ifElse","isNil","resolveDimensions","mapChild","_default"],"sources":["/home/carlobottaro/Documents/Università/gamification/node_modules/@react-pdf/layout/lib/steps/resolveDimensions.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.resolvePageDimensions = exports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _yoga = _interopRequireDefault(require(\"@react-pdf/yoga\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar _getMargin = _interopRequireDefault(require(\"../node/getMargin\"));\n\nvar _getPadding = _interopRequireDefault(require(\"../node/getPadding\"));\n\nvar _getPosition = _interopRequireDefault(require(\"../node/getPosition\"));\n\nvar _getDimension = _interopRequireDefault(require(\"../node/getDimension\"));\n\nvar _getBorderWidth = _interopRequireDefault(require(\"../node/getBorderWidth\"));\n\nvar _setDisplay = _interopRequireDefault(require(\"../node/setDisplay\"));\n\nvar _setOverflow = _interopRequireDefault(require(\"../node/setOverflow\"));\n\nvar _setFlexWrap = _interopRequireDefault(require(\"../node/setFlexWrap\"));\n\nvar _setFlexGrow = _interopRequireDefault(require(\"../node/setFlexGrow\"));\n\nvar _setFlexBasis = _interopRequireDefault(require(\"../node/setFlexBasis\"));\n\nvar _setAlignSelf = _interopRequireDefault(require(\"../node/setAlignSelf\"));\n\nvar _setAlignItems = _interopRequireDefault(require(\"../node/setAlignItems\"));\n\nvar _setFlexShrink = _interopRequireDefault(require(\"../node/setFlexShrink\"));\n\nvar _setAspectRatio = _interopRequireDefault(require(\"../node/setAspectRatio\"));\n\nvar _setAlignContent = _interopRequireDefault(require(\"../node/setAlignContent\"));\n\nvar _setPositionType = _interopRequireDefault(require(\"../node/setPositionType\"));\n\nvar _setFlexDirection = _interopRequireDefault(require(\"../node/setFlexDirection\"));\n\nvar _setJustifyContent = _interopRequireDefault(require(\"../node/setJustifyContent\"));\n\nvar _setMargin = require(\"../node/setMargin\");\n\nvar _setPadding = require(\"../node/setPadding\");\n\nvar _setBorderWidth = require(\"../node/setBorderWidth\");\n\nvar _setPosition = require(\"../node/setPosition\");\n\nvar _setDimension = require(\"../node/setDimension\");\n\nvar _measureSvg = _interopRequireDefault(require(\"../svg/measureSvg\"));\n\nvar _measureText = _interopRequireDefault(require(\"../text/measureText\"));\n\nvar _measureImage = _interopRequireDefault(require(\"../image/measureImage\"));\n\nvar _measureCanvas = _interopRequireDefault(require(\"../canvas/measureCanvas\"));\n\nvar YOGA_NODE = '_yogaNode';\n\nvar YOGA_CONFIG = _yoga.default.Config.create();\n\nYOGA_CONFIG.setPointScaleFactor(0);\nvar isType = R.propEq('type');\nvar isSvg = isType(P.Svg);\nvar isText = isType(P.Text);\nvar isNote = isType(P.Note);\nvar isPage = isType(P.Page);\nvar isImage = isType(P.Image);\nvar isCanvas = isType(P.Canvas);\nvar isTextInstance = isType(P.TextInstance);\n\nvar setNodeHeight = function setNodeHeight(node) {\n  var value = isPage(node) ? node.box.height : node.style.height;\n  return (0, _setDimension.setHeight)(value);\n};\n/**\n * Set styles valeus into yoga node before layout calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */\n\n\nvar setYogaValues = R.tap(function (node) {\n  R.compose(setNodeHeight(node), (0, _setDimension.setWidth)(node.style.width), (0, _setDimension.setMinWidth)(node.style.minWidth), (0, _setDimension.setMaxWidth)(node.style.maxWidth), (0, _setDimension.setMinHeight)(node.style.minHeight), (0, _setDimension.setMaxHeight)(node.style.maxHeight), (0, _setMargin.setMarginTop)(node.style.marginTop), (0, _setMargin.setMarginRight)(node.style.marginRight), (0, _setMargin.setMarginBottom)(node.style.marginBottom), (0, _setMargin.setMarginLeft)(node.style.marginLeft), (0, _setPadding.setPaddingTop)(node.style.paddingTop), (0, _setPadding.setPaddingRight)(node.style.paddingRight), (0, _setPadding.setPaddingBottom)(node.style.paddingBottom), (0, _setPadding.setPaddingLeft)(node.style.paddingLeft), (0, _setPositionType.default)(node.style.position), (0, _setPosition.setPositionTop)(node.style.top), (0, _setPosition.setPositionRight)(node.style.right), (0, _setPosition.setPositionBottom)(node.style.bottom), (0, _setPosition.setPositionLeft)(node.style.left), (0, _setBorderWidth.setBorderTop)(node.style.borderTopWidth), (0, _setBorderWidth.setBorderRight)(node.style.borderRightWidth), (0, _setBorderWidth.setBorderBottom)(node.style.borderBottomWidth), (0, _setBorderWidth.setBorderLeft)(node.style.borderLeftWidth), (0, _setDisplay.default)(node.style.display), (0, _setFlexDirection.default)(node.style.flexDirection), (0, _setAlignSelf.default)(node.style.alignSelf), (0, _setAlignContent.default)(node.style.alignContent), (0, _setAlignItems.default)(node.style.alignItems), (0, _setJustifyContent.default)(node.style.justifyContent), (0, _setFlexWrap.default)(node.style.flexWrap), (0, _setOverflow.default)(node.style.overflow), (0, _setAspectRatio.default)(node.style.aspectRatio), (0, _setFlexBasis.default)(node.style.flexBasis), (0, _setFlexGrow.default)(node.style.flexGrow), (0, _setFlexShrink.default)(node.style.flexShrink))(node);\n});\n/**\n * Inserts child into parent' yoga node\n *\n * @param {Object} parent\n * @param {Object} node\n * @param {Object} node\n */\n\nvar insertYogaNodes = function insertYogaNodes(parent) {\n  return R.tap(function (child) {\n    return parent.insertChild(child[YOGA_NODE], parent.getChildCount());\n  });\n};\n\nvar setMeasureFunc = function setMeasureFunc(page, fontStore) {\n  return function (node) {\n    var yogaNode = node[YOGA_NODE];\n\n    if (isText(node)) {\n      yogaNode.setMeasureFunc((0, _measureText.default)(page, node, fontStore));\n    }\n\n    if (isImage(node)) {\n      yogaNode.setMeasureFunc((0, _measureImage.default)(page, node));\n    }\n\n    if (isCanvas(node)) {\n      yogaNode.setMeasureFunc((0, _measureCanvas.default)(page, node));\n    }\n\n    if (isSvg(node)) {\n      yogaNode.setMeasureFunc((0, _measureSvg.default)(page, node));\n    }\n\n    return node;\n  };\n};\n\nvar isNotText = R.complement(isText);\nvar isNotNote = R.complement(isNote);\nvar isNotSvg = R.complement(isSvg);\nvar isNotTextInstance = R.complement(isTextInstance);\nvar isLayoutElement = R.allPass([isNotText, isNotNote, isNotSvg]);\n/**\n * Creates and add yoga node to document tree\n * Handles measure function for text and image nodes\n *\n * @param {Object} node\n * @returns {Object} node with appended yoga node\n */\n\nvar createYogaNodes = function createYogaNodes(page, fontStore) {\n  return function (node) {\n    var yogaNode = _yoga.default.Node.createWithConfig(YOGA_CONFIG);\n\n    return R.compose(setMeasureFunc(page, fontStore), R.when(isLayoutElement, R.evolve({\n      children: R.map(R.compose(insertYogaNodes(yogaNode), createYogaNodes(page, fontStore)))\n    })), setYogaValues, R.assoc(YOGA_NODE, yogaNode))(node);\n  };\n};\n/**\n * Performs yoga calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */\n\n\nvar calculateLayout = function calculateLayout(page) {\n  page[YOGA_NODE].calculateLayout();\n  return page;\n};\n/**\n * Saves Yoga layout result into 'box' attribute of node\n *\n * @param {Object} node\n * @returns {Object} node with box data\n */\n\n\nvar persistDimensions = function persistDimensions(node) {\n  return R.evolve({\n    children: R.map(R.when(isNotTextInstance, persistDimensions)),\n    box: R.always(R.mergeAll([(0, _getPadding.default)(node), (0, _getMargin.default)(node), (0, _getBorderWidth.default)(node), (0, _getPosition.default)(node), (0, _getDimension.default)(node)]))\n  })(node);\n};\n/**\n * Removes yoga node from document tree\n *\n * @param {Object} node\n * @returns {Object} node without yoga node\n */\n\n\nvar destroyYogaNodes = function destroyYogaNodes(node) {\n  return R.compose(R.dissoc(YOGA_NODE), R.evolve({\n    children: R.map(destroyYogaNodes)\n  }))(node);\n};\n/**\n * Free yoga node from document tree\n *\n * @param {Object} node\n * @returns {Object} node without yoga node\n */\n\n\nvar freeYogaNodes = function freeYogaNodes(node) {\n  if (node[YOGA_NODE]) node[YOGA_NODE].freeRecursive();\n  return node;\n};\n/**\n * Calculates page object layout using Yoga.\n * Takes node values from 'box' and 'style' attributes, and persist them back into 'box'\n * Destroy yoga values at the end.\n *\n * @param {Object} page object\n * @returns {Object} page object with correct 'box' layout attributes\n */\n\n\nvar resolvePageDimensions = function resolvePageDimensions(page, fontStore) {\n  return R.ifElse(R.isNil, R.always(null), R.compose(destroyYogaNodes, freeYogaNodes, persistDimensions, calculateLayout, createYogaNodes(page, fontStore)))(page);\n};\n/**\n * Calculates root object layout using Yoga.\n *\n * @param {Object} root object\n * @returns {Object} root object with correct 'box' layout attributes\n */\n\n\nexports.resolvePageDimensions = resolvePageDimensions;\n\nvar resolveDimensions = function resolveDimensions(node, fontStore) {\n  var mapChild = function mapChild(child) {\n    return resolvePageDimensions(child, fontStore);\n  };\n\n  return R.evolve({\n    children: R.map(mapChild)\n  })(node);\n};\n\nvar _default = resolveDimensions;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}