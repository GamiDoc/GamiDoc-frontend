{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _isWhiteSpace = _interopRequireDefault(require(\"../glyph/isWhiteSpace\"));\n/**\n * Get white space leading positions\n *\n * @param  {Object}  run\n * @return {Array} white space leading positions\n */\n\n\nvar leadingPositions = R.converge(R.slice(0), [R.compose(R.length, R.takeWhile(_isWhiteSpace.default), R.propOr([], 'glyphs')), R.propOr([], 'positions')]);\n/**\n * Get run leading white space offset\n *\n * @param  {Object}  run\n * @return {number} leading white space offset\n */\n\nvar leadingOffset = R.compose(R.ifElse(R.isEmpty, R.always(0), R.compose(R.sum, R.map(R.propOr(0, 'xAdvance')))), leadingPositions);\nvar _default = leadingOffset;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","_isWhiteSpace","leadingPositions","converge","slice","compose","length","takeWhile","propOr","leadingOffset","ifElse","isEmpty","always","sum","map","_default"],"sources":["/home/carlobottaro/Documents/Universit√†/gamification/node_modules/@react-pdf/textkit/lib/run/leadingOffset.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _isWhiteSpace = _interopRequireDefault(require(\"../glyph/isWhiteSpace\"));\n\n/**\n * Get white space leading positions\n *\n * @param  {Object}  run\n * @return {Array} white space leading positions\n */\nvar leadingPositions = R.converge(R.slice(0), [R.compose(R.length, R.takeWhile(_isWhiteSpace.default), R.propOr([], 'glyphs')), R.propOr([], 'positions')]);\n/**\n * Get run leading white space offset\n *\n * @param  {Object}  run\n * @return {number} leading white space offset\n */\n\nvar leadingOffset = R.compose(R.ifElse(R.isEmpty, R.always(0), R.compose(R.sum, R.map(R.propOr(0, 'xAdvance')))), leadingPositions);\nvar _default = leadingOffset;\nexports.default = _default;"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAAP,CAAwDC,OAArF;;AAEA,IAAIC,uBAAuB,GAAGF,OAAO,CAAC,+CAAD,CAAP,CAAyDC,OAAvF;;AAEAE,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACF,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAII,CAAC,GAAGH,uBAAuB,CAACF,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIM,aAAa,GAAGP,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAA1C;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIO,gBAAgB,GAAGF,CAAC,CAACG,QAAF,CAAWH,CAAC,CAACI,KAAF,CAAQ,CAAR,CAAX,EAAuB,CAACJ,CAAC,CAACK,OAAF,CAAUL,CAAC,CAACM,MAAZ,EAAoBN,CAAC,CAACO,SAAF,CAAYN,aAAa,CAACL,OAA1B,CAApB,EAAwDI,CAAC,CAACQ,MAAF,CAAS,EAAT,EAAa,QAAb,CAAxD,CAAD,EAAkFR,CAAC,CAACQ,MAAF,CAAS,EAAT,EAAa,WAAb,CAAlF,CAAvB,CAAvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,aAAa,GAAGT,CAAC,CAACK,OAAF,CAAUL,CAAC,CAACU,MAAF,CAASV,CAAC,CAACW,OAAX,EAAoBX,CAAC,CAACY,MAAF,CAAS,CAAT,CAApB,EAAiCZ,CAAC,CAACK,OAAF,CAAUL,CAAC,CAACa,GAAZ,EAAiBb,CAAC,CAACc,GAAF,CAAMd,CAAC,CAACQ,MAAF,CAAS,CAAT,EAAY,UAAZ,CAAN,CAAjB,CAAjC,CAAV,EAA8FN,gBAA9F,CAApB;AACA,IAAIa,QAAQ,GAAGN,aAAf;AACAX,OAAO,CAACF,OAAR,GAAkBmB,QAAlB"},"metadata":{},"sourceType":"script"}