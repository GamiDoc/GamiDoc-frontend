{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _unicodeProperties = _interopRequireDefault(require(\"@react-pdf/unicode-properties\"));\n\nvar _empty = _interopRequireDefault(require(\"../../attributedString/empty\"));\n\nvar ignoredScripts = ['Common', 'Inherited', 'Unknown'];\n/**\n * Resolves unicode script in runs, grouping equal runs together\n *\n * @param  {Object}  layout options\n * @param  {Object}  attributed string\n * @return {Object} attributed string\n */\n\nvar scriptItemizer = function scriptItemizer(options, attributedString) {\n  var string = attributedString.string;\n  var lastScript = 'Unknown';\n  var lastIndex = 0;\n  var index = 0;\n  var res = [];\n  if (!string) return (0, _empty.default)();\n\n  for (var i = 0; i < string.length; i += 1) {\n    var char = string[i];\n    var codePoint = char.codePointAt();\n\n    var script = _unicodeProperties.default.getScript(codePoint);\n\n    if (script !== lastScript && !ignoredScripts.includes(script)) {\n      if (lastScript !== 'Unknown') {\n        res.push({\n          start: lastIndex,\n          end: index,\n          attributes: {\n            script: lastScript\n          }\n        });\n      }\n\n      lastIndex = index;\n      lastScript = script;\n    }\n\n    index += char.length;\n  }\n\n  if (lastIndex < string.length) {\n    res.push({\n      start: lastIndex,\n      end: string.length,\n      attributes: {\n        script: lastScript\n      }\n    });\n  }\n\n  return {\n    string: string,\n    runs: res\n  };\n};\n\nvar _default = R.curryN(2, scriptItemizer);\n\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","_unicodeProperties","_empty","ignoredScripts","scriptItemizer","options","attributedString","string","lastScript","lastIndex","index","res","i","length","char","codePoint","codePointAt","script","getScript","includes","push","start","end","attributes","runs","_default","curryN"],"sources":["/home/carlobottaro/Documents/UniversitÃ /gamification/node_modules/@react-pdf/textkit/lib/engines/scriptItemizer/index.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _unicodeProperties = _interopRequireDefault(require(\"@react-pdf/unicode-properties\"));\n\nvar _empty = _interopRequireDefault(require(\"../../attributedString/empty\"));\n\nvar ignoredScripts = ['Common', 'Inherited', 'Unknown'];\n/**\n * Resolves unicode script in runs, grouping equal runs together\n *\n * @param  {Object}  layout options\n * @param  {Object}  attributed string\n * @return {Object} attributed string\n */\n\nvar scriptItemizer = function scriptItemizer(options, attributedString) {\n  var string = attributedString.string;\n  var lastScript = 'Unknown';\n  var lastIndex = 0;\n  var index = 0;\n  var res = [];\n  if (!string) return (0, _empty.default)();\n\n  for (var i = 0; i < string.length; i += 1) {\n    var char = string[i];\n    var codePoint = char.codePointAt();\n\n    var script = _unicodeProperties.default.getScript(codePoint);\n\n    if (script !== lastScript && !ignoredScripts.includes(script)) {\n      if (lastScript !== 'Unknown') {\n        res.push({\n          start: lastIndex,\n          end: index,\n          attributes: {\n            script: lastScript\n          }\n        });\n      }\n\n      lastIndex = index;\n      lastScript = script;\n    }\n\n    index += char.length;\n  }\n\n  if (lastIndex < string.length) {\n    res.push({\n      start: lastIndex,\n      end: string.length,\n      attributes: {\n        script: lastScript\n      }\n    });\n  }\n\n  return {\n    string: string,\n    runs: res\n  };\n};\n\nvar _default = R.curryN(2, scriptItemizer);\n\nexports.default = _default;"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAAP,CAAwDC,OAArF;;AAEA,IAAIC,uBAAuB,GAAGF,OAAO,CAAC,+CAAD,CAAP,CAAyDC,OAAvF;;AAEAE,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACF,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAII,CAAC,GAAGH,uBAAuB,CAACF,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIM,kBAAkB,GAAGP,sBAAsB,CAACC,OAAO,CAAC,+BAAD,CAAR,CAA/C;;AAEA,IAAIO,MAAM,GAAGR,sBAAsB,CAACC,OAAO,CAAC,8BAAD,CAAR,CAAnC;;AAEA,IAAIQ,cAAc,GAAG,CAAC,QAAD,EAAW,WAAX,EAAwB,SAAxB,CAArB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,OAAxB,EAAiCC,gBAAjC,EAAmD;EACtE,IAAIC,MAAM,GAAGD,gBAAgB,CAACC,MAA9B;EACA,IAAIC,UAAU,GAAG,SAAjB;EACA,IAAIC,SAAS,GAAG,CAAhB;EACA,IAAIC,KAAK,GAAG,CAAZ;EACA,IAAIC,GAAG,GAAG,EAAV;EACA,IAAI,CAACJ,MAAL,EAAa,OAAO,CAAC,GAAGL,MAAM,CAACN,OAAX,GAAP;;EAEb,KAAK,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,MAAM,CAACM,MAA3B,EAAmCD,CAAC,IAAI,CAAxC,EAA2C;IACzC,IAAIE,IAAI,GAAGP,MAAM,CAACK,CAAD,CAAjB;IACA,IAAIG,SAAS,GAAGD,IAAI,CAACE,WAAL,EAAhB;;IAEA,IAAIC,MAAM,GAAGhB,kBAAkB,CAACL,OAAnB,CAA2BsB,SAA3B,CAAqCH,SAArC,CAAb;;IAEA,IAAIE,MAAM,KAAKT,UAAX,IAAyB,CAACL,cAAc,CAACgB,QAAf,CAAwBF,MAAxB,CAA9B,EAA+D;MAC7D,IAAIT,UAAU,KAAK,SAAnB,EAA8B;QAC5BG,GAAG,CAACS,IAAJ,CAAS;UACPC,KAAK,EAAEZ,SADA;UAEPa,GAAG,EAAEZ,KAFE;UAGPa,UAAU,EAAE;YACVN,MAAM,EAAET;UADE;QAHL,CAAT;MAOD;;MAEDC,SAAS,GAAGC,KAAZ;MACAF,UAAU,GAAGS,MAAb;IACD;;IAEDP,KAAK,IAAII,IAAI,CAACD,MAAd;EACD;;EAED,IAAIJ,SAAS,GAAGF,MAAM,CAACM,MAAvB,EAA+B;IAC7BF,GAAG,CAACS,IAAJ,CAAS;MACPC,KAAK,EAAEZ,SADA;MAEPa,GAAG,EAAEf,MAAM,CAACM,MAFL;MAGPU,UAAU,EAAE;QACVN,MAAM,EAAET;MADE;IAHL,CAAT;EAOD;;EAED,OAAO;IACLD,MAAM,EAAEA,MADH;IAELiB,IAAI,EAAEb;EAFD,CAAP;AAID,CA9CD;;AAgDA,IAAIc,QAAQ,GAAGzB,CAAC,CAAC0B,MAAF,CAAS,CAAT,EAAYtB,cAAZ,CAAf;;AAEAN,OAAO,CAACF,OAAR,GAAkB6B,QAAlB"},"metadata":{},"sourceType":"script"}