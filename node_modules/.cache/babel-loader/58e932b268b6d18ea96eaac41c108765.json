{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _absSvgPath = _interopRequireDefault(require(\"abs-svg-path\"));\n\nvar _parseSvgPath = _interopRequireDefault(require(\"parse-svg-path\"));\n\nvar _normalizeSvgPath = _interopRequireDefault(require(\"normalize-svg-path\"));\n\nvar _isRect = _interopRequireDefault(require(\"../utils/isRect\"));\n\nvar _isLine = _interopRequireDefault(require(\"../utils/isLine\"));\n\nvar _isPath = _interopRequireDefault(require(\"../utils/isPath\"));\n\nvar _isCircle = _interopRequireDefault(require(\"../utils/isCircle\"));\n\nvar _isPolygon = _interopRequireDefault(require(\"../utils/isPolygon\"));\n\nvar _isEllipse = _interopRequireDefault(require(\"../utils/isEllipse\"));\n\nvar _isPolyline = _interopRequireDefault(require(\"../utils/isPolyline\"));\n\nvar _parsePoints = _interopRequireDefault(require(\"./parsePoints\")); // From https://github.com/dy/svg-path-bounds/blob/master/index.js\n\n\nvar getPathBoundingBox = function getPathBoundingBox(node) {\n  var path = R.compose(_normalizeSvgPath.default, _absSvgPath.default, _parseSvgPath.default, R.pathOr('', ['props', 'd']))(node);\n  if (!path.length) return [0, 0, 0, 0];\n  var bounds = [Infinity, Infinity, -Infinity, -Infinity];\n\n  for (var i = 0, l = path.length; i < l; i += 1) {\n    var points = path[i].slice(1);\n\n    for (var j = 0; j < points.length; j += 2) {\n      if (points[j + 0] < bounds[0]) bounds[0] = points[j + 0];\n      if (points[j + 1] < bounds[1]) bounds[1] = points[j + 1];\n      if (points[j + 0] > bounds[2]) bounds[2] = points[j + 0];\n      if (points[j + 1] > bounds[3]) bounds[3] = points[j + 1];\n    }\n  }\n\n  return bounds;\n};\n\nvar getCircleBoundingBox = function getCircleBoundingBox(node) {\n  var r = R.pathOr(0, ['props', 'r'], node);\n  var cx = R.pathOr(0, ['props', 'cx'], node);\n  var cy = R.pathOr(0, ['props', 'cy'], node);\n  return [cx - r, cy - r, cx + r, cy + r];\n};\n\nvar getEllipseBoundingBox = function getEllipseBoundingBox(node) {\n  var cx = R.pathOr(0, ['props', 'cx'], node);\n  var cy = R.pathOr(0, ['props', 'cy'], node);\n  var rx = R.pathOr(0, ['props', 'rx'], node);\n  var ry = R.pathOr(0, ['props', 'ry'], node);\n  return [cx - rx, cy - ry, cx + rx, cy + ry];\n};\n\nvar getLineBoundingBox = function getLineBoundingBox(node) {\n  var x1 = R.pathOr(0, ['props', 'x1'], node);\n  var y1 = R.pathOr(0, ['props', 'y1'], node);\n  var x2 = R.pathOr(0, ['props', 'x2'], node);\n  var y2 = R.pathOr(0, ['props', 'y2'], node);\n  return [R.min(x1, x2), R.min(y1, y2), R.max(x1, x2), R.max(y1, y2)];\n};\n\nvar getRectBoundingBox = function getRectBoundingBox(node) {\n  var x = R.pathOr(0, ['props', 'x'], node);\n  var y = R.pathOr(0, ['props', 'y'], node);\n  var width = R.pathOr(0, ['props', 'width'], node);\n  var height = R.pathOr(0, ['props', 'height'], node);\n  return [x, y, x + width, y + height];\n};\n\nvar max = R.reduce(R.max, -Infinity);\nvar min = R.reduce(R.min, Infinity);\n\nvar getPolylineBoundingBox = function getPolylineBoundingBox(node) {\n  var points = R.compose(_parsePoints.default, R.pathOr([], ['props', 'points']))(node);\n  var xValues = R.pluck(0, points);\n  var yValues = R.pluck(1, points);\n  return [min(xValues), min(yValues), max(xValues), max(yValues)];\n};\n\nvar getBoundingBox = R.cond([[_isRect.default, getRectBoundingBox], [_isLine.default, getLineBoundingBox], [_isPath.default, getPathBoundingBox], [_isCircle.default, getCircleBoundingBox], [_isEllipse.default, getEllipseBoundingBox], [_isPolygon.default, getPolylineBoundingBox], [_isPolyline.default, getPolylineBoundingBox], [R.T, R.always([0, 0, 0, 0])]]);\nvar _default = getBoundingBox;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","_absSvgPath","_parseSvgPath","_normalizeSvgPath","_isRect","_isLine","_isPath","_isCircle","_isPolygon","_isEllipse","_isPolyline","_parsePoints","getPathBoundingBox","node","path","compose","pathOr","length","bounds","Infinity","i","l","points","slice","j","getCircleBoundingBox","r","cx","cy","getEllipseBoundingBox","rx","ry","getLineBoundingBox","x1","y1","x2","y2","min","max","getRectBoundingBox","x","y","width","height","reduce","getPolylineBoundingBox","xValues","pluck","yValues","getBoundingBox","cond","T","always","_default"],"sources":["/home/carlobottaro/Documents/Universit√†/gamification/node_modules/@react-pdf/render/lib/svg/getBoundingBox.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _absSvgPath = _interopRequireDefault(require(\"abs-svg-path\"));\n\nvar _parseSvgPath = _interopRequireDefault(require(\"parse-svg-path\"));\n\nvar _normalizeSvgPath = _interopRequireDefault(require(\"normalize-svg-path\"));\n\nvar _isRect = _interopRequireDefault(require(\"../utils/isRect\"));\n\nvar _isLine = _interopRequireDefault(require(\"../utils/isLine\"));\n\nvar _isPath = _interopRequireDefault(require(\"../utils/isPath\"));\n\nvar _isCircle = _interopRequireDefault(require(\"../utils/isCircle\"));\n\nvar _isPolygon = _interopRequireDefault(require(\"../utils/isPolygon\"));\n\nvar _isEllipse = _interopRequireDefault(require(\"../utils/isEllipse\"));\n\nvar _isPolyline = _interopRequireDefault(require(\"../utils/isPolyline\"));\n\nvar _parsePoints = _interopRequireDefault(require(\"./parsePoints\"));\n\n// From https://github.com/dy/svg-path-bounds/blob/master/index.js\nvar getPathBoundingBox = function getPathBoundingBox(node) {\n  var path = R.compose(_normalizeSvgPath.default, _absSvgPath.default, _parseSvgPath.default, R.pathOr('', ['props', 'd']))(node);\n  if (!path.length) return [0, 0, 0, 0];\n  var bounds = [Infinity, Infinity, -Infinity, -Infinity];\n\n  for (var i = 0, l = path.length; i < l; i += 1) {\n    var points = path[i].slice(1);\n\n    for (var j = 0; j < points.length; j += 2) {\n      if (points[j + 0] < bounds[0]) bounds[0] = points[j + 0];\n      if (points[j + 1] < bounds[1]) bounds[1] = points[j + 1];\n      if (points[j + 0] > bounds[2]) bounds[2] = points[j + 0];\n      if (points[j + 1] > bounds[3]) bounds[3] = points[j + 1];\n    }\n  }\n\n  return bounds;\n};\n\nvar getCircleBoundingBox = function getCircleBoundingBox(node) {\n  var r = R.pathOr(0, ['props', 'r'], node);\n  var cx = R.pathOr(0, ['props', 'cx'], node);\n  var cy = R.pathOr(0, ['props', 'cy'], node);\n  return [cx - r, cy - r, cx + r, cy + r];\n};\n\nvar getEllipseBoundingBox = function getEllipseBoundingBox(node) {\n  var cx = R.pathOr(0, ['props', 'cx'], node);\n  var cy = R.pathOr(0, ['props', 'cy'], node);\n  var rx = R.pathOr(0, ['props', 'rx'], node);\n  var ry = R.pathOr(0, ['props', 'ry'], node);\n  return [cx - rx, cy - ry, cx + rx, cy + ry];\n};\n\nvar getLineBoundingBox = function getLineBoundingBox(node) {\n  var x1 = R.pathOr(0, ['props', 'x1'], node);\n  var y1 = R.pathOr(0, ['props', 'y1'], node);\n  var x2 = R.pathOr(0, ['props', 'x2'], node);\n  var y2 = R.pathOr(0, ['props', 'y2'], node);\n  return [R.min(x1, x2), R.min(y1, y2), R.max(x1, x2), R.max(y1, y2)];\n};\n\nvar getRectBoundingBox = function getRectBoundingBox(node) {\n  var x = R.pathOr(0, ['props', 'x'], node);\n  var y = R.pathOr(0, ['props', 'y'], node);\n  var width = R.pathOr(0, ['props', 'width'], node);\n  var height = R.pathOr(0, ['props', 'height'], node);\n  return [x, y, x + width, y + height];\n};\n\nvar max = R.reduce(R.max, -Infinity);\nvar min = R.reduce(R.min, Infinity);\n\nvar getPolylineBoundingBox = function getPolylineBoundingBox(node) {\n  var points = R.compose(_parsePoints.default, R.pathOr([], ['props', 'points']))(node);\n  var xValues = R.pluck(0, points);\n  var yValues = R.pluck(1, points);\n  return [min(xValues), min(yValues), max(xValues), max(yValues)];\n};\n\nvar getBoundingBox = R.cond([[_isRect.default, getRectBoundingBox], [_isLine.default, getLineBoundingBox], [_isPath.default, getPathBoundingBox], [_isCircle.default, getCircleBoundingBox], [_isEllipse.default, getEllipseBoundingBox], [_isPolygon.default, getPolylineBoundingBox], [_isPolyline.default, getPolylineBoundingBox], [R.T, R.always([0, 0, 0, 0])]]);\nvar _default = getBoundingBox;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}