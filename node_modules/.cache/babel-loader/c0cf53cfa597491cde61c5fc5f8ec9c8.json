{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _advanceWidth = _interopRequireDefault(require(\"../attributedString/advanceWidth\"));\n\nvar _leadingOffset = _interopRequireDefault(require(\"../attributedString/leadingOffset\"));\n\nvar _trailingOffset = _interopRequireDefault(require(\"../attributedString/trailingOffset\"));\n\nvar _dropLast = _interopRequireDefault(require(\"../attributedString/dropLast\"));\n\nvar ALIGNMENT_FACTORS = {\n  center: 0.5,\n  right: 1\n};\n/**\n * Remove new line char at the end of line if present\n *\n * @param  {Object}  line\n * @return {Object} line\n */\n\nvar removeNewLine = R.when(R.compose(R.equals('\\n'), R.last, R.prop('string')), _dropLast.default);\nvar getOverflowLeft = R.converge(R.add, [R.propOr(0, 'overflowLeft'), _leadingOffset.default]);\nvar getOverflowRight = R.converge(R.add, [R.propOr(0, 'overflowRight'), _trailingOffset.default]);\n/**\n * Ignore whitespace at the start and end of a line for alignment\n *\n * @param  {Object}  line\n * @return {Object} line\n */\n\nvar adjustOverflow = function adjustOverflow(line) {\n  var overflowLeft = getOverflowLeft(line);\n  var overflowRight = getOverflowRight(line);\n  return R.compose(R.assoc('overflowLeft', overflowLeft), R.assoc('overflowRight', overflowRight), R.evolve({\n    box: R.evolve({\n      x: R.subtract(R.__, overflowLeft),\n      width: R.add(overflowLeft + overflowRight)\n    })\n  }))(line);\n};\n/**\n * Performs line justification by calling appropiate engine\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {string}  text align\n * @param  {Object}  line\n * @return {Object} line\n */\n\n\nvar justifyLine = function justifyLine(engines, options, align) {\n  return function (line) {\n    var lineWidth = (0, _advanceWidth.default)(line);\n    var alignFactor = ALIGNMENT_FACTORS[align] || 0;\n    var remainingWidth = Math.max(0, line.box.width - lineWidth);\n    var shouldJustify = align === 'justify' || lineWidth > line.box.width;\n    return R.compose(R.when(R.always(shouldJustify), engines.justification(options)), R.evolve({\n      box: R.evolve({\n        x: R.add(remainingWidth * alignFactor)\n      })\n    }))(line);\n  };\n};\n/**\n * Finalize line by performing line justification\n * and text decoration (using appropiate engines)\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {Object}  line\n * @param  {number}  line index\n * @param  {Array}  total lines\n * @return {Object} line\n */\n\n\nvar finalizeBlock = function finalizeBlock(engines, options) {\n  if (engines === void 0) {\n    engines = {};\n  }\n\n  return function (line, i, lines) {\n    var isLastFragment = i === lines.length - 1;\n    var style = R.pathOr({}, ['runs', 0, 'attributes'], line);\n    var align = isLastFragment ? style.alignLastLine : style.align;\n    return R.compose(engines.textDecoration(options), justifyLine(engines, options, align), adjustOverflow, removeNewLine)(line);\n  };\n};\n/**\n * Finalize line block by performing line justification\n * and text decoration (using appropiate engines)\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {Array}  line blocks\n * @return {Array} line blocks\n */\n\n\nvar finalizeFragments = function finalizeFragments(engines, options, blocks) {\n  var blockFinalizer = finalizeBlock(engines, options);\n  return blocks.map(function (block) {\n    return block.map(blockFinalizer);\n  });\n};\n\nvar _default = R.curryN(3, finalizeFragments);\n\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","_advanceWidth","_leadingOffset","_trailingOffset","_dropLast","ALIGNMENT_FACTORS","center","right","removeNewLine","when","compose","equals","last","prop","getOverflowLeft","converge","add","propOr","getOverflowRight","adjustOverflow","line","overflowLeft","overflowRight","assoc","evolve","box","x","subtract","__","width","justifyLine","engines","options","align","lineWidth","alignFactor","remainingWidth","Math","max","shouldJustify","always","justification","finalizeBlock","i","lines","isLastFragment","length","style","pathOr","alignLastLine","textDecoration","finalizeFragments","blocks","blockFinalizer","map","block","_default","curryN"],"sources":["/home/carlobottaro/Documents/UniversitÃ /gamification/node_modules/@react-pdf/textkit/lib/layout/finalizeFragments.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _advanceWidth = _interopRequireDefault(require(\"../attributedString/advanceWidth\"));\n\nvar _leadingOffset = _interopRequireDefault(require(\"../attributedString/leadingOffset\"));\n\nvar _trailingOffset = _interopRequireDefault(require(\"../attributedString/trailingOffset\"));\n\nvar _dropLast = _interopRequireDefault(require(\"../attributedString/dropLast\"));\n\nvar ALIGNMENT_FACTORS = {\n  center: 0.5,\n  right: 1\n};\n/**\n * Remove new line char at the end of line if present\n *\n * @param  {Object}  line\n * @return {Object} line\n */\n\nvar removeNewLine = R.when(R.compose(R.equals('\\n'), R.last, R.prop('string')), _dropLast.default);\nvar getOverflowLeft = R.converge(R.add, [R.propOr(0, 'overflowLeft'), _leadingOffset.default]);\nvar getOverflowRight = R.converge(R.add, [R.propOr(0, 'overflowRight'), _trailingOffset.default]);\n/**\n * Ignore whitespace at the start and end of a line for alignment\n *\n * @param  {Object}  line\n * @return {Object} line\n */\n\nvar adjustOverflow = function adjustOverflow(line) {\n  var overflowLeft = getOverflowLeft(line);\n  var overflowRight = getOverflowRight(line);\n  return R.compose(R.assoc('overflowLeft', overflowLeft), R.assoc('overflowRight', overflowRight), R.evolve({\n    box: R.evolve({\n      x: R.subtract(R.__, overflowLeft),\n      width: R.add(overflowLeft + overflowRight)\n    })\n  }))(line);\n};\n/**\n * Performs line justification by calling appropiate engine\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {string}  text align\n * @param  {Object}  line\n * @return {Object} line\n */\n\n\nvar justifyLine = function justifyLine(engines, options, align) {\n  return function (line) {\n    var lineWidth = (0, _advanceWidth.default)(line);\n    var alignFactor = ALIGNMENT_FACTORS[align] || 0;\n    var remainingWidth = Math.max(0, line.box.width - lineWidth);\n    var shouldJustify = align === 'justify' || lineWidth > line.box.width;\n    return R.compose(R.when(R.always(shouldJustify), engines.justification(options)), R.evolve({\n      box: R.evolve({\n        x: R.add(remainingWidth * alignFactor)\n      })\n    }))(line);\n  };\n};\n/**\n * Finalize line by performing line justification\n * and text decoration (using appropiate engines)\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {Object}  line\n * @param  {number}  line index\n * @param  {Array}  total lines\n * @return {Object} line\n */\n\n\nvar finalizeBlock = function finalizeBlock(engines, options) {\n  if (engines === void 0) {\n    engines = {};\n  }\n\n  return function (line, i, lines) {\n    var isLastFragment = i === lines.length - 1;\n    var style = R.pathOr({}, ['runs', 0, 'attributes'], line);\n    var align = isLastFragment ? style.alignLastLine : style.align;\n    return R.compose(engines.textDecoration(options), justifyLine(engines, options, align), adjustOverflow, removeNewLine)(line);\n  };\n};\n/**\n * Finalize line block by performing line justification\n * and text decoration (using appropiate engines)\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {Array}  line blocks\n * @return {Array} line blocks\n */\n\n\nvar finalizeFragments = function finalizeFragments(engines, options, blocks) {\n  var blockFinalizer = finalizeBlock(engines, options);\n  return blocks.map(function (block) {\n    return block.map(blockFinalizer);\n  });\n};\n\nvar _default = R.curryN(3, finalizeFragments);\n\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}