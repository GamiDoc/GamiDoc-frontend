{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _save = _interopRequireDefault(require(\"../operations/save\"));\n\nvar _restore = _interopRequireDefault(require(\"../operations/restore\"));\n\nvar CONTENT_COLOR = '#a1c6e7';\nvar PADDING_COLOR = '#c4deb9';\nvar MARGIN_COLOR = '#f8cca1';\nvar shouldDebug = R.pathEq(['props', 'debug'], true); // TODO: Draw debug boxes using clipping to enhance quality\n\nvar debugContent = function debugContent(ctx) {\n  return function (node) {\n    var _node$box = node.box,\n        left = _node$box.left,\n        top = _node$box.top,\n        width = _node$box.width,\n        height = _node$box.height,\n        _node$box$paddingLeft = _node$box.paddingLeft,\n        paddingLeft = _node$box$paddingLeft === void 0 ? 0 : _node$box$paddingLeft,\n        _node$box$paddingTop = _node$box.paddingTop,\n        paddingTop = _node$box$paddingTop === void 0 ? 0 : _node$box$paddingTop,\n        _node$box$paddingRigh = _node$box.paddingRight,\n        paddingRight = _node$box$paddingRigh === void 0 ? 0 : _node$box$paddingRigh,\n        _node$box$paddingBott = _node$box.paddingBottom,\n        paddingBottom = _node$box$paddingBott === void 0 ? 0 : _node$box$paddingBott,\n        _node$box$borderLeftW = _node$box.borderLeftWidth,\n        borderLeftWidth = _node$box$borderLeftW === void 0 ? 0 : _node$box$borderLeftW,\n        _node$box$borderTopWi = _node$box.borderTopWidth,\n        borderTopWidth = _node$box$borderTopWi === void 0 ? 0 : _node$box$borderTopWi,\n        _node$box$borderRight = _node$box.borderRightWidth,\n        borderRightWidth = _node$box$borderRight === void 0 ? 0 : _node$box$borderRight,\n        _node$box$borderBotto = _node$box.borderBottomWidth,\n        borderBottomWidth = _node$box$borderBotto === void 0 ? 0 : _node$box$borderBotto;\n    ctx.fillColor(CONTENT_COLOR).opacity(0.5).rect(left + paddingLeft + borderLeftWidth, top + paddingTop + borderTopWidth, width - paddingLeft - paddingRight - borderRightWidth - borderLeftWidth, height - paddingTop - paddingBottom - borderTopWidth - borderBottomWidth).fill();\n    return node;\n  };\n};\n\nvar debugPadding = function debugPadding(ctx) {\n  return function (node) {\n    var _node$box2 = node.box,\n        left = _node$box2.left,\n        top = _node$box2.top,\n        width = _node$box2.width,\n        height = _node$box2.height,\n        _node$box2$paddingLef = _node$box2.paddingLeft,\n        paddingLeft = _node$box2$paddingLef === void 0 ? 0 : _node$box2$paddingLef,\n        _node$box2$paddingTop = _node$box2.paddingTop,\n        paddingTop = _node$box2$paddingTop === void 0 ? 0 : _node$box2$paddingTop,\n        _node$box2$paddingRig = _node$box2.paddingRight,\n        paddingRight = _node$box2$paddingRig === void 0 ? 0 : _node$box2$paddingRig,\n        _node$box2$paddingBot = _node$box2.paddingBottom,\n        paddingBottom = _node$box2$paddingBot === void 0 ? 0 : _node$box2$paddingBot,\n        _node$box2$borderLeft = _node$box2.borderLeftWidth,\n        borderLeftWidth = _node$box2$borderLeft === void 0 ? 0 : _node$box2$borderLeft,\n        _node$box2$borderTopW = _node$box2.borderTopWidth,\n        borderTopWidth = _node$box2$borderTopW === void 0 ? 0 : _node$box2$borderTopW,\n        _node$box2$borderRigh = _node$box2.borderRightWidth,\n        borderRightWidth = _node$box2$borderRigh === void 0 ? 0 : _node$box2$borderRigh,\n        _node$box2$borderBott = _node$box2.borderBottomWidth,\n        borderBottomWidth = _node$box2$borderBott === void 0 ? 0 : _node$box2$borderBott;\n    ctx.fillColor(PADDING_COLOR).opacity(0.5); // Padding top\n\n    ctx.rect(left + paddingLeft + borderLeftWidth, top + borderTopWidth, width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth, paddingTop).fill(); // Padding left\n\n    ctx.rect(left + borderLeftWidth, top + borderTopWidth, paddingLeft, height - borderTopWidth - borderBottomWidth).fill(); // Padding right\n\n    ctx.rect(left + width - paddingRight - borderRightWidth, top + borderTopWidth, paddingRight, height - borderTopWidth - borderBottomWidth).fill(); // Padding bottom\n\n    ctx.rect(left + paddingLeft + borderLeftWidth, top + height - paddingBottom - borderBottomWidth, width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth, paddingBottom).fill();\n    return node;\n  };\n};\n\nvar getMargin = function getMargin(box) {\n  var marginLeft = box.marginLeft === 'auto' ? 0 : box.marginLeft;\n  var marginTop = box.marginTop === 'auto' ? 0 : box.marginTop;\n  var marginRight = box.marginRight === 'auto' ? 0 : box.marginRight;\n  var marginBottom = box.marginBottom === 'auto' ? 0 : box.marginBottom;\n  return {\n    marginLeft: marginLeft,\n    marginTop: marginTop,\n    marginRight: marginRight,\n    marginBottom: marginBottom\n  };\n};\n\nvar debugMargin = function debugMargin(ctx) {\n  return function (node) {\n    var _node$box3 = node.box,\n        left = _node$box3.left,\n        top = _node$box3.top,\n        width = _node$box3.width,\n        height = _node$box3.height;\n\n    var _getMargin = getMargin(node.box),\n        _getMargin$marginLeft = _getMargin.marginLeft,\n        marginLeft = _getMargin$marginLeft === void 0 ? 0 : _getMargin$marginLeft,\n        _getMargin$marginTop = _getMargin.marginTop,\n        marginTop = _getMargin$marginTop === void 0 ? 0 : _getMargin$marginTop,\n        _getMargin$marginRigh = _getMargin.marginRight,\n        marginRight = _getMargin$marginRigh === void 0 ? 0 : _getMargin$marginRigh,\n        _getMargin$marginBott = _getMargin.marginBottom,\n        marginBottom = _getMargin$marginBott === void 0 ? 0 : _getMargin$marginBott;\n\n    ctx.fillColor(MARGIN_COLOR).opacity(0.5); // Margin top\n\n    ctx.rect(left, top - marginTop, width, marginTop).fill(); // Margin left\n\n    ctx.rect(left - marginLeft, top - marginTop, marginLeft, height + marginTop + marginBottom).fill(); // Margin right\n\n    ctx.rect(left + width, top - marginTop, marginRight, height + marginTop + marginBottom).fill(); // Margin bottom\n\n    ctx.rect(left, top + height, width, marginBottom).fill();\n    return node;\n  };\n};\n\nvar debugText = function debugText(ctx) {\n  return function (node) {\n    var _node$box4 = node.box,\n        left = _node$box4.left,\n        top = _node$box4.top,\n        width = _node$box4.width,\n        height = _node$box4.height;\n\n    var _getMargin2 = getMargin(node.box),\n        _getMargin2$marginLef = _getMargin2.marginLeft,\n        marginLeft = _getMargin2$marginLef === void 0 ? 0 : _getMargin2$marginLef,\n        _getMargin2$marginTop = _getMargin2.marginTop,\n        marginTop = _getMargin2$marginTop === void 0 ? 0 : _getMargin2$marginTop,\n        _getMargin2$marginRig = _getMargin2.marginRight,\n        marginRight = _getMargin2$marginRig === void 0 ? 0 : _getMargin2$marginRig,\n        _getMargin2$marginBot = _getMargin2.marginBottom,\n        marginBottom = _getMargin2$marginBot === void 0 ? 0 : _getMargin2$marginBot;\n\n    var roundedWidth = Math.round(width + marginLeft + marginRight);\n    var roundedHeight = Math.round(height + marginTop + marginBottom);\n    ctx.fontSize(6).opacity(1).fillColor('black').text(roundedWidth + \" x \" + roundedHeight, left - marginLeft, Math.max(top - marginTop - 4, 1));\n    return node;\n  };\n};\n\nvar debugOrigin = function debugOrigin(ctx) {\n  return function (node) {\n    if (node.origin) {\n      ctx.circle(node.origin.left, node.origin.top, 3).fill('red').circle(node.origin.left, node.origin.top, 5).stroke('red');\n    }\n\n    return node;\n  };\n};\n\nvar renderDebug = function renderDebug(ctx) {\n  return R.tap(R.when(shouldDebug, R.compose((0, _restore.default)(ctx), debugOrigin(ctx), debugText(ctx), debugMargin(ctx), debugPadding(ctx), debugContent(ctx), (0, _save.default)(ctx))));\n};\n\nvar _default = renderDebug;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","_save","_restore","CONTENT_COLOR","PADDING_COLOR","MARGIN_COLOR","shouldDebug","pathEq","debugContent","ctx","node","_node$box","box","left","top","width","height","_node$box$paddingLeft","paddingLeft","_node$box$paddingTop","paddingTop","_node$box$paddingRigh","paddingRight","_node$box$paddingBott","paddingBottom","_node$box$borderLeftW","borderLeftWidth","_node$box$borderTopWi","borderTopWidth","_node$box$borderRight","borderRightWidth","_node$box$borderBotto","borderBottomWidth","fillColor","opacity","rect","fill","debugPadding","_node$box2","_node$box2$paddingLef","_node$box2$paddingTop","_node$box2$paddingRig","_node$box2$paddingBot","_node$box2$borderLeft","_node$box2$borderTopW","_node$box2$borderRigh","_node$box2$borderBott","getMargin","marginLeft","marginTop","marginRight","marginBottom","debugMargin","_node$box3","_getMargin","_getMargin$marginLeft","_getMargin$marginTop","_getMargin$marginRigh","_getMargin$marginBott","debugText","_node$box4","_getMargin2","_getMargin2$marginLef","_getMargin2$marginTop","_getMargin2$marginRig","_getMargin2$marginBot","roundedWidth","Math","round","roundedHeight","fontSize","text","max","debugOrigin","origin","circle","stroke","renderDebug","tap","when","compose","_default"],"sources":["/home/carlobottaro/Documents/Universit√†/gamification/node_modules/@react-pdf/render/lib/primitives/renderDebug.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _save = _interopRequireDefault(require(\"../operations/save\"));\n\nvar _restore = _interopRequireDefault(require(\"../operations/restore\"));\n\nvar CONTENT_COLOR = '#a1c6e7';\nvar PADDING_COLOR = '#c4deb9';\nvar MARGIN_COLOR = '#f8cca1';\nvar shouldDebug = R.pathEq(['props', 'debug'], true); // TODO: Draw debug boxes using clipping to enhance quality\n\nvar debugContent = function debugContent(ctx) {\n  return function (node) {\n    var _node$box = node.box,\n        left = _node$box.left,\n        top = _node$box.top,\n        width = _node$box.width,\n        height = _node$box.height,\n        _node$box$paddingLeft = _node$box.paddingLeft,\n        paddingLeft = _node$box$paddingLeft === void 0 ? 0 : _node$box$paddingLeft,\n        _node$box$paddingTop = _node$box.paddingTop,\n        paddingTop = _node$box$paddingTop === void 0 ? 0 : _node$box$paddingTop,\n        _node$box$paddingRigh = _node$box.paddingRight,\n        paddingRight = _node$box$paddingRigh === void 0 ? 0 : _node$box$paddingRigh,\n        _node$box$paddingBott = _node$box.paddingBottom,\n        paddingBottom = _node$box$paddingBott === void 0 ? 0 : _node$box$paddingBott,\n        _node$box$borderLeftW = _node$box.borderLeftWidth,\n        borderLeftWidth = _node$box$borderLeftW === void 0 ? 0 : _node$box$borderLeftW,\n        _node$box$borderTopWi = _node$box.borderTopWidth,\n        borderTopWidth = _node$box$borderTopWi === void 0 ? 0 : _node$box$borderTopWi,\n        _node$box$borderRight = _node$box.borderRightWidth,\n        borderRightWidth = _node$box$borderRight === void 0 ? 0 : _node$box$borderRight,\n        _node$box$borderBotto = _node$box.borderBottomWidth,\n        borderBottomWidth = _node$box$borderBotto === void 0 ? 0 : _node$box$borderBotto;\n    ctx.fillColor(CONTENT_COLOR).opacity(0.5).rect(left + paddingLeft + borderLeftWidth, top + paddingTop + borderTopWidth, width - paddingLeft - paddingRight - borderRightWidth - borderLeftWidth, height - paddingTop - paddingBottom - borderTopWidth - borderBottomWidth).fill();\n    return node;\n  };\n};\n\nvar debugPadding = function debugPadding(ctx) {\n  return function (node) {\n    var _node$box2 = node.box,\n        left = _node$box2.left,\n        top = _node$box2.top,\n        width = _node$box2.width,\n        height = _node$box2.height,\n        _node$box2$paddingLef = _node$box2.paddingLeft,\n        paddingLeft = _node$box2$paddingLef === void 0 ? 0 : _node$box2$paddingLef,\n        _node$box2$paddingTop = _node$box2.paddingTop,\n        paddingTop = _node$box2$paddingTop === void 0 ? 0 : _node$box2$paddingTop,\n        _node$box2$paddingRig = _node$box2.paddingRight,\n        paddingRight = _node$box2$paddingRig === void 0 ? 0 : _node$box2$paddingRig,\n        _node$box2$paddingBot = _node$box2.paddingBottom,\n        paddingBottom = _node$box2$paddingBot === void 0 ? 0 : _node$box2$paddingBot,\n        _node$box2$borderLeft = _node$box2.borderLeftWidth,\n        borderLeftWidth = _node$box2$borderLeft === void 0 ? 0 : _node$box2$borderLeft,\n        _node$box2$borderTopW = _node$box2.borderTopWidth,\n        borderTopWidth = _node$box2$borderTopW === void 0 ? 0 : _node$box2$borderTopW,\n        _node$box2$borderRigh = _node$box2.borderRightWidth,\n        borderRightWidth = _node$box2$borderRigh === void 0 ? 0 : _node$box2$borderRigh,\n        _node$box2$borderBott = _node$box2.borderBottomWidth,\n        borderBottomWidth = _node$box2$borderBott === void 0 ? 0 : _node$box2$borderBott;\n    ctx.fillColor(PADDING_COLOR).opacity(0.5); // Padding top\n\n    ctx.rect(left + paddingLeft + borderLeftWidth, top + borderTopWidth, width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth, paddingTop).fill(); // Padding left\n\n    ctx.rect(left + borderLeftWidth, top + borderTopWidth, paddingLeft, height - borderTopWidth - borderBottomWidth).fill(); // Padding right\n\n    ctx.rect(left + width - paddingRight - borderRightWidth, top + borderTopWidth, paddingRight, height - borderTopWidth - borderBottomWidth).fill(); // Padding bottom\n\n    ctx.rect(left + paddingLeft + borderLeftWidth, top + height - paddingBottom - borderBottomWidth, width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth, paddingBottom).fill();\n    return node;\n  };\n};\n\nvar getMargin = function getMargin(box) {\n  var marginLeft = box.marginLeft === 'auto' ? 0 : box.marginLeft;\n  var marginTop = box.marginTop === 'auto' ? 0 : box.marginTop;\n  var marginRight = box.marginRight === 'auto' ? 0 : box.marginRight;\n  var marginBottom = box.marginBottom === 'auto' ? 0 : box.marginBottom;\n  return {\n    marginLeft: marginLeft,\n    marginTop: marginTop,\n    marginRight: marginRight,\n    marginBottom: marginBottom\n  };\n};\n\nvar debugMargin = function debugMargin(ctx) {\n  return function (node) {\n    var _node$box3 = node.box,\n        left = _node$box3.left,\n        top = _node$box3.top,\n        width = _node$box3.width,\n        height = _node$box3.height;\n\n    var _getMargin = getMargin(node.box),\n        _getMargin$marginLeft = _getMargin.marginLeft,\n        marginLeft = _getMargin$marginLeft === void 0 ? 0 : _getMargin$marginLeft,\n        _getMargin$marginTop = _getMargin.marginTop,\n        marginTop = _getMargin$marginTop === void 0 ? 0 : _getMargin$marginTop,\n        _getMargin$marginRigh = _getMargin.marginRight,\n        marginRight = _getMargin$marginRigh === void 0 ? 0 : _getMargin$marginRigh,\n        _getMargin$marginBott = _getMargin.marginBottom,\n        marginBottom = _getMargin$marginBott === void 0 ? 0 : _getMargin$marginBott;\n\n    ctx.fillColor(MARGIN_COLOR).opacity(0.5); // Margin top\n\n    ctx.rect(left, top - marginTop, width, marginTop).fill(); // Margin left\n\n    ctx.rect(left - marginLeft, top - marginTop, marginLeft, height + marginTop + marginBottom).fill(); // Margin right\n\n    ctx.rect(left + width, top - marginTop, marginRight, height + marginTop + marginBottom).fill(); // Margin bottom\n\n    ctx.rect(left, top + height, width, marginBottom).fill();\n    return node;\n  };\n};\n\nvar debugText = function debugText(ctx) {\n  return function (node) {\n    var _node$box4 = node.box,\n        left = _node$box4.left,\n        top = _node$box4.top,\n        width = _node$box4.width,\n        height = _node$box4.height;\n\n    var _getMargin2 = getMargin(node.box),\n        _getMargin2$marginLef = _getMargin2.marginLeft,\n        marginLeft = _getMargin2$marginLef === void 0 ? 0 : _getMargin2$marginLef,\n        _getMargin2$marginTop = _getMargin2.marginTop,\n        marginTop = _getMargin2$marginTop === void 0 ? 0 : _getMargin2$marginTop,\n        _getMargin2$marginRig = _getMargin2.marginRight,\n        marginRight = _getMargin2$marginRig === void 0 ? 0 : _getMargin2$marginRig,\n        _getMargin2$marginBot = _getMargin2.marginBottom,\n        marginBottom = _getMargin2$marginBot === void 0 ? 0 : _getMargin2$marginBot;\n\n    var roundedWidth = Math.round(width + marginLeft + marginRight);\n    var roundedHeight = Math.round(height + marginTop + marginBottom);\n    ctx.fontSize(6).opacity(1).fillColor('black').text(roundedWidth + \" x \" + roundedHeight, left - marginLeft, Math.max(top - marginTop - 4, 1));\n    return node;\n  };\n};\n\nvar debugOrigin = function debugOrigin(ctx) {\n  return function (node) {\n    if (node.origin) {\n      ctx.circle(node.origin.left, node.origin.top, 3).fill('red').circle(node.origin.left, node.origin.top, 5).stroke('red');\n    }\n\n    return node;\n  };\n};\n\nvar renderDebug = function renderDebug(ctx) {\n  return R.tap(R.when(shouldDebug, R.compose((0, _restore.default)(ctx), debugOrigin(ctx), debugText(ctx), debugMargin(ctx), debugPadding(ctx), debugContent(ctx), (0, _save.default)(ctx))));\n};\n\nvar _default = renderDebug;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}