{"ast":null,"code":"import _curry1 from './internal/_curry1.js';\nimport _has from './internal/_has.js';\nimport keys from './keys.js';\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      const raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\n\nvar invert = /*#__PURE__*/_curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default invert;","map":{"version":3,"names":["_curry1","_has","keys","invert","obj","props","len","length","idx","out","key","val","list"],"sources":["/home/carlobottaro/Documents/UniversitÃ /gamification/node_modules/ramda/es/invert.js"],"sourcesContent":["import _curry1 from './internal/_curry1.js';\nimport _has from './internal/_has.js';\nimport keys from './keys.js';\n\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      const raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\nvar invert = /*#__PURE__*/_curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invert;"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,MAAM,GAAG,aAAaH,OAAO,CAAC,SAASG,MAAT,CAAgBC,GAAhB,EAAqB;EACrD,IAAIC,KAAK,GAAGH,IAAI,CAACE,GAAD,CAAhB;EACA,IAAIE,GAAG,GAAGD,KAAK,CAACE,MAAhB;EACA,IAAIC,GAAG,GAAG,CAAV;EACA,IAAIC,GAAG,GAAG,EAAV;;EAEA,OAAOD,GAAG,GAAGF,GAAb,EAAkB;IAChB,IAAII,GAAG,GAAGL,KAAK,CAACG,GAAD,CAAf;IACA,IAAIG,GAAG,GAAGP,GAAG,CAACM,GAAD,CAAb;IACA,IAAIE,IAAI,GAAGX,IAAI,CAACU,GAAD,EAAMF,GAAN,CAAJ,GAAiBA,GAAG,CAACE,GAAD,CAApB,GAA4BF,GAAG,CAACE,GAAD,CAAH,GAAW,EAAlD;IACAC,IAAI,CAACA,IAAI,CAACL,MAAN,CAAJ,GAAoBG,GAApB;IACAF,GAAG,IAAI,CAAP;EACD;;EACD,OAAOC,GAAP;AACD,CAdgC,CAAjC;;AAeA,eAAeN,MAAf"},"metadata":{},"sourceType":"module"}