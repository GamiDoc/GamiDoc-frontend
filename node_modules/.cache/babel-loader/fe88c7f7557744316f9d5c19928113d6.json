{"ast":null,"code":"// Generated by CoffeeScript 1.7.1\nvar UnicodeTrie, inflate;\ninflate = require('tiny-inflate');\n\nUnicodeTrie = function () {\n  var DATA_BLOCK_LENGTH, DATA_GRANULARITY, DATA_MASK, INDEX_1_OFFSET, INDEX_2_BLOCK_LENGTH, INDEX_2_BMP_LENGTH, INDEX_2_MASK, INDEX_SHIFT, LSCP_INDEX_2_LENGTH, LSCP_INDEX_2_OFFSET, OMITTED_BMP_INDEX_1_LENGTH, SHIFT_1, SHIFT_1_2, SHIFT_2, UTF8_2B_INDEX_2_LENGTH, UTF8_2B_INDEX_2_OFFSET;\n  SHIFT_1 = 6 + 5;\n  SHIFT_2 = 5;\n  SHIFT_1_2 = SHIFT_1 - SHIFT_2;\n  OMITTED_BMP_INDEX_1_LENGTH = 0x10000 >> SHIFT_1;\n  INDEX_2_BLOCK_LENGTH = 1 << SHIFT_1_2;\n  INDEX_2_MASK = INDEX_2_BLOCK_LENGTH - 1;\n  INDEX_SHIFT = 2;\n  DATA_BLOCK_LENGTH = 1 << SHIFT_2;\n  DATA_MASK = DATA_BLOCK_LENGTH - 1;\n  LSCP_INDEX_2_OFFSET = 0x10000 >> SHIFT_2;\n  LSCP_INDEX_2_LENGTH = 0x400 >> SHIFT_2;\n  INDEX_2_BMP_LENGTH = LSCP_INDEX_2_OFFSET + LSCP_INDEX_2_LENGTH;\n  UTF8_2B_INDEX_2_OFFSET = INDEX_2_BMP_LENGTH;\n  UTF8_2B_INDEX_2_LENGTH = 0x800 >> 6;\n  INDEX_1_OFFSET = UTF8_2B_INDEX_2_OFFSET + UTF8_2B_INDEX_2_LENGTH;\n  DATA_GRANULARITY = 1 << INDEX_SHIFT;\n\n  function UnicodeTrie(data) {\n    var isBuffer, uncompressedLength, view;\n    isBuffer = typeof data.readUInt32BE === 'function' && typeof data.slice === 'function';\n\n    if (isBuffer || data instanceof Uint8Array) {\n      if (isBuffer) {\n        this.highStart = data.readUInt32BE(0);\n        this.errorValue = data.readUInt32BE(4);\n        uncompressedLength = data.readUInt32BE(8);\n        data = data.slice(12);\n      } else {\n        view = new DataView(data.buffer);\n        this.highStart = view.getUint32(0);\n        this.errorValue = view.getUint32(4);\n        uncompressedLength = view.getUint32(8);\n        data = data.subarray(12);\n      }\n\n      data = inflate(data, new Uint8Array(uncompressedLength));\n      data = inflate(data, new Uint8Array(uncompressedLength));\n      this.data = new Uint32Array(data.buffer);\n    } else {\n      this.data = data.data, this.highStart = data.highStart, this.errorValue = data.errorValue;\n    }\n  }\n\n  UnicodeTrie.prototype.get = function (codePoint) {\n    var index;\n\n    if (codePoint < 0 || codePoint > 0x10ffff) {\n      return this.errorValue;\n    }\n\n    if (codePoint < 0xd800 || codePoint > 0xdbff && codePoint <= 0xffff) {\n      index = (this.data[codePoint >> SHIFT_2] << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n\n    if (codePoint <= 0xffff) {\n      index = (this.data[LSCP_INDEX_2_OFFSET + (codePoint - 0xd800 >> SHIFT_2)] << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n\n    if (codePoint < this.highStart) {\n      index = this.data[INDEX_1_OFFSET - OMITTED_BMP_INDEX_1_LENGTH + (codePoint >> SHIFT_1)];\n      index = this.data[index + (codePoint >> SHIFT_2 & INDEX_2_MASK)];\n      index = (index << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n\n    return this.data[this.data.length - DATA_GRANULARITY];\n  };\n\n  return UnicodeTrie;\n}();\n\nmodule.exports = UnicodeTrie;","map":{"version":3,"names":["UnicodeTrie","inflate","require","DATA_BLOCK_LENGTH","DATA_GRANULARITY","DATA_MASK","INDEX_1_OFFSET","INDEX_2_BLOCK_LENGTH","INDEX_2_BMP_LENGTH","INDEX_2_MASK","INDEX_SHIFT","LSCP_INDEX_2_LENGTH","LSCP_INDEX_2_OFFSET","OMITTED_BMP_INDEX_1_LENGTH","SHIFT_1","SHIFT_1_2","SHIFT_2","UTF8_2B_INDEX_2_LENGTH","UTF8_2B_INDEX_2_OFFSET","data","isBuffer","uncompressedLength","view","readUInt32BE","slice","Uint8Array","highStart","errorValue","DataView","buffer","getUint32","subarray","Uint32Array","prototype","get","codePoint","index","length","module","exports"],"sources":["/home/carlobottaro/Documents/UniversitÃ /gamification/node_modules/unicode-trie/index.js"],"sourcesContent":["// Generated by CoffeeScript 1.7.1\nvar UnicodeTrie, inflate;\n\ninflate = require('tiny-inflate');\n\nUnicodeTrie = (function() {\n  var DATA_BLOCK_LENGTH, DATA_GRANULARITY, DATA_MASK, INDEX_1_OFFSET, INDEX_2_BLOCK_LENGTH, INDEX_2_BMP_LENGTH, INDEX_2_MASK, INDEX_SHIFT, LSCP_INDEX_2_LENGTH, LSCP_INDEX_2_OFFSET, OMITTED_BMP_INDEX_1_LENGTH, SHIFT_1, SHIFT_1_2, SHIFT_2, UTF8_2B_INDEX_2_LENGTH, UTF8_2B_INDEX_2_OFFSET;\n\n  SHIFT_1 = 6 + 5;\n\n  SHIFT_2 = 5;\n\n  SHIFT_1_2 = SHIFT_1 - SHIFT_2;\n\n  OMITTED_BMP_INDEX_1_LENGTH = 0x10000 >> SHIFT_1;\n\n  INDEX_2_BLOCK_LENGTH = 1 << SHIFT_1_2;\n\n  INDEX_2_MASK = INDEX_2_BLOCK_LENGTH - 1;\n\n  INDEX_SHIFT = 2;\n\n  DATA_BLOCK_LENGTH = 1 << SHIFT_2;\n\n  DATA_MASK = DATA_BLOCK_LENGTH - 1;\n\n  LSCP_INDEX_2_OFFSET = 0x10000 >> SHIFT_2;\n\n  LSCP_INDEX_2_LENGTH = 0x400 >> SHIFT_2;\n\n  INDEX_2_BMP_LENGTH = LSCP_INDEX_2_OFFSET + LSCP_INDEX_2_LENGTH;\n\n  UTF8_2B_INDEX_2_OFFSET = INDEX_2_BMP_LENGTH;\n\n  UTF8_2B_INDEX_2_LENGTH = 0x800 >> 6;\n\n  INDEX_1_OFFSET = UTF8_2B_INDEX_2_OFFSET + UTF8_2B_INDEX_2_LENGTH;\n\n  DATA_GRANULARITY = 1 << INDEX_SHIFT;\n\n  function UnicodeTrie(data) {\n    var isBuffer, uncompressedLength, view;\n    isBuffer = typeof data.readUInt32BE === 'function' && typeof data.slice === 'function';\n    if (isBuffer || data instanceof Uint8Array) {\n      if (isBuffer) {\n        this.highStart = data.readUInt32BE(0);\n        this.errorValue = data.readUInt32BE(4);\n        uncompressedLength = data.readUInt32BE(8);\n        data = data.slice(12);\n      } else {\n        view = new DataView(data.buffer);\n        this.highStart = view.getUint32(0);\n        this.errorValue = view.getUint32(4);\n        uncompressedLength = view.getUint32(8);\n        data = data.subarray(12);\n      }\n      data = inflate(data, new Uint8Array(uncompressedLength));\n      data = inflate(data, new Uint8Array(uncompressedLength));\n      this.data = new Uint32Array(data.buffer);\n    } else {\n      this.data = data.data, this.highStart = data.highStart, this.errorValue = data.errorValue;\n    }\n  }\n\n  UnicodeTrie.prototype.get = function(codePoint) {\n    var index;\n    if (codePoint < 0 || codePoint > 0x10ffff) {\n      return this.errorValue;\n    }\n    if (codePoint < 0xd800 || (codePoint > 0xdbff && codePoint <= 0xffff)) {\n      index = (this.data[codePoint >> SHIFT_2] << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n    if (codePoint <= 0xffff) {\n      index = (this.data[LSCP_INDEX_2_OFFSET + ((codePoint - 0xd800) >> SHIFT_2)] << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n    if (codePoint < this.highStart) {\n      index = this.data[(INDEX_1_OFFSET - OMITTED_BMP_INDEX_1_LENGTH) + (codePoint >> SHIFT_1)];\n      index = this.data[index + ((codePoint >> SHIFT_2) & INDEX_2_MASK)];\n      index = (index << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n    return this.data[this.data.length - DATA_GRANULARITY];\n  };\n\n  return UnicodeTrie;\n\n})();\n\nmodule.exports = UnicodeTrie;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}