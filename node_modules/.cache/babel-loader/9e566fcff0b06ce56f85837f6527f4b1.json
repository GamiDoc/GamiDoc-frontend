{"ast":null,"code":"// Generated by CoffeeScript 1.7.1\n(function () {\n  var Pointer, VoidPointer, utils;\n  utils = require('./utils');\n\n  Pointer = function () {\n    function Pointer(offsetType, type, options) {\n      var _base, _base1, _base2, _base3;\n\n      this.offsetType = offsetType;\n      this.type = type;\n      this.options = options != null ? options : {};\n\n      if (this.type === 'void') {\n        this.type = null;\n      }\n\n      if ((_base = this.options).type == null) {\n        _base.type = 'local';\n      }\n\n      if ((_base1 = this.options).allowNull == null) {\n        _base1.allowNull = true;\n      }\n\n      if ((_base2 = this.options).nullValue == null) {\n        _base2.nullValue = 0;\n      }\n\n      if ((_base3 = this.options).lazy == null) {\n        _base3.lazy = false;\n      }\n\n      if (this.options.relativeTo) {\n        this.relativeToGetter = new Function('ctx', \"return ctx.\" + this.options.relativeTo);\n      }\n    }\n\n    Pointer.prototype.decode = function (stream, ctx) {\n      var c, decodeValue, offset, ptr, relative, val;\n      offset = this.offsetType.decode(stream, ctx);\n\n      if (offset === this.options.nullValue && this.options.allowNull) {\n        return null;\n      }\n\n      relative = function () {\n        switch (this.options.type) {\n          case 'local':\n            return ctx._startOffset;\n\n          case 'immediate':\n            return stream.pos - this.offsetType.size();\n\n          case 'parent':\n            return ctx.parent._startOffset;\n\n          default:\n            c = ctx;\n\n            while (c.parent) {\n              c = c.parent;\n            }\n\n            return c._startOffset || 0;\n        }\n      }.call(this);\n\n      if (this.options.relativeTo) {\n        relative += this.relativeToGetter(ctx);\n      }\n\n      ptr = offset + relative;\n\n      if (this.type != null) {\n        val = null;\n\n        decodeValue = function (_this) {\n          return function () {\n            var pos;\n\n            if (val != null) {\n              return val;\n            }\n\n            pos = stream.pos;\n            stream.pos = ptr;\n            val = _this.type.decode(stream, ctx);\n            stream.pos = pos;\n            return val;\n          };\n        }(this);\n\n        if (this.options.lazy) {\n          return new utils.PropertyDescriptor({\n            get: decodeValue\n          });\n        }\n\n        return decodeValue();\n      } else {\n        return ptr;\n      }\n    };\n\n    Pointer.prototype.size = function (val, ctx) {\n      var parent, type;\n      parent = ctx;\n\n      switch (this.options.type) {\n        case 'local':\n        case 'immediate':\n          break;\n\n        case 'parent':\n          ctx = ctx.parent;\n          break;\n\n        default:\n          while (ctx.parent) {\n            ctx = ctx.parent;\n          }\n\n      }\n\n      type = this.type;\n\n      if (type == null) {\n        if (!(val instanceof VoidPointer)) {\n          throw new Error(\"Must be a VoidPointer\");\n        }\n\n        type = val.type;\n        val = val.value;\n      }\n\n      if (val && ctx) {\n        ctx.pointerSize += type.size(val, parent);\n      }\n\n      return this.offsetType.size();\n    };\n\n    Pointer.prototype.encode = function (stream, val, ctx) {\n      var parent, relative, type;\n      parent = ctx;\n\n      if (val == null) {\n        this.offsetType.encode(stream, this.options.nullValue);\n        return;\n      }\n\n      switch (this.options.type) {\n        case 'local':\n          relative = ctx.startOffset;\n          break;\n\n        case 'immediate':\n          relative = stream.pos + this.offsetType.size(val, parent);\n          break;\n\n        case 'parent':\n          ctx = ctx.parent;\n          relative = ctx.startOffset;\n          break;\n\n        default:\n          relative = 0;\n\n          while (ctx.parent) {\n            ctx = ctx.parent;\n          }\n\n      }\n\n      if (this.options.relativeTo) {\n        relative += this.relativeToGetter(parent.val);\n      }\n\n      this.offsetType.encode(stream, ctx.pointerOffset - relative);\n      type = this.type;\n\n      if (type == null) {\n        if (!(val instanceof VoidPointer)) {\n          throw new Error(\"Must be a VoidPointer\");\n        }\n\n        type = val.type;\n        val = val.value;\n      }\n\n      ctx.pointers.push({\n        type: type,\n        val: val,\n        parent: parent\n      });\n      return ctx.pointerOffset += type.size(val, parent);\n    };\n\n    return Pointer;\n  }();\n\n  VoidPointer = function () {\n    function VoidPointer(type, value) {\n      this.type = type;\n      this.value = value;\n    }\n\n    return VoidPointer;\n  }();\n\n  exports.Pointer = Pointer;\n  exports.VoidPointer = VoidPointer;\n}).call(this);","map":{"version":3,"names":["Pointer","VoidPointer","utils","require","offsetType","type","options","_base","_base1","_base2","_base3","allowNull","nullValue","lazy","relativeTo","relativeToGetter","Function","prototype","decode","stream","ctx","c","decodeValue","offset","ptr","relative","val","_startOffset","pos","size","parent","call","_this","PropertyDescriptor","get","Error","value","pointerSize","encode","startOffset","pointerOffset","pointers","push","exports"],"sources":["/home/carlobottaro/Documents/Universit√†/gamification/node_modules/restructure/src/Pointer.js"],"sourcesContent":["// Generated by CoffeeScript 1.7.1\n(function() {\n  var Pointer, VoidPointer, utils;\n\n  utils = require('./utils');\n\n  Pointer = (function() {\n    function Pointer(offsetType, type, options) {\n      var _base, _base1, _base2, _base3;\n      this.offsetType = offsetType;\n      this.type = type;\n      this.options = options != null ? options : {};\n      if (this.type === 'void') {\n        this.type = null;\n      }\n      if ((_base = this.options).type == null) {\n        _base.type = 'local';\n      }\n      if ((_base1 = this.options).allowNull == null) {\n        _base1.allowNull = true;\n      }\n      if ((_base2 = this.options).nullValue == null) {\n        _base2.nullValue = 0;\n      }\n      if ((_base3 = this.options).lazy == null) {\n        _base3.lazy = false;\n      }\n      if (this.options.relativeTo) {\n        this.relativeToGetter = new Function('ctx', \"return ctx.\" + this.options.relativeTo);\n      }\n    }\n\n    Pointer.prototype.decode = function(stream, ctx) {\n      var c, decodeValue, offset, ptr, relative, val;\n      offset = this.offsetType.decode(stream, ctx);\n      if (offset === this.options.nullValue && this.options.allowNull) {\n        return null;\n      }\n      relative = (function() {\n        switch (this.options.type) {\n          case 'local':\n            return ctx._startOffset;\n          case 'immediate':\n            return stream.pos - this.offsetType.size();\n          case 'parent':\n            return ctx.parent._startOffset;\n          default:\n            c = ctx;\n            while (c.parent) {\n              c = c.parent;\n            }\n            return c._startOffset || 0;\n        }\n      }).call(this);\n      if (this.options.relativeTo) {\n        relative += this.relativeToGetter(ctx);\n      }\n      ptr = offset + relative;\n      if (this.type != null) {\n        val = null;\n        decodeValue = (function(_this) {\n          return function() {\n            var pos;\n            if (val != null) {\n              return val;\n            }\n            pos = stream.pos;\n            stream.pos = ptr;\n            val = _this.type.decode(stream, ctx);\n            stream.pos = pos;\n            return val;\n          };\n        })(this);\n        if (this.options.lazy) {\n          return new utils.PropertyDescriptor({\n            get: decodeValue\n          });\n        }\n        return decodeValue();\n      } else {\n        return ptr;\n      }\n    };\n\n    Pointer.prototype.size = function(val, ctx) {\n      var parent, type;\n      parent = ctx;\n      switch (this.options.type) {\n        case 'local':\n        case 'immediate':\n          break;\n        case 'parent':\n          ctx = ctx.parent;\n          break;\n        default:\n          while (ctx.parent) {\n            ctx = ctx.parent;\n          }\n      }\n      type = this.type;\n      if (type == null) {\n        if (!(val instanceof VoidPointer)) {\n          throw new Error(\"Must be a VoidPointer\");\n        }\n        type = val.type;\n        val = val.value;\n      }\n      if (val && ctx) {\n        ctx.pointerSize += type.size(val, parent);\n      }\n      return this.offsetType.size();\n    };\n\n    Pointer.prototype.encode = function(stream, val, ctx) {\n      var parent, relative, type;\n      parent = ctx;\n      if (val == null) {\n        this.offsetType.encode(stream, this.options.nullValue);\n        return;\n      }\n      switch (this.options.type) {\n        case 'local':\n          relative = ctx.startOffset;\n          break;\n        case 'immediate':\n          relative = stream.pos + this.offsetType.size(val, parent);\n          break;\n        case 'parent':\n          ctx = ctx.parent;\n          relative = ctx.startOffset;\n          break;\n        default:\n          relative = 0;\n          while (ctx.parent) {\n            ctx = ctx.parent;\n          }\n      }\n      if (this.options.relativeTo) {\n        relative += this.relativeToGetter(parent.val);\n      }\n      this.offsetType.encode(stream, ctx.pointerOffset - relative);\n      type = this.type;\n      if (type == null) {\n        if (!(val instanceof VoidPointer)) {\n          throw new Error(\"Must be a VoidPointer\");\n        }\n        type = val.type;\n        val = val.value;\n      }\n      ctx.pointers.push({\n        type: type,\n        val: val,\n        parent: parent\n      });\n      return ctx.pointerOffset += type.size(val, parent);\n    };\n\n    return Pointer;\n\n  })();\n\n  VoidPointer = (function() {\n    function VoidPointer(type, value) {\n      this.type = type;\n      this.value = value;\n    }\n\n    return VoidPointer;\n\n  })();\n\n  exports.Pointer = Pointer;\n\n  exports.VoidPointer = VoidPointer;\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}