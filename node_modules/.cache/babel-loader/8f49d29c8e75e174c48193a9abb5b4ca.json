{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _fromFragments = _interopRequireDefault(require(\"../attributedString/fromFragments\"));\n/**\n * Default word hyphenation engine used when no one provided.\n * Does not perform word hyphenation at all\n *\n * @param  {String} word\n * @return {Array} same word\n */\n\n\nvar defaultHyphenationEngine = function defaultHyphenationEngine(word) {\n  return [word];\n};\n/**\n * Wrap words of attribute string\n *\n * @param  {Object} layout engines\n * @param  {Object}  layout options\n * @param  {Object}  attributed string\n * @return {Object} attributed string including syllables\n */\n\n\nvar wrapWords = function wrapWords(engines, options, attributedString) {\n  if (engines === void 0) {\n    engines = {};\n  }\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var syllables = [];\n  var fragments = [];\n  var hyphenateWord = options.hyphenationCallback || engines.wordHyphenation && engines.wordHyphenation(options) || defaultHyphenationEngine;\n\n  for (var i = 0; i < attributedString.runs.length; i += 1) {\n    var string = '';\n    var run = attributedString.runs[i];\n    var words = attributedString.string.slice(run.start, run.end).split(/([ ]+)/g).filter(Boolean);\n\n    for (var j = 0; j < words.length; j += 1) {\n      var word = words[j];\n      var parts = hyphenateWord(word);\n      syllables.push.apply(syllables, parts);\n      string += parts.join('');\n    }\n\n    fragments.push({\n      string: string,\n      attributes: run.attributes\n    });\n  }\n\n  return (0, _extends2.default)({}, (0, _fromFragments.default)(fragments), {\n    syllables: syllables\n  });\n};\n\nvar _default = R.curryN(3, wrapWords);\n\nexports.default = _default;","map":{"version":3,"names":["_interopRequireWildcard","require","default","_interopRequireDefault","exports","__esModule","_extends2","R","_fromFragments","defaultHyphenationEngine","word","wrapWords","engines","options","attributedString","syllables","fragments","hyphenateWord","hyphenationCallback","wordHyphenation","i","runs","length","string","run","words","slice","start","end","split","filter","Boolean","j","parts","push","apply","join","attributes","_default","curryN"],"sources":["/home/carlobottaro/Documents/UniversitÃ /gamification/node_modules/@react-pdf/textkit/lib/layout/wrapWords.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _fromFragments = _interopRequireDefault(require(\"../attributedString/fromFragments\"));\n\n/**\n * Default word hyphenation engine used when no one provided.\n * Does not perform word hyphenation at all\n *\n * @param  {String} word\n * @return {Array} same word\n */\nvar defaultHyphenationEngine = function defaultHyphenationEngine(word) {\n  return [word];\n};\n/**\n * Wrap words of attribute string\n *\n * @param  {Object} layout engines\n * @param  {Object}  layout options\n * @param  {Object}  attributed string\n * @return {Object} attributed string including syllables\n */\n\n\nvar wrapWords = function wrapWords(engines, options, attributedString) {\n  if (engines === void 0) {\n    engines = {};\n  }\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var syllables = [];\n  var fragments = [];\n  var hyphenateWord = options.hyphenationCallback || engines.wordHyphenation && engines.wordHyphenation(options) || defaultHyphenationEngine;\n\n  for (var i = 0; i < attributedString.runs.length; i += 1) {\n    var string = '';\n    var run = attributedString.runs[i];\n    var words = attributedString.string.slice(run.start, run.end).split(/([ ]+)/g).filter(Boolean);\n\n    for (var j = 0; j < words.length; j += 1) {\n      var word = words[j];\n      var parts = hyphenateWord(word);\n      syllables.push.apply(syllables, parts);\n      string += parts.join('');\n    }\n\n    fragments.push({\n      string: string,\n      attributes: run.attributes\n    });\n  }\n\n  return (0, _extends2.default)({}, (0, _fromFragments.default)(fragments), {\n    syllables: syllables\n  });\n};\n\nvar _default = R.curryN(3, wrapWords);\n\nexports.default = _default;"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAAP,CAAyDC,OAAvF;;AAEA,IAAIC,sBAAsB,GAAGF,OAAO,CAAC,8CAAD,CAAP,CAAwDC,OAArF;;AAEAE,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACF,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAII,SAAS,GAAGH,sBAAsB,CAACF,OAAO,CAAC,gCAAD,CAAR,CAAtC;;AAEA,IAAIM,CAAC,GAAGP,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIO,cAAc,GAAGL,sBAAsB,CAACF,OAAO,CAAC,mCAAD,CAAR,CAA3C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIQ,wBAAwB,GAAG,SAASA,wBAAT,CAAkCC,IAAlC,EAAwC;EACrE,OAAO,CAACA,IAAD,CAAP;AACD,CAFD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBC,OAAnB,EAA4BC,OAA5B,EAAqCC,gBAArC,EAAuD;EACrE,IAAIF,OAAO,KAAK,KAAK,CAArB,EAAwB;IACtBA,OAAO,GAAG,EAAV;EACD;;EAED,IAAIC,OAAO,KAAK,KAAK,CAArB,EAAwB;IACtBA,OAAO,GAAG,EAAV;EACD;;EAED,IAAIE,SAAS,GAAG,EAAhB;EACA,IAAIC,SAAS,GAAG,EAAhB;EACA,IAAIC,aAAa,GAAGJ,OAAO,CAACK,mBAAR,IAA+BN,OAAO,CAACO,eAAR,IAA2BP,OAAO,CAACO,eAAR,CAAwBN,OAAxB,CAA1D,IAA8FJ,wBAAlH;;EAEA,KAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,gBAAgB,CAACO,IAAjB,CAAsBC,MAA1C,EAAkDF,CAAC,IAAI,CAAvD,EAA0D;IACxD,IAAIG,MAAM,GAAG,EAAb;IACA,IAAIC,GAAG,GAAGV,gBAAgB,CAACO,IAAjB,CAAsBD,CAAtB,CAAV;IACA,IAAIK,KAAK,GAAGX,gBAAgB,CAACS,MAAjB,CAAwBG,KAAxB,CAA8BF,GAAG,CAACG,KAAlC,EAAyCH,GAAG,CAACI,GAA7C,EAAkDC,KAAlD,CAAwD,SAAxD,EAAmEC,MAAnE,CAA0EC,OAA1E,CAAZ;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,KAAK,CAACH,MAA1B,EAAkCU,CAAC,IAAI,CAAvC,EAA0C;MACxC,IAAItB,IAAI,GAAGe,KAAK,CAACO,CAAD,CAAhB;MACA,IAAIC,KAAK,GAAGhB,aAAa,CAACP,IAAD,CAAzB;MACAK,SAAS,CAACmB,IAAV,CAAeC,KAAf,CAAqBpB,SAArB,EAAgCkB,KAAhC;MACAV,MAAM,IAAIU,KAAK,CAACG,IAAN,CAAW,EAAX,CAAV;IACD;;IAEDpB,SAAS,CAACkB,IAAV,CAAe;MACbX,MAAM,EAAEA,MADK;MAEbc,UAAU,EAAEb,GAAG,CAACa;IAFH,CAAf;EAID;;EAED,OAAO,CAAC,GAAG/B,SAAS,CAACJ,OAAd,EAAuB,EAAvB,EAA2B,CAAC,GAAGM,cAAc,CAACN,OAAnB,EAA4Bc,SAA5B,CAA3B,EAAmE;IACxED,SAAS,EAAEA;EAD6D,CAAnE,CAAP;AAGD,CAlCD;;AAoCA,IAAIuB,QAAQ,GAAG/B,CAAC,CAACgC,MAAF,CAAS,CAAT,EAAY5B,SAAZ,CAAf;;AAEAP,OAAO,CAACF,OAAR,GAAkBoC,QAAlB"},"metadata":{},"sourceType":"script"}