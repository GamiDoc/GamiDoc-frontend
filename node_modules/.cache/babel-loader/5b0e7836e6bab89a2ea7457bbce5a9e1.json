{"ast":null,"code":"/**\n * Create a blob builder even when vendor prefixes exist\n */\nvar BlobBuilder = global.BlobBuilder || global.WebKitBlobBuilder || global.MSBlobBuilder || global.MozBlobBuilder;\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = function () {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch (e) {\n    return false;\n  }\n}();\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\n\nvar blobSupportsArrayBufferView = blobSupported && function () {\n  try {\n    var b = new Blob([new Uint8Array([1, 2])]);\n    return b.size === 2;\n  } catch (e) {\n    return false;\n  }\n}();\n/**\n * Check if BlobBuilder is supported\n */\n\n\nvar blobBuilderSupported = BlobBuilder && BlobBuilder.prototype.append && BlobBuilder.prototype.getBlob;\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer; // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return options.type ? bb.getBlob(options.type) : bb.getBlob();\n}\n\n;\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n}\n\n;\n\nmodule.exports = function () {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n}();","map":{"version":3,"names":["BlobBuilder","global","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","a","Blob","size","e","blobSupportsArrayBufferView","b","Uint8Array","blobBuilderSupported","prototype","append","getBlob","mapArrayBufferViews","ary","i","length","chunk","buffer","ArrayBuffer","buf","byteLength","copy","set","byteOffset","BlobBuilderConstructor","options","bb","type","BlobConstructor","module","exports","undefined"],"sources":["/home/carlobottaro/Documents/UniversitÃ /gamification/node_modules/blob/index.js"],"sourcesContent":["/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}