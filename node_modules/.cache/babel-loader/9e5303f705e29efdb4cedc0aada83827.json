{"ast":null,"code":"import _objectAssign from './_objectAssign.js';\nimport _identity from './_identity.js';\nimport _isArrayLike from './_isArrayLike.js';\nimport _isTransformer from './_isTransformer.js';\nimport objOf from '../objOf.js';\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _objectAssign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n\n  throw new Error('Cannot create transformer for ' + obj);\n}","map":{"version":3,"names":["_objectAssign","_identity","_isArrayLike","_isTransformer","objOf","_stepCatArray","Array","xs","x","push","_stepCatString","String","a","b","_stepCatObject","Object","result","input","_stepCat","obj","Error"],"sources":["/home/carlobottaro/Documents/Universit√†/gamification/node_modules/ramda/es/internal/_stepCat.js"],"sourcesContent":["import _objectAssign from './_objectAssign.js';\nimport _identity from './_identity.js';\nimport _isArrayLike from './_isArrayLike.js';\nimport _isTransformer from './_isTransformer.js';\nimport objOf from '../objOf.js';\n\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _objectAssign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\n\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n  throw new Error('Cannot create transformer for ' + obj);\n}"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,oBAA1B;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,IAAIC,aAAa,GAAG;EAClB,qBAAqBC,KADH;EAElB,qBAAqB,UAAUC,EAAV,EAAcC,CAAd,EAAiB;IACpCD,EAAE,CAACE,IAAH,CAAQD,CAAR;IACA,OAAOD,EAAP;EACD,CALiB;EAMlB,uBAAuBN;AANL,CAApB;AAQA,IAAIS,cAAc,GAAG;EACnB,qBAAqBC,MADF;EAEnB,qBAAqB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;IACnC,OAAOD,CAAC,GAAGC,CAAX;EACD,CAJkB;EAKnB,uBAAuBZ;AALJ,CAArB;AAOA,IAAIa,cAAc,GAAG;EACnB,qBAAqBC,MADF;EAEnB,qBAAqB,UAAUC,MAAV,EAAkBC,KAAlB,EAAyB;IAC5C,OAAOjB,aAAa,CAACgB,MAAD,EAASd,YAAY,CAACe,KAAD,CAAZ,GAAsBb,KAAK,CAACa,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,CAA3B,GAAkDA,KAA3D,CAApB;EACD,CAJkB;EAKnB,uBAAuBhB;AALJ,CAArB;AAQA,eAAe,SAASiB,QAAT,CAAkBC,GAAlB,EAAuB;EACpC,IAAIhB,cAAc,CAACgB,GAAD,CAAlB,EAAyB;IACvB,OAAOA,GAAP;EACD;;EACD,IAAIjB,YAAY,CAACiB,GAAD,CAAhB,EAAuB;IACrB,OAAOd,aAAP;EACD;;EACD,IAAI,OAAOc,GAAP,KAAe,QAAnB,EAA6B;IAC3B,OAAOT,cAAP;EACD;;EACD,IAAI,OAAOS,GAAP,KAAe,QAAnB,EAA6B;IAC3B,OAAOL,cAAP;EACD;;EACD,MAAM,IAAIM,KAAJ,CAAU,mCAAmCD,GAA7C,CAAN;AACD"},"metadata":{},"sourceType":"module"}