{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _append = _interopRequireDefault(require(\"./append\"));\n\nvar _copy = _interopRequireDefault(require(\"../run/copy\"));\n\nvar _insert = _interopRequireDefault(require(\"../run/insert\"));\n\nvar _runIndexAt = _interopRequireDefault(require(\"./runIndexAt\"));\n\nvar _stringFromCodePoints = _interopRequireDefault(require(\"../utils/stringFromCodePoints\"));\n\nvar mapCond = function mapCond(conds) {\n  return R.addIndex(R.map)(R.cond(conds));\n};\n\nvar idxEquals = function idxEquals(idx) {\n  return R.compose(R.equals(idx), R.nthArg(1));\n};\n\nvar idxGt = function idxGt(idx) {\n  return R.compose(R.gt(R.__, idx), R.nthArg(1));\n};\n/**\n * Insert glyph into attributed string\n *\n * @param {number} index\n * @param {Object} glyph\n * @param {Object} attributed string\n * @return {Object} attributed string with new glyph\n */\n\n\nvar insertGlyph = function insertGlyph(index, glyph, string) {\n  var runIndex = (0, _runIndexAt.default)(index, string); // Add glyph to the end if run index invalid\n\n  if (runIndex === -1) {\n    return (0, _append.default)(glyph, string);\n  }\n\n  var codePoints = R.propOr([], 'codePoints')(glyph);\n  var incRange = R.add(R.length(codePoints));\n  return R.evolve({\n    string: R.compose(R.join(''), R.insert(index, (0, _stringFromCodePoints.default)(codePoints))),\n    runs: mapCond([[idxEquals(runIndex), function (run) {\n      return (0, _insert.default)(index - run.start, glyph, run);\n    }], [idxGt(runIndex), R.evolve({\n      start: incRange,\n      end: incRange\n    })], [R.T, _copy.default]])\n  })(string);\n};\n\nvar _default = R.curryN(3, insertGlyph);\n\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","_append","_copy","_insert","_runIndexAt","_stringFromCodePoints","mapCond","conds","addIndex","map","cond","idxEquals","idx","compose","equals","nthArg","idxGt","gt","__","insertGlyph","index","glyph","string","runIndex","codePoints","propOr","incRange","add","length","evolve","join","insert","runs","run","start","end","T","_default","curryN"],"sources":["/home/carlobottaro/Documents/Universit√†/gamification/node_modules/@react-pdf/textkit/lib/attributedString/insertGlyph.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _append = _interopRequireDefault(require(\"./append\"));\n\nvar _copy = _interopRequireDefault(require(\"../run/copy\"));\n\nvar _insert = _interopRequireDefault(require(\"../run/insert\"));\n\nvar _runIndexAt = _interopRequireDefault(require(\"./runIndexAt\"));\n\nvar _stringFromCodePoints = _interopRequireDefault(require(\"../utils/stringFromCodePoints\"));\n\nvar mapCond = function mapCond(conds) {\n  return R.addIndex(R.map)(R.cond(conds));\n};\n\nvar idxEquals = function idxEquals(idx) {\n  return R.compose(R.equals(idx), R.nthArg(1));\n};\n\nvar idxGt = function idxGt(idx) {\n  return R.compose(R.gt(R.__, idx), R.nthArg(1));\n};\n/**\n * Insert glyph into attributed string\n *\n * @param {number} index\n * @param {Object} glyph\n * @param {Object} attributed string\n * @return {Object} attributed string with new glyph\n */\n\n\nvar insertGlyph = function insertGlyph(index, glyph, string) {\n  var runIndex = (0, _runIndexAt.default)(index, string); // Add glyph to the end if run index invalid\n\n  if (runIndex === -1) {\n    return (0, _append.default)(glyph, string);\n  }\n\n  var codePoints = R.propOr([], 'codePoints')(glyph);\n  var incRange = R.add(R.length(codePoints));\n  return R.evolve({\n    string: R.compose(R.join(''), R.insert(index, (0, _stringFromCodePoints.default)(codePoints))),\n    runs: mapCond([[idxEquals(runIndex), function (run) {\n      return (0, _insert.default)(index - run.start, glyph, run);\n    }], [idxGt(runIndex), R.evolve({\n      start: incRange,\n      end: incRange\n    })], [R.T, _copy.default]])\n  })(string);\n};\n\nvar _default = R.curryN(3, insertGlyph);\n\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}