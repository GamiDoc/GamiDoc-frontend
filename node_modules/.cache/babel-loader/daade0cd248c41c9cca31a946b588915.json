{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _scale = _interopRequireDefault(require(\"./scale\"));\n\nvar _offset = _interopRequireDefault(require(\"./offset\"));\n\nvar _getFont = _interopRequireDefault(require(\"./getFont\"));\n\nvar _slice = _interopRequireDefault(require(\"../glyph/slice\"));\n\nvar _glyphIndexAt = _interopRequireDefault(require(\"./glyphIndexAt\"));\n\nvar _normalize = _interopRequireDefault(require(\"../indices/normalize\"));\n/**\n * Slice run between glyph indices range\n *\n * @param  {number}  start glyph index\n * @param  {number}  end glyph index\n * @param  {Object}  run\n * @return {Object} sliced run\n */\n\n\nvar slice = function slice(start, end, run) {\n  var runScale = (0, _scale.default)(run);\n  var font = (0, _getFont.default)(run); // Get glyph start and end indices\n\n  var glyphStartIndex = (0, _glyphIndexAt.default)(start, run);\n  var glyphEndIndex = (0, _glyphIndexAt.default)(end, run); // Get start and end glyph\n\n  var startGlyph = R.path(['glyphs', glyphStartIndex], run);\n  var endGlyph = R.path(['glyphs', glyphEndIndex], run); // Get start ligature chunks (if any)\n\n  var startOffset = (0, _offset.default)(start, run);\n  var startGlyphs = startOffset > 0 ? (0, _slice.default)(startOffset, Infinity, font, startGlyph) : []; // Get end ligature chunks (if any)\n\n  var endOffset = (0, _offset.default)(end, run);\n  var endGlyphs = (0, _slice.default)(0, endOffset, font, endGlyph);\n  var sliceOffset = Math.min(1, startOffset);\n  return R.evolve({\n    start: R.add(start),\n    end: R.compose(R.apply(R.min), R.juxt([R.identity, // string.end\n    R.o(R.add(end), R.always(run.start)) // end + string.start\n    ])),\n    glyphs: function glyphs(_glyphs) {\n      return R.flatten([startGlyphs, _glyphs.slice(glyphStartIndex + sliceOffset, glyphEndIndex), endGlyphs]);\n    },\n    positions: function positions(_positions) {\n      return R.flatten([startGlyphs.map(function (g) {\n        return {\n          xAdvance: g.advanceWidth * runScale\n        };\n      }), _positions.slice(glyphStartIndex + sliceOffset, glyphEndIndex), endGlyphs.map(function (g) {\n        return {\n          xAdvance: g.advanceWidth * runScale\n        };\n      })]);\n    },\n    glyphIndices: R.o(_normalize.default, R.slice(start, end)),\n    attributes: R.identity\n  })(run);\n};\n\nvar _default = R.curryN(3, slice);\n\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","_scale","_offset","_getFont","_slice","_glyphIndexAt","_normalize","slice","start","end","run","runScale","font","glyphStartIndex","glyphEndIndex","startGlyph","path","endGlyph","startOffset","startGlyphs","Infinity","endOffset","endGlyphs","sliceOffset","Math","min","evolve","add","compose","apply","juxt","identity","o","always","glyphs","_glyphs","flatten","positions","_positions","map","g","xAdvance","advanceWidth","glyphIndices","attributes","_default","curryN"],"sources":["/home/carlobottaro/Documents/UniversitÃ /gamification/node_modules/@react-pdf/textkit/lib/run/slice.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _scale = _interopRequireDefault(require(\"./scale\"));\n\nvar _offset = _interopRequireDefault(require(\"./offset\"));\n\nvar _getFont = _interopRequireDefault(require(\"./getFont\"));\n\nvar _slice = _interopRequireDefault(require(\"../glyph/slice\"));\n\nvar _glyphIndexAt = _interopRequireDefault(require(\"./glyphIndexAt\"));\n\nvar _normalize = _interopRequireDefault(require(\"../indices/normalize\"));\n\n/**\n * Slice run between glyph indices range\n *\n * @param  {number}  start glyph index\n * @param  {number}  end glyph index\n * @param  {Object}  run\n * @return {Object} sliced run\n */\nvar slice = function slice(start, end, run) {\n  var runScale = (0, _scale.default)(run);\n  var font = (0, _getFont.default)(run); // Get glyph start and end indices\n\n  var glyphStartIndex = (0, _glyphIndexAt.default)(start, run);\n  var glyphEndIndex = (0, _glyphIndexAt.default)(end, run); // Get start and end glyph\n\n  var startGlyph = R.path(['glyphs', glyphStartIndex], run);\n  var endGlyph = R.path(['glyphs', glyphEndIndex], run); // Get start ligature chunks (if any)\n\n  var startOffset = (0, _offset.default)(start, run);\n  var startGlyphs = startOffset > 0 ? (0, _slice.default)(startOffset, Infinity, font, startGlyph) : []; // Get end ligature chunks (if any)\n\n  var endOffset = (0, _offset.default)(end, run);\n  var endGlyphs = (0, _slice.default)(0, endOffset, font, endGlyph);\n  var sliceOffset = Math.min(1, startOffset);\n  return R.evolve({\n    start: R.add(start),\n    end: R.compose(R.apply(R.min), R.juxt([R.identity, // string.end\n    R.o(R.add(end), R.always(run.start)) // end + string.start\n    ])),\n    glyphs: function glyphs(_glyphs) {\n      return R.flatten([startGlyphs, _glyphs.slice(glyphStartIndex + sliceOffset, glyphEndIndex), endGlyphs]);\n    },\n    positions: function positions(_positions) {\n      return R.flatten([startGlyphs.map(function (g) {\n        return {\n          xAdvance: g.advanceWidth * runScale\n        };\n      }), _positions.slice(glyphStartIndex + sliceOffset, glyphEndIndex), endGlyphs.map(function (g) {\n        return {\n          xAdvance: g.advanceWidth * runScale\n        };\n      })]);\n    },\n    glyphIndices: R.o(_normalize.default, R.slice(start, end)),\n    attributes: R.identity\n  })(run);\n};\n\nvar _default = R.curryN(3, slice);\n\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}