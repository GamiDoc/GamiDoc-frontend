{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _getMargin = _interopRequireDefault(require(\"../node/getMargin\"));\n\nvar _getPadding = _interopRequireDefault(require(\"../node/getPadding\"));\n\nvar _isHeightAuto = _interopRequireDefault(require(\"../page/isHeightAuto\"));\n/* eslint-disable no-param-reassign */\n\n\nvar SAFETY_HEIGHT = 10;\nvar getMax = R.reduce(R.max, -Infinity);\n/**\n * Helper object to predict canvas size\n * TODO: Implement remaining functions (as close as possible);\n */\n\nvar measureCtx = function measureCtx() {\n  var ctx = {};\n  var points = [];\n\n  var nil = function nil() {\n    return ctx;\n  };\n\n  var addPoint = function addPoint(x, y) {\n    return points.push([x, y]);\n  };\n\n  var moveTo = R.compose(nil, addPoint);\n\n  var rect = function rect(x, y, w, h) {\n    addPoint(x, y);\n    addPoint(x + w, y);\n    addPoint(x, y + h);\n    addPoint(x + w, y + h);\n    return ctx;\n  };\n\n  var ellipse = function ellipse(x, y, rx, ry) {\n    ry = ry || rx;\n    addPoint(x - rx, y - ry);\n    addPoint(x + rx, y - ry);\n    addPoint(x + rx, y + ry);\n    addPoint(x - rx, y + ry);\n    return ctx;\n  };\n\n  var polygon = function polygon() {\n    points.push.apply(points, arguments);\n    return nil();\n  }; // Change dimensions\n\n\n  ctx.rect = rect;\n  ctx.moveTo = moveTo;\n  ctx.lineTo = moveTo;\n  ctx.circle = ellipse;\n  ctx.polygon = polygon;\n  ctx.ellipse = ellipse;\n  ctx.roundedRect = rect; // To be implemented\n\n  ctx.text = nil;\n  ctx.path = nil;\n  ctx.lineWidth = nil;\n  ctx.bezierCurveTo = nil;\n  ctx.quadraticCurveTo = nil;\n  ctx.scale = nil;\n  ctx.rotate = nil;\n  ctx.translate = nil; // These don't change dimensions\n\n  ctx.dash = nil;\n  ctx.clip = nil;\n  ctx.save = nil;\n  ctx.fill = nil;\n  ctx.font = nil;\n  ctx.stroke = nil;\n  ctx.lineCap = nil;\n  ctx.opacity = nil;\n  ctx.restore = nil;\n  ctx.lineJoin = nil;\n  ctx.fontSize = nil;\n  ctx.fillColor = nil;\n  ctx.miterLimit = nil;\n  ctx.strokeColor = nil;\n  ctx.fillOpacity = nil;\n  ctx.strokeOpacity = nil;\n  ctx.linearGradient = nil;\n  ctx.radialGradient = nil;\n\n  ctx.getWidth = function () {\n    return R.compose(getMax, R.pluck(0))(points);\n  };\n\n  ctx.getHeight = function () {\n    return R.compose(getMax, R.pluck(1))(points);\n  };\n\n  return ctx;\n};\n/**\n * Yoga canvas measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} canvas width and height\n */\n\n\nvar measureCanvas = function measureCanvas(page, node) {\n  var imageMargin = (0, _getMargin.default)(node);\n  var pagePadding = (0, _getPadding.default)(page);\n  var pageArea = (0, _isHeightAuto.default)(page) ? Infinity : page.box.height - pagePadding.paddingTop - pagePadding.paddingBottom - imageMargin.marginTop - imageMargin.marginBottom - SAFETY_HEIGHT;\n  var ctx = measureCtx();\n  node.props.paint(ctx);\n  var width = ctx.getWidth();\n  var height = Math.min(pageArea, ctx.getHeight());\n  return {\n    height: height,\n    width: width\n  };\n};\n\nvar _default = R.curryN(6, measureCanvas);\n\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","_getMargin","_getPadding","_isHeightAuto","SAFETY_HEIGHT","getMax","reduce","max","Infinity","measureCtx","ctx","points","nil","addPoint","x","y","push","moveTo","compose","rect","w","h","ellipse","rx","ry","polygon","apply","arguments","lineTo","circle","roundedRect","text","path","lineWidth","bezierCurveTo","quadraticCurveTo","scale","rotate","translate","dash","clip","save","fill","font","stroke","lineCap","opacity","restore","lineJoin","fontSize","fillColor","miterLimit","strokeColor","fillOpacity","strokeOpacity","linearGradient","radialGradient","getWidth","pluck","getHeight","measureCanvas","page","node","imageMargin","pagePadding","pageArea","box","height","paddingTop","paddingBottom","marginTop","marginBottom","props","paint","width","Math","min","_default","curryN"],"sources":["/home/carlobottaro/Documents/Universit√†/gamification/node_modules/@react-pdf/layout/lib/canvas/measureCanvas.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _getMargin = _interopRequireDefault(require(\"../node/getMargin\"));\n\nvar _getPadding = _interopRequireDefault(require(\"../node/getPadding\"));\n\nvar _isHeightAuto = _interopRequireDefault(require(\"../page/isHeightAuto\"));\n\n/* eslint-disable no-param-reassign */\nvar SAFETY_HEIGHT = 10;\nvar getMax = R.reduce(R.max, -Infinity);\n/**\n * Helper object to predict canvas size\n * TODO: Implement remaining functions (as close as possible);\n */\n\nvar measureCtx = function measureCtx() {\n  var ctx = {};\n  var points = [];\n\n  var nil = function nil() {\n    return ctx;\n  };\n\n  var addPoint = function addPoint(x, y) {\n    return points.push([x, y]);\n  };\n\n  var moveTo = R.compose(nil, addPoint);\n\n  var rect = function rect(x, y, w, h) {\n    addPoint(x, y);\n    addPoint(x + w, y);\n    addPoint(x, y + h);\n    addPoint(x + w, y + h);\n    return ctx;\n  };\n\n  var ellipse = function ellipse(x, y, rx, ry) {\n    ry = ry || rx;\n    addPoint(x - rx, y - ry);\n    addPoint(x + rx, y - ry);\n    addPoint(x + rx, y + ry);\n    addPoint(x - rx, y + ry);\n    return ctx;\n  };\n\n  var polygon = function polygon() {\n    points.push.apply(points, arguments);\n    return nil();\n  }; // Change dimensions\n\n\n  ctx.rect = rect;\n  ctx.moveTo = moveTo;\n  ctx.lineTo = moveTo;\n  ctx.circle = ellipse;\n  ctx.polygon = polygon;\n  ctx.ellipse = ellipse;\n  ctx.roundedRect = rect; // To be implemented\n\n  ctx.text = nil;\n  ctx.path = nil;\n  ctx.lineWidth = nil;\n  ctx.bezierCurveTo = nil;\n  ctx.quadraticCurveTo = nil;\n  ctx.scale = nil;\n  ctx.rotate = nil;\n  ctx.translate = nil; // These don't change dimensions\n\n  ctx.dash = nil;\n  ctx.clip = nil;\n  ctx.save = nil;\n  ctx.fill = nil;\n  ctx.font = nil;\n  ctx.stroke = nil;\n  ctx.lineCap = nil;\n  ctx.opacity = nil;\n  ctx.restore = nil;\n  ctx.lineJoin = nil;\n  ctx.fontSize = nil;\n  ctx.fillColor = nil;\n  ctx.miterLimit = nil;\n  ctx.strokeColor = nil;\n  ctx.fillOpacity = nil;\n  ctx.strokeOpacity = nil;\n  ctx.linearGradient = nil;\n  ctx.radialGradient = nil;\n\n  ctx.getWidth = function () {\n    return R.compose(getMax, R.pluck(0))(points);\n  };\n\n  ctx.getHeight = function () {\n    return R.compose(getMax, R.pluck(1))(points);\n  };\n\n  return ctx;\n};\n/**\n * Yoga canvas measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} canvas width and height\n */\n\n\nvar measureCanvas = function measureCanvas(page, node) {\n  var imageMargin = (0, _getMargin.default)(node);\n  var pagePadding = (0, _getPadding.default)(page);\n  var pageArea = (0, _isHeightAuto.default)(page) ? Infinity : page.box.height - pagePadding.paddingTop - pagePadding.paddingBottom - imageMargin.marginTop - imageMargin.marginBottom - SAFETY_HEIGHT;\n  var ctx = measureCtx();\n  node.props.paint(ctx);\n  var width = ctx.getWidth();\n  var height = Math.min(pageArea, ctx.getHeight());\n  return {\n    height: height,\n    width: width\n  };\n};\n\nvar _default = R.curryN(6, measureCanvas);\n\nexports.default = _default;"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAAP,CAAwDC,OAArF;;AAEA,IAAIC,uBAAuB,GAAGF,OAAO,CAAC,+CAAD,CAAP,CAAyDC,OAAvF;;AAEAE,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACF,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAII,CAAC,GAAGH,uBAAuB,CAACF,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIM,UAAU,GAAGP,sBAAsB,CAACC,OAAO,CAAC,mBAAD,CAAR,CAAvC;;AAEA,IAAIO,WAAW,GAAGR,sBAAsB,CAACC,OAAO,CAAC,oBAAD,CAAR,CAAxC;;AAEA,IAAIQ,aAAa,GAAGT,sBAAsB,CAACC,OAAO,CAAC,sBAAD,CAAR,CAA1C;AAEA;;;AACA,IAAIS,aAAa,GAAG,EAApB;AACA,IAAIC,MAAM,GAAGL,CAAC,CAACM,MAAF,CAASN,CAAC,CAACO,GAAX,EAAgB,CAACC,QAAjB,CAAb;AACA;AACA;AACA;AACA;;AAEA,IAAIC,UAAU,GAAG,SAASA,UAAT,GAAsB;EACrC,IAAIC,GAAG,GAAG,EAAV;EACA,IAAIC,MAAM,GAAG,EAAb;;EAEA,IAAIC,GAAG,GAAG,SAASA,GAAT,GAAe;IACvB,OAAOF,GAAP;EACD,CAFD;;EAIA,IAAIG,QAAQ,GAAG,SAASA,QAAT,CAAkBC,CAAlB,EAAqBC,CAArB,EAAwB;IACrC,OAAOJ,MAAM,CAACK,IAAP,CAAY,CAACF,CAAD,EAAIC,CAAJ,CAAZ,CAAP;EACD,CAFD;;EAIA,IAAIE,MAAM,GAAGjB,CAAC,CAACkB,OAAF,CAAUN,GAAV,EAAeC,QAAf,CAAb;;EAEA,IAAIM,IAAI,GAAG,SAASA,IAAT,CAAcL,CAAd,EAAiBC,CAAjB,EAAoBK,CAApB,EAAuBC,CAAvB,EAA0B;IACnCR,QAAQ,CAACC,CAAD,EAAIC,CAAJ,CAAR;IACAF,QAAQ,CAACC,CAAC,GAAGM,CAAL,EAAQL,CAAR,CAAR;IACAF,QAAQ,CAACC,CAAD,EAAIC,CAAC,GAAGM,CAAR,CAAR;IACAR,QAAQ,CAACC,CAAC,GAAGM,CAAL,EAAQL,CAAC,GAAGM,CAAZ,CAAR;IACA,OAAOX,GAAP;EACD,CAND;;EAQA,IAAIY,OAAO,GAAG,SAASA,OAAT,CAAiBR,CAAjB,EAAoBC,CAApB,EAAuBQ,EAAvB,EAA2BC,EAA3B,EAA+B;IAC3CA,EAAE,GAAGA,EAAE,IAAID,EAAX;IACAV,QAAQ,CAACC,CAAC,GAAGS,EAAL,EAASR,CAAC,GAAGS,EAAb,CAAR;IACAX,QAAQ,CAACC,CAAC,GAAGS,EAAL,EAASR,CAAC,GAAGS,EAAb,CAAR;IACAX,QAAQ,CAACC,CAAC,GAAGS,EAAL,EAASR,CAAC,GAAGS,EAAb,CAAR;IACAX,QAAQ,CAACC,CAAC,GAAGS,EAAL,EAASR,CAAC,GAAGS,EAAb,CAAR;IACA,OAAOd,GAAP;EACD,CAPD;;EASA,IAAIe,OAAO,GAAG,SAASA,OAAT,GAAmB;IAC/Bd,MAAM,CAACK,IAAP,CAAYU,KAAZ,CAAkBf,MAAlB,EAA0BgB,SAA1B;IACA,OAAOf,GAAG,EAAV;EACD,CAHD,CA/BqC,CAkClC;;;EAGHF,GAAG,CAACS,IAAJ,GAAWA,IAAX;EACAT,GAAG,CAACO,MAAJ,GAAaA,MAAb;EACAP,GAAG,CAACkB,MAAJ,GAAaX,MAAb;EACAP,GAAG,CAACmB,MAAJ,GAAaP,OAAb;EACAZ,GAAG,CAACe,OAAJ,GAAcA,OAAd;EACAf,GAAG,CAACY,OAAJ,GAAcA,OAAd;EACAZ,GAAG,CAACoB,WAAJ,GAAkBX,IAAlB,CA3CqC,CA2Cb;;EAExBT,GAAG,CAACqB,IAAJ,GAAWnB,GAAX;EACAF,GAAG,CAACsB,IAAJ,GAAWpB,GAAX;EACAF,GAAG,CAACuB,SAAJ,GAAgBrB,GAAhB;EACAF,GAAG,CAACwB,aAAJ,GAAoBtB,GAApB;EACAF,GAAG,CAACyB,gBAAJ,GAAuBvB,GAAvB;EACAF,GAAG,CAAC0B,KAAJ,GAAYxB,GAAZ;EACAF,GAAG,CAAC2B,MAAJ,GAAazB,GAAb;EACAF,GAAG,CAAC4B,SAAJ,GAAgB1B,GAAhB,CApDqC,CAoDhB;;EAErBF,GAAG,CAAC6B,IAAJ,GAAW3B,GAAX;EACAF,GAAG,CAAC8B,IAAJ,GAAW5B,GAAX;EACAF,GAAG,CAAC+B,IAAJ,GAAW7B,GAAX;EACAF,GAAG,CAACgC,IAAJ,GAAW9B,GAAX;EACAF,GAAG,CAACiC,IAAJ,GAAW/B,GAAX;EACAF,GAAG,CAACkC,MAAJ,GAAahC,GAAb;EACAF,GAAG,CAACmC,OAAJ,GAAcjC,GAAd;EACAF,GAAG,CAACoC,OAAJ,GAAclC,GAAd;EACAF,GAAG,CAACqC,OAAJ,GAAcnC,GAAd;EACAF,GAAG,CAACsC,QAAJ,GAAepC,GAAf;EACAF,GAAG,CAACuC,QAAJ,GAAerC,GAAf;EACAF,GAAG,CAACwC,SAAJ,GAAgBtC,GAAhB;EACAF,GAAG,CAACyC,UAAJ,GAAiBvC,GAAjB;EACAF,GAAG,CAAC0C,WAAJ,GAAkBxC,GAAlB;EACAF,GAAG,CAAC2C,WAAJ,GAAkBzC,GAAlB;EACAF,GAAG,CAAC4C,aAAJ,GAAoB1C,GAApB;EACAF,GAAG,CAAC6C,cAAJ,GAAqB3C,GAArB;EACAF,GAAG,CAAC8C,cAAJ,GAAqB5C,GAArB;;EAEAF,GAAG,CAAC+C,QAAJ,GAAe,YAAY;IACzB,OAAOzD,CAAC,CAACkB,OAAF,CAAUb,MAAV,EAAkBL,CAAC,CAAC0D,KAAF,CAAQ,CAAR,CAAlB,EAA8B/C,MAA9B,CAAP;EACD,CAFD;;EAIAD,GAAG,CAACiD,SAAJ,GAAgB,YAAY;IAC1B,OAAO3D,CAAC,CAACkB,OAAF,CAAUb,MAAV,EAAkBL,CAAC,CAAC0D,KAAF,CAAQ,CAAR,CAAlB,EAA8B/C,MAA9B,CAAP;EACD,CAFD;;EAIA,OAAOD,GAAP;AACD,CAlFD;AAmFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIkD,aAAa,GAAG,SAASA,aAAT,CAAuBC,IAAvB,EAA6BC,IAA7B,EAAmC;EACrD,IAAIC,WAAW,GAAG,CAAC,GAAG9D,UAAU,CAACL,OAAf,EAAwBkE,IAAxB,CAAlB;EACA,IAAIE,WAAW,GAAG,CAAC,GAAG9D,WAAW,CAACN,OAAhB,EAAyBiE,IAAzB,CAAlB;EACA,IAAII,QAAQ,GAAG,CAAC,GAAG9D,aAAa,CAACP,OAAlB,EAA2BiE,IAA3B,IAAmCrD,QAAnC,GAA8CqD,IAAI,CAACK,GAAL,CAASC,MAAT,GAAkBH,WAAW,CAACI,UAA9B,GAA2CJ,WAAW,CAACK,aAAvD,GAAuEN,WAAW,CAACO,SAAnF,GAA+FP,WAAW,CAACQ,YAA3G,GAA0HnE,aAAvL;EACA,IAAIM,GAAG,GAAGD,UAAU,EAApB;EACAqD,IAAI,CAACU,KAAL,CAAWC,KAAX,CAAiB/D,GAAjB;EACA,IAAIgE,KAAK,GAAGhE,GAAG,CAAC+C,QAAJ,EAAZ;EACA,IAAIU,MAAM,GAAGQ,IAAI,CAACC,GAAL,CAASX,QAAT,EAAmBvD,GAAG,CAACiD,SAAJ,EAAnB,CAAb;EACA,OAAO;IACLQ,MAAM,EAAEA,MADH;IAELO,KAAK,EAAEA;EAFF,CAAP;AAID,CAZD;;AAcA,IAAIG,QAAQ,GAAG7E,CAAC,CAAC8E,MAAF,CAAS,CAAT,EAAYlB,aAAZ,CAAf;;AAEA9D,OAAO,CAACF,OAAR,GAAkBiF,QAAlB"},"metadata":{},"sourceType":"script"}