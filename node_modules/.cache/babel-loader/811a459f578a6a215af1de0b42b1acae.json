{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _asyncToGenerator = require('@babel/runtime/helpers/asyncToGenerator');\n\nvar _extends = require('@babel/runtime/helpers/extends');\n\nvar _regeneratorRuntime = require('@babel/runtime/regenerator');\n\nvar _objectWithoutPropertiesLoose = require('@babel/runtime/helpers/objectWithoutPropertiesLoose');\n\nrequire('is-url');\n\nvar fetch = require('cross-fetch');\n\nvar fontkit = require('@react-pdf/fontkit');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar _asyncToGenerator__default = /*#__PURE__*/_interopDefaultLegacy(_asyncToGenerator);\n\nvar _extends__default = /*#__PURE__*/_interopDefaultLegacy(_extends);\n\nvar _regeneratorRuntime__default = /*#__PURE__*/_interopDefaultLegacy(_regeneratorRuntime);\n\nvar _objectWithoutPropertiesLoose__default = /*#__PURE__*/_interopDefaultLegacy(_objectWithoutPropertiesLoose);\n\nvar fetch__default = /*#__PURE__*/_interopDefaultLegacy(fetch);\n\nvar fontkit__default = /*#__PURE__*/_interopDefaultLegacy(fontkit);\n\nvar _excluded = [\"src\", \"fontWeight\", \"fontStyle\"];\nvar FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900\n};\n\nvar fetchFont = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator__default[\"default\"]( /*#__PURE__*/_regeneratorRuntime__default[\"default\"].mark(function _callee(src, options) {\n    var response, buffer;\n    return _regeneratorRuntime__default[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch__default[\"default\"](src, options);\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.buffer ? response.buffer() : response.arrayBuffer();\n\n          case 5:\n            buffer = _context.sent;\n            return _context.abrupt(\"return\", buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchFont(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar isDataUrl = function isDataUrl(dataUrl) {\n  var header = dataUrl.split(',')[0];\n  var hasDataPrefix = header.substring(0, 5) === 'data:';\n  var hasBase64Prefix = header.split(';')[1] === 'base64';\n  return hasDataPrefix && hasBase64Prefix;\n};\n\nvar resolveFontWeight = function resolveFontWeight(value) {\n  return typeof value === 'string' ? FONT_WEIGHTS[value] : value;\n};\n\nvar sortByFontWeight = function sortByFontWeight(a, b) {\n  return a.fontWeight - b.fontWeight;\n};\n\nvar FontSource = /*#__PURE__*/function () {\n  function FontSource(src, fontFamily, fontStyle, fontWeight, options) {\n    this.src = src;\n    this.fontFamily = fontFamily;\n    this.fontStyle = fontStyle || 'normal';\n    this.fontWeight = fontWeight || 400;\n    this.data = null;\n    this.loading = false;\n    this.options = options;\n  }\n\n  var _proto = FontSource.prototype;\n\n  _proto.load = /*#__PURE__*/function () {\n    var _load = _asyncToGenerator__default[\"default\"]( /*#__PURE__*/_regeneratorRuntime__default[\"default\"].mark(function _callee2() {\n      var _this = this;\n\n      var postscriptName, _this$options, headers, body, _this$options$method, method, data;\n\n      return _regeneratorRuntime__default[\"default\"].wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.loading = true;\n              postscriptName = this.options.postscriptName;\n\n              if (!isDataUrl(this.src)) {\n                _context2.next = 6;\n                break;\n              }\n\n              this.data = fontkit__default[\"default\"].create(Buffer.from(this.src.split(',')[1], 'base64'), postscriptName);\n              _context2.next = 17;\n              break;\n\n            case 6:\n              _this$options = this.options, headers = _this$options.headers, body = _this$options.body, _this$options$method = _this$options.method, method = _this$options$method === void 0 ? 'GET' : _this$options$method;\n              _context2.next = 10;\n              return fetchFont(this.src, {\n                method: method,\n                body: body,\n                headers: headers\n              });\n\n            case 10:\n              data = _context2.sent;\n              this.data = fontkit__default[\"default\"].create(data, postscriptName);\n              _context2.next = 17;\n              break;\n\n            case 14:\n              _context2.next = 16;\n              return new Promise(function (resolve, reject) {\n                return fontkit__default[\"default\"].open(_this.src, postscriptName, function (err, data) {\n                  return err ? reject(err) : resolve(data);\n                });\n              });\n\n            case 16:\n              this.data = _context2.sent;\n\n            case 17:\n              this.loading = false;\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function load() {\n      return _load.apply(this, arguments);\n    }\n\n    return load;\n  }();\n\n  return FontSource;\n}();\n\nvar Font = /*#__PURE__*/function () {\n  Font.create = function create(family) {\n    return new Font(family);\n  };\n\n  function Font(family) {\n    this.family = family;\n    this.sources = [];\n  }\n\n  var _proto2 = Font.prototype;\n\n  _proto2.register = function register(_ref2) {\n    var src = _ref2.src,\n        fontWeight = _ref2.fontWeight,\n        fontStyle = _ref2.fontStyle,\n        options = _objectWithoutPropertiesLoose__default[\"default\"](_ref2, _excluded);\n\n    var numericFontWeight = resolveFontWeight(fontWeight);\n    this.sources.push(new FontSource(src, this.family, fontStyle, numericFontWeight, options));\n  };\n\n  _proto2.resolve = function resolve(descriptor) {\n    var _descriptor$fontWeigh = descriptor.fontWeight,\n        fontWeight = _descriptor$fontWeigh === void 0 ? 400 : _descriptor$fontWeigh,\n        _descriptor$fontStyle = descriptor.fontStyle,\n        fontStyle = _descriptor$fontStyle === void 0 ? 'normal' : _descriptor$fontStyle;\n    var styleSources = this.sources.filter(function (s) {\n      return s.fontStyle === fontStyle;\n    }); // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n\n    var exactFit = styleSources.find(function (s) {\n      return s.fontWeight === fontWeight;\n    });\n    if (exactFit) return exactFit;\n    var res;\n\n    if (fontWeight >= 400 && fontWeight <= 500) {\n      var leftOffset = styleSources.filter(function (s) {\n        return s.fontWeight <= fontWeight;\n      });\n      var rightOffset = styleSources.filter(function (s) {\n        return s.fontWeight > 500;\n      });\n      var fit = styleSources.filter(function (s) {\n        return s.fontWeight >= fontWeight && s.fontWeight < 500;\n      });\n      res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n    }\n\n    var lt = styleSources.filter(function (s) {\n      return s.fontWeight < fontWeight;\n    }).sort(sortByFontWeight);\n    var gt = styleSources.filter(function (s) {\n      return s.fontWeight > fontWeight;\n    }).sort(sortByFontWeight);\n\n    if (fontWeight < 400) {\n      res = lt[lt.length - 1] || gt[0];\n    }\n\n    if (fontWeight > 500) {\n      res = gt[0] || lt[lt.length - 1];\n    }\n\n    if (!res) {\n      throw new Error(\"Could not resolve font for \" + this.family + \", fontWeight \" + fontWeight);\n    }\n\n    return res;\n  };\n\n  return Font;\n}();\n\nvar standard = ['Courier', 'Courier-Bold', 'Courier-Oblique', 'Helvetica', 'Helvetica-Bold', 'Helvetica-Oblique', 'Times-Roman', 'Times-Bold', 'Times-Italic'];\n\nfunction FontStore() {\n  var _this = this;\n\n  var fonts = {};\n  var emojiSource = null;\n  var hyphenationCallback = null;\n\n  this.register = function (data) {\n    var family = data.family;\n\n    if (!fonts[family]) {\n      fonts[family] = Font.create(family);\n    } // Bulk loading\n\n\n    if (data.fonts) {\n      for (var i = 0; i < data.fonts.length; i += 1) {\n        fonts[family].register(_extends__default[\"default\"]({\n          family: family\n        }, data.fonts[i]));\n      }\n    } else {\n      fonts[family].register(data);\n    }\n  };\n\n  this.registerEmojiSource = function (_ref) {\n    var url = _ref.url,\n        _ref$format = _ref.format,\n        format = _ref$format === void 0 ? 'png' : _ref$format;\n    emojiSource = {\n      url: url,\n      format: format\n    };\n  };\n\n  this.registerHyphenationCallback = function (callback) {\n    hyphenationCallback = callback;\n  };\n\n  this.getFont = function (descriptor) {\n    var fontFamily = descriptor.fontFamily;\n    var isStandard = standard.includes(fontFamily);\n    if (isStandard) return null;\n\n    if (!fonts[fontFamily]) {\n      throw new Error(\"Font family not registered: \" + fontFamily + \". Please register it calling Font.register() method.\");\n    }\n\n    return fonts[fontFamily].resolve(descriptor);\n  };\n\n  this.load = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator__default[\"default\"]( /*#__PURE__*/_regeneratorRuntime__default[\"default\"].mark(function _callee(descriptor) {\n      var fontFamily, isStandard, f;\n      return _regeneratorRuntime__default[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              fontFamily = descriptor.fontFamily;\n              isStandard = standard.includes(fontFamily);\n\n              if (!isStandard) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 4:\n              f = _this.getFont(descriptor); // We cache the font to avoid fetching it many times\n\n              if (!(!f.data && !f.loading)) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 8;\n              return f.load();\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  this.reset = function () {\n    var keys = Object.keys(fonts);\n\n    for (var i = 0; i < keys.length; i += 1) {\n      var key = keys[i];\n      fonts[key].data = null;\n    }\n  };\n\n  this.clear = function () {\n    fonts = {};\n  };\n\n  this.getRegisteredFonts = function () {\n    return fonts;\n  };\n\n  this.getEmojiSource = function () {\n    return emojiSource;\n  };\n\n  this.getHyphenationCallback = function () {\n    return hyphenationCallback;\n  };\n\n  this.getRegisteredFontFamilies = function () {\n    return Object.keys(fonts);\n  };\n}\n\nexports[\"default\"] = FontStore;","map":{"version":3,"mappings":"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","names":["FONT_WEIGHTS","thin","hairline","ultralight","extralight","light","normal","medium","semibold","demibold","bold","ultrabold","extrabold","heavy","black","fetchFont","src","options","_context","fetch","response","buffer","arrayBuffer","constructor","name","Buffer","from","isDataUrl","header","dataUrl","split","hasDataPrefix","substring","hasBase64Prefix","resolveFontWeight","value","sortByFontWeight","a","b","fontWeight","FontSource","fontFamily","fontStyle","data","loading","load","postscriptName","_context2","fontkit","create","_this$options","headers","body","method","Promise","resolve","reject","open","_this","err","Font","family","sources","register","numericFontWeight","push","descriptor","styleSources","filter","s","exactFit","find","res","leftOffset","rightOffset","fit","length","lt","sort","gt","Error","FontStore","fonts","emojiSource","hyphenationCallback","font","i","registerEmojiSource","url","format","registerHyphenationCallback","callback","getFont","isStandard","standard","includes","f","reset","keys","Object","key","clear","getRegisteredFonts","getEmojiSource","getHyphenationCallback","getRegisteredFontFamilies"],"sources":["/home/carlobottaro/Documents/Università/gamification/node_modules/@react-pdf/font/src/font.js","/home/carlobottaro/Documents/Università/gamification/node_modules/@react-pdf/font/src/standard.js","/home/carlobottaro/Documents/Università/gamification/node_modules/@react-pdf/font/src/index.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\n\nimport isUrl from 'is-url';\nimport fetch from 'cross-fetch';\nimport fontkit from '@react-pdf/fontkit';\n\nconst FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900,\n};\n\nconst fetchFont = async (src, options) => {\n  const response = await fetch(src, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst isDataUrl = dataUrl => {\n  const header = dataUrl.split(',')[0];\n  const hasDataPrefix = header.substring(0, 5) === 'data:';\n  const hasBase64Prefix = header.split(';')[1] === 'base64';\n\n  return hasDataPrefix && hasBase64Prefix;\n};\n\nconst resolveFontWeight = value => {\n  return typeof value === 'string' ? FONT_WEIGHTS[value] : value;\n};\n\nconst sortByFontWeight = (a, b) => a.fontWeight - b.fontWeight;\n\nclass FontSource {\n  constructor(src, fontFamily, fontStyle, fontWeight, options) {\n    this.src = src;\n    this.fontFamily = fontFamily;\n    this.fontStyle = fontStyle || 'normal';\n    this.fontWeight = fontWeight || 400;\n\n    this.data = null;\n    this.loading = false;\n    this.options = options;\n  }\n\n  async load() {\n    this.loading = true;\n\n    const { postscriptName } = this.options;\n\n    if (isDataUrl(this.src)) {\n      this.data = fontkit.create(\n        Buffer.from(this.src.split(',')[1], 'base64'),\n        postscriptName,\n      );\n    } else if (BROWSER || isUrl(this.src)) {\n      const { headers, body, method = 'GET' } = this.options;\n      const data = await fetchFont(this.src, { method, body, headers });\n      this.data = fontkit.create(data, postscriptName);\n    } else {\n      this.data = await new Promise((resolve, reject) =>\n        fontkit.open(this.src, postscriptName, (err, data) =>\n          err ? reject(err) : resolve(data),\n        ),\n      );\n    }\n\n    this.loading = false;\n  }\n}\n\nclass Font {\n  static create(family) {\n    return new Font(family);\n  }\n\n  constructor(family) {\n    this.family = family;\n    this.sources = [];\n  }\n\n  register({ src, fontWeight, fontStyle, ...options }) {\n    const numericFontWeight = resolveFontWeight(fontWeight);\n\n    this.sources.push(\n      new FontSource(src, this.family, fontStyle, numericFontWeight, options),\n    );\n  }\n\n  resolve(descriptor) {\n    const { fontWeight = 400, fontStyle = 'normal' } = descriptor;\n    const styleSources = this.sources.filter(s => s.fontStyle === fontStyle);\n\n    // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    const exactFit = styleSources.find(s => s.fontWeight === fontWeight);\n\n    if (exactFit) return exactFit;\n\n    let res;\n\n    if (fontWeight >= 400 && fontWeight <= 500) {\n      const leftOffset = styleSources.filter(s => s.fontWeight <= fontWeight);\n      const rightOffset = styleSources.filter(s => s.fontWeight > 500);\n      const fit = styleSources.filter(\n        s => s.fontWeight >= fontWeight && s.fontWeight < 500,\n      );\n\n      res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n    }\n\n    const lt = styleSources\n      .filter(s => s.fontWeight < fontWeight)\n      .sort(sortByFontWeight);\n    const gt = styleSources\n      .filter(s => s.fontWeight > fontWeight)\n      .sort(sortByFontWeight);\n\n    if (fontWeight < 400) {\n      res = lt[lt.length - 1] || gt[0];\n    }\n\n    if (fontWeight > 500) {\n      res = gt[0] || lt[lt.length - 1];\n    }\n\n    if (!res) {\n      throw new Error(\n        `Could not resolve font for ${this.family}, fontWeight ${fontWeight}`,\n      );\n    }\n\n    return res;\n  }\n}\n\nexport default Font;\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","import font from './font';\nimport standard from './standard';\n\nfunction FontStore() {\n  let fonts = {};\n\n  let emojiSource = null;\n\n  let hyphenationCallback = null;\n\n  this.register = data => {\n    const { family } = data;\n\n    if (!fonts[family]) {\n      fonts[family] = font.create(family);\n    }\n\n    // Bulk loading\n    if (data.fonts) {\n      for (let i = 0; i < data.fonts.length; i += 1) {\n        fonts[family].register({ family, ...data.fonts[i] });\n      }\n    } else {\n      fonts[family].register(data);\n    }\n  };\n\n  this.registerEmojiSource = ({ url, format = 'png' }) => {\n    emojiSource = { url, format };\n  };\n\n  this.registerHyphenationCallback = callback => {\n    hyphenationCallback = callback;\n  };\n\n  this.getFont = descriptor => {\n    const { fontFamily } = descriptor;\n    const isStandard = standard.includes(fontFamily);\n\n    if (isStandard) return null;\n\n    if (!fonts[fontFamily]) {\n      throw new Error(\n        `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n      );\n    }\n\n    return fonts[fontFamily].resolve(descriptor);\n  };\n\n  this.load = async descriptor => {\n    const { fontFamily } = descriptor;\n    const isStandard = standard.includes(fontFamily);\n\n    if (isStandard) return;\n\n    const f = this.getFont(descriptor);\n\n    // We cache the font to avoid fetching it many times\n    if (!f.data && !f.loading) {\n      await f.load();\n    }\n  };\n\n  this.reset = () => {\n    const keys = Object.keys(fonts);\n\n    for (let i = 0; i < keys.length; i += 1) {\n      const key = keys[i];\n      fonts[key].data = null;\n    }\n  };\n\n  this.clear = () => {\n    fonts = {};\n  };\n\n  this.getRegisteredFonts = () => fonts;\n\n  this.getEmojiSource = () => emojiSource;\n\n  this.getHyphenationCallback = () => hyphenationCallback;\n\n  this.getRegisteredFontFamilies = () => Object.keys(fonts);\n}\n\nexport default FontStore;\n"]},"metadata":{},"sourceType":"script"}