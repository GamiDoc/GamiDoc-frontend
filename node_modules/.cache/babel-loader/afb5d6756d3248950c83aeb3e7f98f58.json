{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _yoga = _interopRequireDefault(require(\"@react-pdf/yoga\"));\n\nvar _upperFirst = _interopRequireDefault(require(\"../utils/upperFirst\"));\n\nvar _matchPercent = _interopRequireDefault(require(\"../utils/matchPercent\"));\n/* eslint-disable no-unused-expressions */\n\n\nvar isNotNil = R.complement(R.isNil);\n/**\n * Set generic yoga attribute to node's Yoga instance, handing `auto`, edges and percentage cases\n *\n * @param {String} property\n * @param {Number} edge\n * @param {any} value\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setYogaValue = function setYogaValue(attr, edge) {\n  return function (value) {\n    return function (node) {\n      var yogaNode = node._yogaNode;\n\n      if (!R.isNil(value) && yogaNode) {\n        var hasEdge = isNotNil(edge);\n        var fixedMethod = \"set\" + (0, _upperFirst.default)(attr);\n        var autoMethod = fixedMethod + \"Auto\";\n        var percentMethod = fixedMethod + \"Percent\";\n        var percent = (0, _matchPercent.default)(value);\n\n        if (percent && !yogaNode[percentMethod]) {\n          throw new Error(\"You can't pass percentage values to \" + attr + \" property\");\n        }\n\n        if (percent) {\n          if (hasEdge) {\n            var _yogaNode$percentMeth;\n\n            (_yogaNode$percentMeth = yogaNode[percentMethod]) === null || _yogaNode$percentMeth === void 0 ? void 0 : _yogaNode$percentMeth.call(yogaNode, edge, percent.value);\n          } else {\n            var _yogaNode$percentMeth2;\n\n            (_yogaNode$percentMeth2 = yogaNode[percentMethod]) === null || _yogaNode$percentMeth2 === void 0 ? void 0 : _yogaNode$percentMeth2.call(yogaNode, percent.value);\n          }\n        } else if (value === 'auto') {\n          if (hasEdge) {\n            var _yogaNode$autoMethod;\n\n            (_yogaNode$autoMethod = yogaNode[autoMethod]) === null || _yogaNode$autoMethod === void 0 ? void 0 : _yogaNode$autoMethod.call(yogaNode, edge);\n          } else if (attr === 'flexBasis') {\n            // YogaNode.setFlexBasisAuto is missing (#766)\n            yogaNode.setFlexBasis(_yoga.default.UNIT_AUTO);\n          } else {\n            var _yogaNode$autoMethod2;\n\n            (_yogaNode$autoMethod2 = yogaNode[autoMethod]) === null || _yogaNode$autoMethod2 === void 0 ? void 0 : _yogaNode$autoMethod2.call(yogaNode);\n          }\n        } else if (hasEdge) {\n          var _yogaNode$fixedMethod;\n\n          (_yogaNode$fixedMethod = yogaNode[fixedMethod]) === null || _yogaNode$fixedMethod === void 0 ? void 0 : _yogaNode$fixedMethod.call(yogaNode, edge, value);\n        } else {\n          var _yogaNode$fixedMethod2;\n\n          (_yogaNode$fixedMethod2 = yogaNode[fixedMethod]) === null || _yogaNode$fixedMethod2 === void 0 ? void 0 : _yogaNode$fixedMethod2.call(yogaNode, value);\n        }\n      }\n\n      return node;\n    };\n  };\n};\n\nvar _default = setYogaValue;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","R","_yoga","_upperFirst","_matchPercent","isNotNil","complement","isNil","setYogaValue","attr","edge","value","node","yogaNode","_yogaNode","hasEdge","fixedMethod","autoMethod","percentMethod","percent","Error","_yogaNode$percentMeth","call","_yogaNode$percentMeth2","_yogaNode$autoMethod","setFlexBasis","UNIT_AUTO","_yogaNode$autoMethod2","_yogaNode$fixedMethod","_yogaNode$fixedMethod2","_default"],"sources":["/home/carlobottaro/Documents/Universit√†/gamification/node_modules/@react-pdf/layout/lib/node/setYogaValue.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _yoga = _interopRequireDefault(require(\"@react-pdf/yoga\"));\n\nvar _upperFirst = _interopRequireDefault(require(\"../utils/upperFirst\"));\n\nvar _matchPercent = _interopRequireDefault(require(\"../utils/matchPercent\"));\n\n/* eslint-disable no-unused-expressions */\nvar isNotNil = R.complement(R.isNil);\n/**\n * Set generic yoga attribute to node's Yoga instance, handing `auto`, edges and percentage cases\n *\n * @param {String} property\n * @param {Number} edge\n * @param {any} value\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setYogaValue = function setYogaValue(attr, edge) {\n  return function (value) {\n    return function (node) {\n      var yogaNode = node._yogaNode;\n\n      if (!R.isNil(value) && yogaNode) {\n        var hasEdge = isNotNil(edge);\n        var fixedMethod = \"set\" + (0, _upperFirst.default)(attr);\n        var autoMethod = fixedMethod + \"Auto\";\n        var percentMethod = fixedMethod + \"Percent\";\n        var percent = (0, _matchPercent.default)(value);\n\n        if (percent && !yogaNode[percentMethod]) {\n          throw new Error(\"You can't pass percentage values to \" + attr + \" property\");\n        }\n\n        if (percent) {\n          if (hasEdge) {\n            var _yogaNode$percentMeth;\n\n            (_yogaNode$percentMeth = yogaNode[percentMethod]) === null || _yogaNode$percentMeth === void 0 ? void 0 : _yogaNode$percentMeth.call(yogaNode, edge, percent.value);\n          } else {\n            var _yogaNode$percentMeth2;\n\n            (_yogaNode$percentMeth2 = yogaNode[percentMethod]) === null || _yogaNode$percentMeth2 === void 0 ? void 0 : _yogaNode$percentMeth2.call(yogaNode, percent.value);\n          }\n        } else if (value === 'auto') {\n          if (hasEdge) {\n            var _yogaNode$autoMethod;\n\n            (_yogaNode$autoMethod = yogaNode[autoMethod]) === null || _yogaNode$autoMethod === void 0 ? void 0 : _yogaNode$autoMethod.call(yogaNode, edge);\n          } else if (attr === 'flexBasis') {\n            // YogaNode.setFlexBasisAuto is missing (#766)\n            yogaNode.setFlexBasis(_yoga.default.UNIT_AUTO);\n          } else {\n            var _yogaNode$autoMethod2;\n\n            (_yogaNode$autoMethod2 = yogaNode[autoMethod]) === null || _yogaNode$autoMethod2 === void 0 ? void 0 : _yogaNode$autoMethod2.call(yogaNode);\n          }\n        } else if (hasEdge) {\n          var _yogaNode$fixedMethod;\n\n          (_yogaNode$fixedMethod = yogaNode[fixedMethod]) === null || _yogaNode$fixedMethod === void 0 ? void 0 : _yogaNode$fixedMethod.call(yogaNode, edge, value);\n        } else {\n          var _yogaNode$fixedMethod2;\n\n          (_yogaNode$fixedMethod2 = yogaNode[fixedMethod]) === null || _yogaNode$fixedMethod2 === void 0 ? void 0 : _yogaNode$fixedMethod2.call(yogaNode, value);\n        }\n      }\n\n      return node;\n    };\n  };\n};\n\nvar _default = setYogaValue;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}